org jhotdraw draw import org jhotdraw util * import awt * import awt geom * import org jhotdraw draw AttributeKeys attribute keys * import org jhotdraw geom * ChopBoxConnector chop box connector AbstractConnector connector { ChopBoxConnector chop box connector { } ChopBoxConnector chop box connector figure owner { super owner } Point2D point2 findStart find start ConnectionFigure connection figure connection { figure startFigure start figure = connection getStartConnector get start connector getOwner get owner Point2D point2 from if connection getPointCount get point count <= 2 || connection getLiner get liner != { if connection getEndConnector get connector == { from = connection getEndPoint get point } else { Rectangle2D rectangle2 r1 = getConnectorTarget get connector target connection getEndConnector get connector getOwner get owner getBounds get bounds from = new Point2D point2 r1 + r1 width/2 r1 + r1 height/2 } } else { from = connection getPoint get point 1 } chop startFigure start figure from } Point2D point2 findEnd find ConnectionFigure connection figure connection { figure endFigure figure = connection getEndConnector get connector getOwner get owner Point2D point2 from if connection getPointCount get point count <= 2 || connection getLiner get liner != { if connection getStartConnector get start connector == { from = connection getStartPoint get start point } else { Rectangle2D rectangle2 r1 = getConnectorTarget get connector target connection getStartConnector get start connector getOwner get owner getBounds get bounds from = new Point2D point2 r1 + r1 width/2 r1 + r1 height/2 } } else { from = connection getPoint get point connection getPointCount get point count 2 } chop endFigure figure from } Point2D point2 chop figure target Point2D point2 from { target = getConnectorTarget get connector target target Rectangle2D rectangle2 = target getBounds get bounds if STROKE_COLOR get target != { grow switch STROKE_PLACEMENT get target { case CENTER default grow = AttributeKeys attribute keys getStrokeTotalWidth get stroke total width target / 2d break case OUTSIDE sid grow = AttributeKeys attribute keys getStrokeTotalWidth get stroke total width target break case INSIDE sid grow = 0d break } geom grow grow grow } geom angleToPoint angle to point geom pointToAngle point to angle from } } 