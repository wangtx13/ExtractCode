org jhotdraw samples pert figures import IOException import org jhotdraw samples * import awt geom * import beans * import org jhotdraw draw AttributeKeys attribute keys * import util * import org jhotdraw draw * import org jhotdraw geom * import org jhotdraw util * import org jhotdraw xml * TaskFigure task figure GraphicalCompositeFigure graphical composite figure { private HashSet<DependencyFigure> hash set< dependency figure> dependencies private startTime start time private NameAdapter adapter AbstractFigureListener figure listener { private TaskFigure task figure target NameAdapter adapter TaskFigure task figure target { this target = target } figureAttributeChanged figure attribute changed FigureEvent figure event { } } private DurationAdapter duration adapter AbstractFigureListener figure listener { private TaskFigure task figure target DurationAdapter duration adapter TaskFigure task figure target { this target = target } figureAttributeChanged figure attribute changed FigureEvent figure event evt { for TaskFigure task figure succ target getSuccessors get successors { succ updateStartTime update start time } } } TaskFigure task figure { super new RectangleFigure rectangle figure setLayouter set layouter new VerticalLayouter vertical layouter RectangleFigure rectangle figure nameCompartmentPF compartment = new RectangleFigure rectangle figure STROKE_COLOR set nameCompartmentPF compartment nameCompartmentPF compartment setAttributeEnabled set attribute enabled STROKE_COLOR FILL_COLOR set nameCompartmentPF compartment nameCompartmentPF compartment setAttributeEnabled set attribute enabled FILL_COLOR ListFigure list figure nameCompartment compartment = new ListFigure list figure nameCompartmentPF compartment ListFigure list figure attributeCompartment attribute compartment = new ListFigure list figure SeparatorLineFigure separator line figure separator1 = new SeparatorLineFigure separator line figure applyAttributes apply attributes getPresentationFigure get presentation figure add nameCompartment compartment add separator1 add attributeCompartment attribute compartment Insets2DDouble insets2 insets = new Insets2DDouble insets2 4 8 4 8 LAYOUT_INSETS set nameCompartment compartment insets LAYOUT_INSETS set attributeCompartment attribute compartment insets TextFigure text figure nameFigure figure nameCompartment compartment add nameFigure figure = new TextFigure text figure FONT_BOLD set nameFigure figure nameFigure figure setAttributeEnabled set attribute enabled FONT_BOLD TextFigure text figure durationFigure duration figure attributeCompartment attribute compartment add durationFigure duration figure = new TextFigure text figure FONT_BOLD set durationFigure duration figure durationFigure duration figure setText set text 0 durationFigure duration figure setAttributeEnabled set attribute enabled FONT_BOLD TextFigure text figure startTimeFigure start time figure attributeCompartment attribute compartment add startTimeFigure start time figure = new TextFigure text figure startTimeFigure start time figure setEditable set editable startTimeFigure start time figure setText set text 0 startTimeFigure start time figure setAttributeEnabled set attribute enabled FONT_BOLD applyAttributes apply attributes this setAttributeEnabled set attribute enabled STROKE_DASHES ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw samples pert labels setName set labels getString get taskDefaultName task default setDuration set duration 0 startTime start time = 0 dependencies = new HashSet<DependencyFigure> hash set< dependency figure> nameFigure figure addFigureListener add figure listener new NameAdapter adapter this durationFigure duration figure addFigureListener add figure listener new DurationAdapter duration adapter this } Collection<Handle> collection< handle> createHandles create handles detailLevel detail level { List<Handle> list< handle> handles = new LinkedList<Handle> linked list< handle> if detailLevel detail level == 0 { handles add new MoveHandle move handle this RelativeLocator relative locator northWest north west handles add new MoveHandle move handle this RelativeLocator relative locator northEast north east handles add new MoveHandle move handle this RelativeLocator relative locator southWest south west handles add new MoveHandle move handle this RelativeLocator relative locator southEast south east handles add new ConnectionHandle connection handle this RelativeLocator relative locator east new DependencyFigure dependency figure } handles } setName set newValue new value { getNameFigure get figure setText set text newValue new value } getName get { getNameFigure get figure getText get text } setDuration set duration newValue new value { oldValue old value = getDuration get duration getDurationFigure get duration figure setText set text integer toString to newValue new value if oldValue old value != newValue new value { for TaskFigure task figure succ getSuccessors get successors { succ updateStartTime update start time } } } getDuration get duration { try { integer valueOf value of getDurationFigure get duration figure getText get text } catch NumberFormatException number format { 0 } } updateStartTime update start time { oldValue old value = getStartTime get start time newValue new value = 0 for TaskFigure task figure getPredecessors get predecessors { newValue new value = math max newValue new value getStartTime get start time + getDuration get duration } getStartTimeFigure get start time figure setText set text integer toString to newValue new value if newValue new value != oldValue old value { for TaskFigure task figure succ getSuccessors get successors { if ! this isDependentOf dependent of succ { succ updateStartTime update start time } } } if oldValue old value != newValue new value { fireAreaInvalidated fire area invalidated } } getStartTime get start time { try { integer valueOf value of getStartTimeFigure get start time figure getText get text } catch NumberFormatException number format { 0 } } private TextFigure text figure getNameFigure get figure { TextFigure text figure ListFigure list figure getChild get child 0 getChild get child 0 } private TextFigure text figure getDurationFigure get duration figure { TextFigure text figure ListFigure list figure getChild get child 2 getChild get child 0 } private TextFigure text figure getStartTimeFigure get start time figure { TextFigure text figure ListFigure list figure getChild get child 2 getChild get child 1 } private applyAttributes apply attributes figure { Map<AttributeKey map< attribute key object> attr = AttributedFigure attributed figure getPresentationFigure get presentation figure getAttributes get attributes for map Entry<AttributeKey entry< attribute key object> entry attr entrySet entry set { setAttribute set attribute entry getKey get key entry getValue get value } } TaskFigure task figure clone { TaskFigure task figure that = TaskFigure task figure super clone that dependencies = new HashSet<DependencyFigure> hash set< dependency figure> that getNameFigure get figure addFigureListener add figure listener new NameAdapter adapter that that getDurationFigure get duration figure addFigureListener add figure listener new DurationAdapter duration adapter that that updateStartTime update start time that } read DOMInput dom input IOException { = getAttribute get attribute 0d = getAttribute get attribute 0d = getAttribute get attribute 0d = getAttribute get attribute 0d setBounds set bounds new Point2D point2 new Point2D point2 x+w y+h readAttributes read attributes openElement open element model openElement open element setName set readObject read closeElement close element openElement open element duration setDuration set duration integer readObject read closeElement close element closeElement close element } write DOMOutput dom output out IOException { Rectangle2D rectangle2 = getBounds get bounds out addAttribute add attribute out addAttribute add attribute writeAttributes write attributes out out openElement open element model out openElement open element out writeObject write getName get out closeElement close element out openElement open element duration out writeObject write getDuration get duration out closeElement close element out closeElement close element } getLayer get layer { 0 } Set<DependencyFigure> set< dependency figure> getDependencies get dependencies { collections unmodifiableSet unmodifiable set dependencies } addDependency add dependency DependencyFigure dependency figure { dependencies add updateStartTime update start time } removeDependency remove dependency DependencyFigure dependency figure { dependencies remove updateStartTime update start time } List<TaskFigure> list< task figure> getSuccessors get successors { LinkedList<TaskFigure> linked list< task figure> list = new LinkedList<TaskFigure> linked list< task figure> for DependencyFigure dependency figure getDependencies get dependencies { if getStartFigure get start figure == this { list add TaskFigure task figure getEndFigure get figure } } list } List<TaskFigure> list< task figure> getPredecessors get predecessors { LinkedList<TaskFigure> linked list< task figure> list = new LinkedList<TaskFigure> linked list< task figure> for DependencyFigure dependency figure getDependencies get dependencies { if getEndFigure get figure == this { list add TaskFigure task figure getStartFigure get start figure } } list } isDependentOf dependent of TaskFigure task figure { if this == for TaskFigure task figure getPredecessors get predecessors { if isDependentOf dependent of { } } } toString to { TaskFigure# task figure# +hashCode +hash + +getName +get + +getDuration +get duration + +getStartTime +get start time } } 