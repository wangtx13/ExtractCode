org jhotdraw draw import lang reflect * AttributeKey<T> attribute key< t> { private key private defaultValue default value private isNullValueAllowed value allowed AttributeKey attribute key key { this key } AttributeKey attribute key key defaultValue default value { this key defaultValue default value } AttributeKey attribute key key defaultValue default value isNullValueAllowed value allowed { this key = key this defaultValue default value = defaultValue default value this isNullValueAllowed value allowed = isNullValueAllowed value allowed } getKey get key { key } getDefaultValue get default value { defaultValue default value } get figure { value = getAttribute get attribute this value == ! isNullValueAllowed value allowed ? defaultValue default value value } set figure value { if value == ! isNullValueAllowed value allowed { new NullPointerException pointer value not allowed for AttributeKey attribute key +key } setAttribute set attribute this value } basicSet basic set figure value { if value == ! isNullValueAllowed value allowed { new NullPointerException pointer value not allowed for AttributeKey attribute key +key } basicSetAttribute basic set attribute this value } equals { if instanceof AttributeKey attribute key { AttributeKey attribute key that = AttributeKey attribute key that key equals this key } } hashCode hash { key hashCode hash } toString to { key } isNullValueAllowed value allowed { isNullValueAllowed value allowed } args { TypeVariable type variable = new AttributeKey<Double> attribute key< double> hey getClass get getTypeParameters get type 0 } isAssignable assignable value { if value == { isNullValueAllowed value allowed } try { = value } catch ClassCastException cast { } } } 