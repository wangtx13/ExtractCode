org jhotdraw app action import org jhotdraw util * import org jhotdraw gui * import org jhotdraw gui event * import awt * import awt event * import util * import util prefs * import javax swing * import * import org jhotdraw app application import org jhotdraw app project OpenAction open action AbstractApplicationAction application action { = open OpenAction open action application app { super app ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw app labels labels configureAction configure action this } actionPerformed action performed ActionEvent action event evt { application app = getApplication get application if app isEnabled enabled { app setEnabled set enabled project emptyProject empty project = app getCurrentProject get current project if emptyProject empty project == || emptyProject empty project getFile get != || emptyProject empty project hasUnsavedChanges has unsaved changes { emptyProject empty project = } project if emptyProject empty project == { = app createProject create project app add } else { = emptyProject empty project } JFileChooser chooser fileChooser chooser = getOpenChooser get open chooser if fileChooser chooser showOpenDialog show open dialog app getComponent get component == JFileChooser chooser APPROVE_OPTION { app show openFile open fileChooser chooser } else { app setEnabled set enabled } } } openFile open JFileChooser chooser fileChooser chooser project project { application app = getApplication get application = fileChooser chooser getSelectedFile get selected app setEnabled set enabled multipleOpenId multiple open = 1 for project aProject project app projects { if aProject project != project aProject project getFile get != aProject project getFile get equals { multipleOpenId multiple open = math max multipleOpenId multiple open aProject project getMultipleOpenId get multiple open + 1 } } project setMultipleOpenId set multiple open multipleOpenId multiple open project execute new worker { construct { try { project read } catch throwable { } } finished value { fileOpened opened project value } } } fileOpened opened project project value { application app = getApplication get application if value == { project setFile set project setEnabled set enabled frame = frame SwingUtilities swing utilities getWindowAncestor get window ancestor project getComponent get component if != { setExtendedState set extended state getExtendedState get extended state ~Frame ~ frame ICONIFIED toFront to front } project getComponent get component requestFocus request focus app addRecentFile add recent app setEnabled set enabled } else { if value instanceof throwable { throwable value printStackTrace stack trace } JSheet sheet showMessageSheet show message sheet project getComponent get component <html> +UIManager + manager getString get OptionPane option pane css + <b>Couldn't <b> couldn't open the \ +file+ \ </b><br> + value JOptionPane option pane ERROR_MESSAGE new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { } } } } } 