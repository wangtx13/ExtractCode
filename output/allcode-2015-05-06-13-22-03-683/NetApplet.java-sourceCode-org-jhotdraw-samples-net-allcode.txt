org jhotdraw samples net import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import org jhotdraw xml * NetApplet net applet JApplet applet { private VERSION = 0 5 private NAME = jhotdraw net private NetPanel net panel drawingPanel drawing panel getParameter get { try { super getParameter get } catch NullPointerException pointer { } } init { try { UIManager manager setLookAndFeel set look and feel UIManager manager getSystemLookAndFeelClassName get look and feel } catch throwable { } container = getContentPane get content pane setLayout set layout new BoxLayout box layout BoxLayout box layout Y_AXIS labels = getAppletInfo get applet info split \n for i=0 < labels length i++ { add new JLabel label labels length == 0 ? labels } new SwingWorker swing worker { construct { result try { out getParameter get datafile +getParameter +get datafile if getParameter get data != { NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new NetFactory net factory new StringReader reader getParameter get data result = domi readObject read 0 } else if getParameter get datafile != { InputStream input stream = try { URL url = new URL getDocumentBase get document base getParameter get datafile = url openConnection open connection getInputStream get input stream NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new NetFactory net factory result = domi readObject read 0 } finally { if != close } } else { result = } } catch throwable { result = } result } finished { if getValue get value instanceof throwable { throwable getValue get value printStackTrace stack trace } container = getContentPane get content pane setLayout set layout new BorderLayout border layout removeAll remove all add drawingPanel drawing panel = new NetPanel net panel result = getValue get value initComponents init components if result != { if result instanceof drawing { setDrawing set drawing drawing result } else if result instanceof throwable { getDrawing get drawing add new TextFigure text figure result toString to throwable result printStackTrace stack trace } } validate } } start } private setDrawing set drawing drawing { drawingPanel drawing panel setDrawing set drawing } private drawing getDrawing get drawing { drawingPanel drawing panel getDrawing get drawing } setData set data text { if text != text length > 0 { StringReader reader = new StringReader reader text try { NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new NetFactory net factory domi openElement open element net setDrawing set drawing drawing domi readObject read 0 } catch throwable { getDrawing get drawing clear TextFigure text figure tf = new TextFigure text figure tf setText set text getMessage get message tf setBounds set bounds new Point2D point2 10 10 new Point2D point2 100 100 getDrawing get drawing add tf printStackTrace stack trace } finally { if != close } } } getData get data { CharArrayWriter char writer out = new CharArrayWriter char writer try { NanoXMLLiteDOMOutput nano xml lite dom output domo = new NanoXMLLiteDOMOutput nano xml lite dom output new NetFactory net factory domo openElement open element net domo writeObject write getDrawing get drawing domo closeElement close element domo save out } catch IOException { TextFigure text figure tf = new TextFigure text figure tf setText set text getMessage get message tf setBounds set bounds new Point2D point2 10 10 new Point2D point2 100 100 getDrawing get drawing add tf printStackTrace stack trace } finally { if out != out close } out toString to } getParameterInfo get info { new { { data the data to be displayed by this applet } { datafile URL URL to containing the data to be displayed by this applet } } } getAppletInfo get applet info { NAME+ e+ \nVersion \n +VERSION + + \n\nCopyright \n\n copyright \u00a9 2004 2006 \u00a9 werner randelshofer + \nAlle \n alle rights reserved + \n\nThis \n\n this software based + \nJHotDraw \n jhotdraw \u00a9 1996 1997 IFA informatik und erich gamma + \nNanoXML \n nano xml \u00a9 2000 2002 marc scheemaecker + \n + \nJavaScript \n script can access the drawing data using the setData set data and getData get data } private initComponents init components { toolButtonGroup tool button group = new javax swing ButtonGroup button group } args { SwingUtilities swing utilities invokeLater later new runnable { run { JFrame frame = new JFrame frame jhotdraw net applet setDefaultCloseOperation set default close operation JFrame frame EXIT_ON_CLOSE NetApplet net applet = new NetApplet net applet getContentPane get content pane add init setSize set size 500 400 setVisible set visible start } } } private javax swing ButtonGroup button group toolButtonGroup tool button group } 