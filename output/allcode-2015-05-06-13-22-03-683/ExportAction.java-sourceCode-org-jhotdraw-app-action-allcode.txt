org jhotdraw app action import org jhotdraw gui * import org jhotdraw gui event * import org jhotdraw util * import awt * import awt event * import javax swing * import * import org jhotdraw app application import org jhotdraw app project ExportAction export action AbstractProjectAction project action { = export private component oldFocusOwner old focus owner ExportAction export action application app { super app ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw app labels labels configureAction configure action this } private JFileChooser chooser getExportChooser get export chooser project project { try { JFileChooser chooser project getExportChooser get export chooser } catch throwable { InternalError internal = new InternalError internal project does not support exporting initCause init cause } } actionPerformed action performed ActionEvent action event evt { project project = getCurrentProject get current project if project isEnabled enabled { ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw app labels oldFocusOwner old focus owner = SwingUtilities swing utilities getWindowAncestor get window ancestor project getComponent get component getFocusOwner get focus owner project setEnabled set enabled saveToFile save to JFileChooser chooser fileChooser chooser = getExportChooser get export chooser project JSheet sheet showSheet show sheet fileChooser chooser project getComponent get component labels getString get filechooser export new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { if evt getOption get option == JFileChooser chooser APPROVE_OPTION { = evt getFileChooser get chooser getSelectedFile get selected exportToFile export to project evt getFileChooser get chooser getFileFilter get filter evt getFileChooser get chooser getAccessory get accessory } else { project setEnabled set enabled if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } } } } } } exportToFile export to project project javax swing filechooser FileFilter filter filter component accessory { project execute new worker { construct { try { project export new { javax swing filechooser FileFilter filter component } filter accessory } catch InternalError internal { getCause get cause != ? getCause get cause } catch throwable { } } finished value { fileExported exported project value } } } fileExported exported project project value { if value == { } else { out flush throwable value printStackTrace stack trace JSheet sheet showMessageSheet show message sheet project getComponent get component <html> +UIManager + manager getString get OptionPane option pane css + <b>Couldn't <b> couldn't export to the \ +file+ \ <p> + reason +value JOptionPane option pane ERROR_MESSAGE } project setEnabled set enabled SwingUtilities swing utilities getWindowAncestor get window ancestor project getComponent get component toFront to front if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } } } 