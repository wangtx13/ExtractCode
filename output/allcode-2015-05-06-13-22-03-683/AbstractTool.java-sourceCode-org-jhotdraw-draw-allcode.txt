org jhotdraw draw import org jhotdraw undo CompositeEdit composite edit import awt * import awt geom * import awt event * import javax swing event * import util * AbstractTool tool implements tool { private isActive active isWorking working DrawingEditor drawing editor editor point anchor = new point EventListenerList event listener list listenerList listener list = new EventListenerList event listener list AbstractTool tool { } addUndoableEditListener add undoable edit listener UndoableEditListener undoable edit listener { listenerList listener list add UndoableEditListener undoable edit listener } removeUndoableEditListener remove undoable edit listener UndoableEditListener undoable edit listener { listenerList listener list remove UndoableEditListener undoable edit listener } activate DrawingEditor drawing editor editor { this editor = editor isActive active = } deactivate DrawingEditor drawing editor editor { this editor = editor isActive active = } isActive active { isActive active } DrawingView drawing view getView get view { editor getView get view } DrawingEditor drawing editor getEditor get editor { editor } drawing getDrawing get drawing { getView get view getDrawing get drawing } Point2D point2 viewToDrawing view to drawing point { constrainPoint constrain point getView get view viewToDrawing view to drawing } Point2D point2 constrainPoint constrain point point { constrainPoint constrain point getView get view viewToDrawing view to drawing } Point2D point2 constrainPoint constrain point Point2D point2 { getView get view getConstrainer get constrainer constrainPoint constrain point } editDelete edit delete { getView get view getDrawing get drawing removeAll remove all getView get view getSelectedFigures get selected figures } editCut edit cut { } editCopy edit copy { } editDuplicate edit duplicate { } editPaste edit paste { } keyReleased key released KeyEvent key event evt { fireToolDone fire tool done } keyTyped key typed KeyEvent key event evt { } keyPressed key pressed KeyEvent key event evt { if evt getSource get source instanceof container { editor setView set view editor findView find view container evt getSource get source } CompositeEdit composite edit edit switch evt getKeyCode get key { case KeyEvent key event VK_DELETE case KeyEvent key event VK_BACK_SPACE { editDelete edit delete break } case KeyEvent key event VK_A { if evt getModifiers get modifiers KeyEvent key event CTRL_MASK | KeyEvent key event META_MASK != 0 { getView get view addToSelection add to selection getView get view getDrawing get drawing getFigures get figures } break } case KeyEvent key event VK_LEFT { Collection<Figure> collection< figure> figures = getView get view getSelectedFigures get selected figures AffineTransform affine transform tx = new AffineTransform affine transform tx translate 1 0 for figure figures { willChange will change basicTransform basic transform tx changed } getDrawing get drawing fireUndoableEditHappened fire undoable edit happened new TransformEdit transform edit figures tx break } case KeyEvent key event VK_RIGHT { Collection<Figure> collection< figure> figures = getView get view getSelectedFigures get selected figures AffineTransform affine transform tx = new AffineTransform affine transform tx translate 1 0 for figure figures { willChange will change basicTransform basic transform tx changed } getDrawing get drawing fireUndoableEditHappened fire undoable edit happened new TransformEdit transform edit figures tx break } case KeyEvent key event VK_UP { Collection<Figure> collection< figure> figures = getView get view getSelectedFigures get selected figures AffineTransform affine transform tx = new AffineTransform affine transform tx translate 0 1 for figure figures { willChange will change basicTransform basic transform tx changed } getDrawing get drawing fireUndoableEditHappened fire undoable edit happened new TransformEdit transform edit figures tx break } case KeyEvent key event VK_DOWN { Collection<Figure> collection< figure> figures = getView get view getSelectedFigures get selected figures getDrawing get drawing fireUndoableEditHappened fire undoable edit happened edit = new CompositeEdit composite edit figur verschieben AffineTransform affine transform tx = new AffineTransform affine transform tx translate 0 1 for figure figures { willChange will change basicTransform basic transform tx changed } getDrawing get drawing fireUndoableEditHappened fire undoable edit happened new TransformEdit transform edit figures tx break } } } mouseClicked mouse clicked MouseEvent mouse event evt { } mouseEntered mouse entered MouseEvent mouse event evt { if ! isWorking working { editor setView set view editor findView find view container evt getSource get source } } mouseExited mouse exited MouseEvent mouse event evt { } mouseMoved mouse moved MouseEvent mouse event evt { } mousePressed mouse pressed MouseEvent mouse event evt { DrawingView drawing view view = editor findView find view container evt getSource get source view requestFocus request focus anchor = new point evt getX get evt getY get isWorking working = fireToolStarted fire tool started view } mouseReleased mouse released MouseEvent mouse event evt { isWorking working = } addToolListener add tool listener ToolListener tool listener { listenerList listener list add ToolListener tool listener } removeToolListener remove tool listener ToolListener tool listener { listenerList listener list remove ToolListener tool listener } fireToolStarted fire tool started DrawingView drawing view view { ToolEvent tool event event = listeners = listenerList listener list getListenerList get listener list for = listeners length 2 i>=0 =2 { if listeners == ToolListener tool listener { if event == event = new ToolEvent tool event this view new rectangle 0 0 1 1 ToolListener tool listener listeners i+1 toolStarted tool started event } } } fireToolDone fire tool done { ToolEvent tool event event = listeners = listenerList listener list getListenerList get listener list for = listeners length 2 i>=0 =2 { if listeners == ToolListener tool listener { if event == event = new ToolEvent tool event this getView get view new rectangle 0 0 1 1 ToolListener tool listener listeners i+1 toolDone tool done event } } } fireAreaInvalidated fire area invalidated Rectangle2D rectangle2 { point p1 = getView get view drawingToView drawing to view new Point2D point2 point p2 = getView get view drawingToView drawing to view new Point2D point2 x+r width y+r height fireAreaInvalidated fire area invalidated new rectangle p1 p1 p2 p1 p2 p1 } fireAreaInvalidated fire area invalidated rectangle invalidatedArea invalidated area { ToolEvent tool event event = listeners = listenerList listener list getListenerList get listener list for = listeners length 2 i>=0 =2 { if listeners == ToolListener tool listener { if event == event = new ToolEvent tool event this getView get view invalidatedArea invalidated area ToolListener tool listener listeners i+1 areaInvalidated area invalidated event } } } draw Graphics2D graphics2 { } updateCursor update cursor DrawingView drawing view view point { handle handle = view findHandle find handle if handle != { view setCursor set cursor handle getCursor get cursor } else { figure figure = view findFigure find figure if figure != { view setCursor set cursor figure getCursor get cursor view viewToDrawing view to drawing } else { view setCursor set cursor cursor getDefaultCursor get default cursor } } } } 