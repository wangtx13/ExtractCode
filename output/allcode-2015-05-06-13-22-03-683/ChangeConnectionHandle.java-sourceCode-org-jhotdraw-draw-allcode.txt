org jhotdraw draw import org jhotdraw util * import awt * import awt geom * import util * ChangeConnectionHandle change connection handle AbstractHandle handle { private connector originalTarget original target private figure targetFigure target figure private ConnectionFigure connection figure connection private point start private liner liner ChangeConnectionHandle change connection handle figure owner { super owner setConnection set connection ConnectionFigure connection figure owner setTargetFigure set target figure } isCombinableWith combinable with handle handle { } connector getTarget get target disconnect connect connector setLocation set location Point2D point2 Point2D point2 getLocation get location connector getSource get source { if getTarget get target == getConnection get connection getStartConnector get start connector { getConnection get connection getEndConnector get connector } getConnection get connection getStartConnector get start connector } trackStart track start point anchor modifiersEx modifiers { originalTarget original target = getTarget get target start = anchor liner = connection getLiner get liner connection setLiner set liner } trackStep track step point anchor point modifiersEx modifiers { Point2D point2 = view viewToDrawing view to drawing figure = findConnectableFigure find connectable figure view getDrawing get drawing if != getTargetFigure get target figure { if getTargetFigure get target figure != { getTargetFigure get target figure setConnectorsVisible set connectors visible } setTargetFigure set target figure if getSource get source == { if getTargetFigure get target figure != { getTargetFigure get target figure setConnectorsVisible set connectors visible getConnection get connection } } else { if getTargetFigure get target figure != canConnect can connect getSource get source getOwner get owner getTargetFigure get target figure { getTargetFigure get target figure setConnectorsVisible set connectors visible getConnection get connection } } } connector target = findConnectionTarget find connection target view getDrawing get drawing if target != { = target getAnchor get anchor } setLocation set location } trackEnd track point anchor point modifiersEx modifiers { Point2D point2 = view viewToDrawing view to drawing connector target = findConnectionTarget find connection target view getDrawing get drawing if target == { target = originalTarget original target } setLocation set location if target != originalTarget original target { disconnect connect target } connection setLiner set liner liner getConnection get connection updateConnection update connection if getTargetFigure get target figure != { getTargetFigure get target figure setConnectorsVisible set connectors visible setTargetFigure set target figure } } private connector findConnectionTarget find connection target Point2D point2 drawing drawing { figure targetFigure target figure = findConnectableFigure find connectable figure drawing if getSource get source == targetFigure target figure != { findConnector find connector targetFigure target figure getConnection get connection } else { if targetFigure target figure != targetFigure target figure canConnect can connect targetFigure target figure != originalTarget original target !targetFigure !target figure includes getOwner get owner canConnect can connect getSource get source getOwner get owner targetFigure target figure { findConnector find connector targetFigure target figure getConnection get connection } } } canConnect can connect figure existingEnd existing figure targetEnd target connector findConnector find connector Point2D point2 figure ConnectionFigure connection figure prototype { findConnector find connector prototype } draw Graphics2D graphics2 { drawCircle draw circle getTarget get target == ? color red color green color black } private figure findConnectableFigure find connectable figure Point2D point2 drawing drawing { for figure drawing getFiguresFrontToBack get figures front to back { if ! includes getConnection get connection canConnect can connect contains { } } } setConnection set connection ConnectionFigure connection figure newConnection new connection { connection = newConnection new connection } ConnectionFigure connection figure getConnection get connection { connection } setTargetFigure set target figure figure newTarget new target { targetFigure target figure = newTarget new target } figure getTargetFigure get target figure { targetFigure target figure } rectangle basicGetBounds basic get bounds { point center = view drawingToView drawing to view getLocation get location new rectangle center getHandlesize get handlesize / 2 center getHandlesize get handlesize / 2 getHandlesize get handlesize getHandlesize get handlesize } } 