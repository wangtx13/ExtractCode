org jhotdraw draw import util * import awt * import awt geom * import org jhotdraw geom * import org jhotdraw xml DOMInput dom input import org jhotdraw xml DOMOutput dom output import org jhotdraw xml DOMStorable dom storable ElbowLiner elbow liner implements liner DOMStorable dom storable { ElbowLiner elbow liner { } Collection<Handle> collection< handle> createHandles create handles BezierPath bezier path path { } lineout ConnectionFigure connection figure figure { BezierPath bezier path path = LineConnectionFigure line connection figure figure getBezierPath get bezier path connector start = figure getStartConnector get start connector connector = figure getEndConnector get connector if start == || == || path == { } Point2D point2 = start findStart find start figure Point2D point2 = findEnd find figure path clear path add new BezierPath bezier path node if == || == { path add new BezierPath bezier path node } else { Rectangle2D rectangle2 sb = start getBounds get bounds sb += 5d sb += 5d sb width = 10d sb height = 10d Rectangle2D rectangle2 eb = getBounds get bounds eb += 5d eb += 5d eb width = 10d eb height = 10d soutcode = sb outcode if soutcode == 0 { soutcode = geom outcode sb eb } eoutcode = eb outcode if eoutcode == 0 { eoutcode = geom outcode eb sb } if soutcode geom OUT_TOP | geom OUT_BOTTOM != 0 eoutcode geom OUT_TOP | geom OUT_BOTTOM != 0 { path add new BezierPath bezier path node + /2 path add new BezierPath bezier path node + /2 } else if soutcode geom OUT_LEFT | geom OUT_RIGHT != 0 eoutcode geom OUT_LEFT | geom OUT_RIGHT != 0 { path add new BezierPath bezier path node + /2 path add new BezierPath bezier path node + /2 } path add new BezierPath bezier path node } path invalidatePath invalidate path } read DOMInput dom input { } write DOMOutput dom output out { } liner clone { try { liner super clone } catch CloneNotSupportedException clone not supported { InternalError internal = new InternalError internal getMessage get message initCause init cause } } } 