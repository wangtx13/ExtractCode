org jhotdraw draw import awt * import awt geom * import awt event * import javax swing * import util * import org jhotdraw app action Actions Delegation Selection Tool Selection Tool { private Collection< Action> drawing Actions private Collection< Action> selection Actions private javax swing Timer popup Timer private J Popup Menu popup Menu Delegation Selection Tool { this new Linked List< Action> new Linked List< Action> } Delegation Selection Tool Collection< Action> drawing Actions Collection< Action> selection Actions { this drawing Actions = drawing Actions this selection Actions = selection Actions } set Drawing Actions Collection< Action> drawing Actions { this drawing Actions = drawing Actions } set Figure Actions Collection< Action> selection Actions { this selection Actions = selection Actions } mouse Pressed Mouse Event evt { if popup Timer != { popup Timer stop popup Timer = } if evt Popup Trigger { handle Popup Menu evt } else { super mouse Pressed evt popup Timer = new javax swing Timer 1000 new Action Listener { action Performed Action Event aevt { handle Popup Menu evt popup Timer = } } popup Timer set Repeats popup Timer start } } mouse Released Mouse Event evt { if popup Timer != { popup Timer stop popup Timer = } super mouse Released evt if evt Popup Trigger { handle Popup Menu evt } } mouse Dragged Mouse Event evt { if popup Timer != { popup Timer stop popup Timer = } if popup Menu == || ! popup Menu Visible { super mouse Dragged evt } } mouse Clicked Mouse Event evt { super mouse Clicked evt if evt get Click Count == 2 { handle Click evt } } handle Popup Menu Mouse Event evt { Point = new Point evt get X evt get Y Figure figure = get View find Figure if figure != || drawing Actions size > 0 { show Popup Menu figure evt get Component } else { popup Menu = } } show Popup Menu Figure figure Point Component { J Popup Menu menu = new J Popup Menu popup Menu = menu J Menu submenu = String submenu Name = Linked List< Action> popup Actions = new Linked List< Action> if figure != { Linked List< Action> figure Actions = new Linked List< Action> figure get Actions view To Drawing if popup Actions size != 0 figure Actions size != 0 { popup Actions add } popup Actions add All figure Actions if popup Actions size != 0 selection Actions size != 0 { popup Actions add } popup Actions add All selection Actions } if popup Actions size != 0 drawing Actions size != 0 { popup Actions add } popup Actions add All drawing Actions Hash Map< Object Button Group> button Groups = new Hash Map< Object Button Group> for Action popup Actions { if != get Value Actions SUBMENU_KEY != { if submenu Name == || ! submenu Name equals get Value Actions SUBMENU_KEY { submenu Name = String get Value Actions SUBMENU_KEY submenu = new J Menu submenu Name menu add submenu } } else { submenu Name = submenu = } if == { if submenu != submenu add Separator else menu add Separator } else { Abstract Button button if get Value Actions BUTTON_GROUP_KEY != { Button Group bg = button Groups get get Value Actions BUTTON_GROUP_KEY if bg == { bg = new Button Group button Groups put get Value Actions BUTTON_GROUP_KEY bg } button = new J Radio Button Menu Item bg add button button set Selected get Value Actions SELECTED_KEY == Boolean T R U E } else if get Value Actions SELECTED_KEY != { button = new J Check Box Menu Item button set Selected get Value Actions SELECTED_KEY == Boolean T R U E } else { button = new J Menu Item } if submenu != submenu add button else menu add button } } menu show } handle Click Mouse Event evt { Drawing View = get View Point pos = new Point evt get X evt get Y Handle handle = find Handle pos if handle != { handle track Click pos evt get Modifiers Ex } else { Point2 = view To Drawing pos Figure outer Figure = get View find Figure pos Figure figure = outer Figure if figure != { Tool figure Tool = figure get Tool if figure Tool == { figure = get Drawing find Figure Inside if figure != { figure Tool = figure get Tool } } if figure Tool != { set Tracker figure Tool figure Tool mouse Pressed evt } else { if outer Figure handle Mouse Click evt get View { clear Selection add To Selection outer Figure } else { clear Selection add To Selection outer Figure set Handle Detail Level get Handle Detail Level + 1 } } } } } } 