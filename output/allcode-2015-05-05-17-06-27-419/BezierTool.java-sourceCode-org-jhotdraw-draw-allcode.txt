org jhotdraw draw import org jhotdraw util * import org jhotdraw undo * import awt * import awt geom * import awt event * import util * import org jhotdraw geom * Bezier Tool Abstract Tool { private Boolean finish When Mouse Released Map< Attribute Key Object> attributes private Bezier Figure prototype Bezier Figure created Figure private Composite Edit creation Edit private node Count Before Drag Bezier Tool Bezier Figure prototype { this prototype } Bezier Tool Bezier Figure prototype Map attributes { this prototype = prototype this attributes = attributes } activate Drawing Editor editor { super activate editor get View clear Selection get View set Cursor Cursor get Predefined Cursor Cursor CROSSHAIR_CURSOR } deactivate Drawing Editor editor { super deactivate editor get View set Cursor Cursor get Default Cursor if created Figure != { finish Creation created Figure created Figure = get Drawing fire Undoable Edit Happened creation Edit } } mouse Pressed Mouse Event evt { super mouse Pressed evt if created Figure == { finish When Mouse Released = creation Edit = new Composite Edit Figur erstellen get Drawing fire Undoable Edit Happened creation Edit created Figure = create Figure created Figure add Node new Bezier Path Node get View get Constrainer constrain Point get View view To Drawing anchor get Drawing add created Figure node Count Before Drag = created Figure get Node Count } else { if evt get Click Count == 1 { add Point To Figure get View get Constrainer constrain Point get View view To Drawing anchor } node Count Before Drag = created Figure get Node Count } } Bezier Figure create Figure { Bezier Figure = Bezier Figure prototype clone get Editor apply Default Attributes To if attributes != { for Map Entry< Attribute Key Object> entry attributes entry Set { set Attribute entry get Key entry get Value } } } Figure get Created Figure { created Figure } Figure get Added Figure { created Figure } add Point To Figure Point2 new Point { point Count = created Figure get Node Count created Figure will Change if point Count < 2 { created Figure basic Add Node new Bezier Path Node new Point } else { Point2 Point = created Figure get End Point Point2 second Last Point = point Count <= 1 ? Point created Figure get Point point Count - 2 0 if new Point equals Point { } else if point Count > 1 Geom line Contains Point new Point new Point second Last Point second Last Point Point Point 0 9f / get View get Scale Factor { created Figure basic Set Point point Count - 1 0 new Point } else { created Figure basic Add Node new Bezier Path Node new Point } } created Figure changed } mouse Clicked Mouse Event evt { if created Figure != { switch evt get Click Count { case 1 if created Figure get Node Count > 2 { Rectangle = new Rectangle get View drawing To View created Figure get Start Point grow 2 2 if contains evt get X evt get Y { created Figure set Closed finish Creation created Figure get Drawing fire Undoable Edit Happened creation Edit created Figure = fire Tool Done } } break case 2 finish When Mouse Released = finish Creation created Figure get Drawing fire Undoable Edit Happened creation Edit created Figure = fire Tool Done break } } } mouse Released Mouse Event evt { if finish When Mouse Released == Boolean T R U E { if created Figure get Node Count > 2 { Bezier Path fitted Path = Bezier fit Bezier Curve created Figure get Bezier Path 1 created Figure will Change created Figure basic Set Bezier Path fitted Path created Figure changed finish Creation created Figure created Figure = get Drawing fire Undoable Edit Happened creation Edit finish When Mouse Released = fire Tool Done } } else if finish When Mouse Released == { finish When Mouse Released = Boolean F A L S E } if created Figure get Node Count > node Count Before Drag + 1 { created Figure will Change Bezier Path fitted Path = new Bezier Path for i=node Count Before Drag = created Figure get Node Count < i++ { fitted Path add created Figure get Node node Count Before Drag created Figure basic Remove Node node Count Before Drag } fitted Path = Bezier fit Bezier Curve fitted Path 1 for Bezier Path Node node fitted Path { created Figure basic Add Node node } node Count Before Drag = created Figure get Node Count created Figure changed } } finish Creation Bezier Figure created Figure { get View add To Selection created Figure } mouse Dragged Mouse Event evt { if created Figure != { if finish When Mouse Released == { finish When Mouse Released = Boolean T R U E } = evt get X = evt get Y add Point To Figure get View view To Drawing new Point } } mouse Moved Mouse Event evt { } } 