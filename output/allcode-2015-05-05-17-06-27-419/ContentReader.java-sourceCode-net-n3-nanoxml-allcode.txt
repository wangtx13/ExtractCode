net n3 nanoxml import Reader import I O Exception Content Reader Reader { private I Xml Reader reader private String buffer private buffer Index private I Xml Entity Resolver resolver Content Reader I Xml Reader reader I Xml Entity Resolver resolver String buffer { this reader = reader this resolver = resolver this buffer = buffer this buffer Index = 0 } finalize Throwable { this reader = this resolver = this buffer = super finalize } read char output Buffer offset size I O Exception { try { chars Read = 0 buffer Length = this buffer length if offset + size > output Buffer length { size = output Buffer length - offset } while chars Read < size { String = char ch if this buffer Index >= buffer Length { = Xml Util read this reader ' ' ch = char At 0 } else { ch = this buffer char At this buffer Index this buffer Index++ output Buffer chars Read = ch chars Read++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' length > 1 { if char At 1 == '#' { ch = Xml Util process Char Literal } else { Xml Util process Entity this reader this resolver continue } } output Buffer chars Read = ch chars Read++ } if chars Read == 0 { chars Read = -1 } chars Read } catch Xml Parse Exception { new I O Exception get Message } } close I O Exception { try { buffer Length = this buffer length for { String = char ch if this buffer Index >= buffer Length { = Xml Util read this reader ' ' ch = char At 0 } else { ch = this buffer char At this buffer Index this buffer Index++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' length > 1 { if char At 1 != '#' { Xml Util process Entity this reader this resolver } } } } catch Xml Parse Exception { new I O Exception get Message } } } 