org jhotdraw undo import awt event * import beans * import javax swing * import javax swing event * import javax swing undo * import util * import org jhotdraw util * Undo Redo Manager Undo Manager { Property Change Support property Support = new Property Change Support this private E B U G = private Resource Bundle Util labels private has Significant Edits = private undo Or Redo In Progress Undoable Edit DISCARD_ALL_EDITS = new Abstract Undoable Edit { can Undo { } can Redo { } } private Undo Action Abstract Action { Undo Action { labels configure Action this undo set Enabled } action Performed Action Event evt { try { undo } catch Cannot Undo Exception { System Cannot undo +e Stack Trace } } } private Redo Action Abstract Action { Redo Action { labels configure Action this redo set Enabled } action Performed Action Event evt { try { redo } catch Cannot Redo Exception { System out Cannot redo +e } } } private Undo Action undo Action private Redo Action redo Action Resource Bundle Util get Labels { if labels == { labels = Resource Bundle Util get L A F Bundle org jhotdraw undo Labels } labels } Undo Redo Manager { get Labels undo Action = new Undo Action redo Action = new Redo Action } set Locale Locale { labels = Resource Bundle Util get L A F Bundle org jhotdraw undo Labels } discard All Edits { super discard All Edits update Actions set Has Significant Edits } set Has Significant Edits new Value { old Value = has Significant Edits has Significant Edits = new Value fire Property Change has Significant Edits old Value new Value } has Significant Edits { has Significant Edits } add Edit Undoable Edit Edit { if E B U G System out Undo Redo Manager add +an Edit if undo Or Redo In Progress { Edit die } success = super add Edit Edit update Actions if success Edit Significant edit To Be Undone == Edit { set Has Significant Edits } success } Action get Undo Action { undo Action } Action get Redo Action { redo Action } private update Actions { String label if E B U G System out Undo Manager update Actions + edit To Be Undone + can Undo= +can Undo + can Redo= +can Redo if can Undo { undo Action set Enabled label = get Undo Presentation Name } else { undo Action set Enabled label = labels get String undo } undo Action put Value Action N A M E label undo Action put Value Action SHORT_DESCRIPTION label if can Redo { redo Action set Enabled label = get Redo Presentation Name } else { redo Action set Enabled label = labels get String redo } redo Action put Value Action N A M E label redo Action put Value Action SHORT_DESCRIPTION label } undo Cannot Undo Exception { undo Or Redo In Progress = try { super undo } finally { undo Or Redo In Progress = update Actions } } redo Cannot Undo Exception { undo Or Redo In Progress = try { super redo } finally { undo Or Redo In Progress = update Actions } } undo Or Redo Cannot Undo Exception Cannot Redo Exception { undo Or Redo In Progress = try { super undo Or Redo } finally { undo Or Redo In Progress = update Actions } } add Property Change Listener Property Change Listener listener { property Support add Property Change Listener listener } add Property Change Listener String property Name Property Change Listener listener { property Support add Property Change Listener property Name listener } remove Property Change Listener Property Change Listener listener { property Support remove Property Change Listener listener } remove Property Change Listener String property Name Property Change Listener listener { property Support remove Property Change Listener property Name listener } fire Property Change String property Name old Value new Value { property Support fire Property Change property Name old Value new Value } fire Property Change String property Name old Value new Value { property Support fire Property Change property Name old Value new Value } fire Property Change String property Name Object old Value Object new Value { property Support fire Property Change property Name old Value new Value } } 