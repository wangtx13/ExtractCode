org jhotdraw draw import org jhotdraw undo * import org jhotdraw util * import awt * import awt geom * import org jhotdraw geom * Connection Handle Locator Handle { private Composite Edit edit private Connection Figure current Connection private Connection Figure prototype private Figure target Figure Connection Handle Figure owner Locator locator Connection Figure prototype { super owner locator this prototype = prototype } draw Graphics2 { draw Circle Color blue Color blue darker } track Start Point anchor modifiers Ex { set Connection create Connection Resource Bundle Util labels = Resource Bundle Util get L A F Bundle org jhotdraw draw Labels edit = new Composite Edit labels get String create Connection fire Undoable Edit Happened edit Point2 = get Location On Drawing get Connection set Start Point get Connection set End Point view get Drawing add get Connection } track Step Point anchor Point modifiers Ex { Point2 = view view To Drawing Figure = find Connectable Figure view get Drawing if != get Target Figure { if get Target Figure != { get Target Figure set Connectors Visible } set Target Figure if get Target Figure != { get Target Figure set Connectors Visible get Connection } } Connector target = find Connection Target view get Drawing if target != { = Geom center target get Bounds } get Connection set End Point } track End Point anchor Point modifiers Ex { Point2 = view view To Drawing 		 Connector target = find Connection Target view get Drawing 		if target != { 			get Connection set Start Connector get Start Connector 			get Connection set End Connector target 			get Connection update Connection 		} else { 			view get Drawing remove get Connection 			 edit set Significant 		} 		set Connection 		if get Target Figure != { 			get Target Figure set Connectors Visible 			set Target Figure 		} fire Undoable Edit Happened edit } Connection Figure create Connection { Connection Figure prototype clone } set Connection Connection Figure new Connection { current Connection = new Connection } Connection Figure get Connection { current Connection } Figure get Target Figure { target Figure } set Target Figure Figure new Target Figure { target Figure = new Target Figure } private Figure find Connectable Figure Point2 Drawing drawing { for Figure figure drawing get Figures Front To Back { if !figure includes get Connection figure can Connect figure contains { figure } } } 	 	protected Connector find Connection Target Point2 Drawing drawing { 		 Figure target = find Connectable Figure drawing 		if target != target can Connect 			 !target includes get Owner 			 get Connection can Connect get Owner target { 				return target find Connector get Connection 		} 		return 	} 	private Connector get Start Connector { 		 Point2 = get Location On Drawing 		return get Owner find Connector get Connection 	} } 