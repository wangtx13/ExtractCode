net n3 nanoxml import Serializable import util * Xml Element implements I Xml Element Serializable { long serial Version Uid = -2383376380548624920 L NO_LINE = -1 private I Xml Element parent private Array List attributes private Array List children private String private String full Name private String namespace private String content private String systemid private line Nr Xml Element { this NO_LINE } Xml Element String full Name { this full Name NO_LINE } Xml Element String full Name String systemid line Nr { this full Name systemid line Nr } Xml Element String full Name String namespace { this full Name namespace NO_LINE } Xml Element String full Name String namespace String systemid line Nr { this attributes = new Array List this children = new Array List 8 this full Name = full Name if namespace == { this = full Name } else { index = full Name index Of ' ' if index >= 0 { this = full Name substring index + 1 } else { this = full Name } } this namespace = namespace this content = this line Nr = line Nr this systemid = systemid this parent = } I Xml Element create P C Data Element { new Xml Element } I Xml Element create Element String full Name { new Xml Element full Name } I Xml Element create Element String full Name String systemid line Nr { new Xml Element full Name systemid line Nr } I Xml Element create Element String full Name String namespace { new Xml Element full Name namespace } I Xml Element create Element String full Name String namespace String systemid line Nr { new Xml Element full Name namespace systemid line Nr } finalize Throwable { this attributes clear this attributes = this children = this full Name = this = this namespace = this content = this systemid = this parent = super finalize } I Xml Element get Parent { this parent } String get Full Name { this full Name } String get Name { this } String get Namespace { this namespace } set Name String { this = this full Name = this namespace = } set Name String full Name String namespace { index = full Name index Of ' ' if namespace == || index < 0 { this = full Name } else { this = full Name substring index + 1 } this full Name = full Name this namespace = namespace } add Child I Xml Element child { if child == { new Illegal Argument Exception child must not be } if child get Name == ! this children Empty { I Xml Element last Child = I Xml Element this children get this children size - 1 if last Child get Name == { last Child set Content last Child get Content + child get Content } } Xml Element child parent = this this children add child } insert Child I Xml Element child index { if child == { new Illegal Argument Exception child must not be } if child get Name == ! this children Empty { I Xml Element last Child = I Xml Element this children get this children size - 1 if last Child get Name == { last Child set Content last Child get Content + child get Content } } Xml Element child parent = this this children add index child } remove Child I Xml Element child { if child == { new Illegal Argument Exception child must not be } this children remove child } remove Child At Index index { this children remove index } Iterator iterate Children { this children iterator } Leaf { this children Empty } has Children { ! this children Empty } get Children Count { this children size } Array List get Children { this children } I Xml Element get Child At Index index Array Index Out Of Bounds Exception { I Xml Element this children get index } I Xml Element get First Child Named String { Iterator enm = this children iterator while enm has Next { I Xml Element child = I Xml Element enm next String child Name = child get Full Name if child Name != child Name equals { child } } } I Xml Element get First Child Named String String namespace { Iterator enm = this children iterator while enm has Next { I Xml Element child = I Xml Element enm next String = child get Name found = != equals = child get Namespace if == { found = == } else { found = equals namespace } if found { child } } } Array List get Children Named String { Array List result = new Array List this children size Iterator enm = this children iterator while enm has Next { I Xml Element child = I Xml Element enm next String child Name = child get Full Name if child Name != child Name equals { result add child } } result } Array List get Children Named String String namespace { Array List result = new Array List this children size Iterator enm = this children iterator while enm has Next { I Xml Element child = I Xml Element enm next String = child get Name found = != equals = child get Namespace if == { found = == } else { found = equals namespace } if found { result add child } } result } private Xml Attribute find Attribute String full Name { Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next if attr get Full Name equals full Name { attr } } } private Xml Attribute find Attribute String String namespace { Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next found = attr get Name equals if namespace == { found = attr get Namespace == } else { found = namespace equals attr get Namespace } if found { attr } } } get Attribute Count { this attributes size } String get Attribute String { this get Attribute } String get Attribute String String default Value { Xml Attribute attr = this find Attribute if attr == { default Value } else { attr get Value } } String get Attribute String String namespace String default Value { Xml Attribute attr = this find Attribute namespace if attr == { default Value } else { attr get Value } } get Attribute String default Value { String value = this get Attribute Integer to String default Value Integer parse Int value } get Attribute String String namespace default Value { String value = this get Attribute namespace Integer to String default Value Integer parse Int value } String get Attribute Type String { Xml Attribute attr = this find Attribute if attr == { } else { attr get Type } } String get Attribute Namespace String { Xml Attribute attr = this find Attribute if attr == { } else { attr get Namespace } } String get Attribute Type String String namespace { Xml Attribute attr = this find Attribute namespace if attr == { } else { attr get Type } } set Attribute String String value { Xml Attribute attr = this find Attribute if attr == { attr = new Xml Attribute value C A T A this attributes add attr } else { attr set Value value } } set Attribute String full Name String namespace String value { index = full Name index Of ' ' String = full Name substring index + 1 Xml Attribute attr = this find Attribute namespace if attr == { attr = new Xml Attribute full Name namespace value C A T A this attributes add attr } else { attr set Value value } } remove Attribute String { for = 0 < this attributes size i++ { Xml Attribute attr = Xml Attribute this attributes get if attr get Full Name equals { this attributes remove } } } remove Attribute String String namespace { for = 0 < this attributes size i++ { Xml Attribute attr = Xml Attribute this attributes get found = attr get Name equals if namespace == { found = attr get Namespace == } else { found = attr get Namespace equals namespace } if found { this attributes remove } } } Iterator iterate Attribute Names { Array List result = new Array List Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next result add attr get Full Name } result iterator } has Attribute String { this find Attribute != } has Attribute String String namespace { this find Attribute namespace != } Properties get Attributes { Properties result = new Properties Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next result put attr get Full Name attr get Value } result } Properties get Attributes In Namespace String namespace { Properties result = new Properties Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next if namespace == { if attr get Namespace == { result put attr get Name attr get Value } } else { if namespace equals attr get Namespace { result put attr get Name attr get Value } } } result } String get Systemid { this systemid } get Line Nr { this line Nr } String get Content { this content } set Content String content { this content = content } equals Object raw Element { try { this equals Xml Element I Xml Element raw Element } catch Class Cast Exception { } } equals Xml Element I Xml Element elt { if ! this equals elt get Name { } if this attributes size != elt get Attribute Count { } Iterator enm = this attributes iterator while enm has Next { Xml Attribute attr = Xml Attribute enm next if ! elt has Attribute attr get Name attr get Namespace { } String value = elt get Attribute attr get Name attr get Namespace if ! attr get Value equals value { } String type = elt get Attribute Type attr get Name attr get Namespace if ! attr get Type equals type { } } if this children size != elt get Children Count { } for = 0 < this children size i++ { I Xml Element child1 = this get Child At Index I Xml Element child2 = elt get Child At Index if ! child1 equals Xml Element child2 { } } } } 