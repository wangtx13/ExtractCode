org jhotdraw samples svg figures import awt * import awt font * import awt geom * import * import org jhotdraw draw * import org jhotdraw geom Geom import org jhotdraw samples svg * import org jhotdraw xml * import org jhotdraw draw Attribute Keys * S V G Text Text Figure implements S V G Figure { enum Text Anchor { S T A R T Mid L E E N } Attribute Key< Text Anchor> TEXT_ANCHOR = new Attribute Key< Text Anchor> text Anchor Text Anchor S T A R T S V G Text { S V G Util set Defaults this } @ Override draw Stroke Graphics2 { if get Text != || Editable { Rectangle2 bounds = get Bounds Text Layout layout = get Text Layout Affine Transform tx = new Affine Transform tx translate origin origin + layout get Ascent Shape outline = layout get Outline tx draw outline } } @ Override draw Fill Graphics2 { if get Text != || Editable { Text Layout layout = get Text Layout layout draw float origin float origin + layout get Ascent } } @ Override draw Text awt Graphics2 { } @ Override write Dom Output out { out add Attribute origin out add Attribute origin out add Text get Text } write Attributes Dom Output out I O Exception { S V G Util write Attributes this out } @ Override read Dom Input I O Exception { origin = S V G Util get Dimension origin = S V G Util get Dimension set Text get Text read Attributes Affine Transform tx = S V G Util get Transform transform basic Transform tx Rectangle2 = get Bounds switch TEXT_ANCHOR get this { case S T A R T break case Mid L E origin -= width / 2d break case E N origin -= width break } origin -= FONT_SIZE get this } read Attributes Dom Input I O Exception { S V G Util read Attributes this } Color get Text Color { FILL_COLOR get this } Color get Fill Color { Color white } Empty { get Text == || get Text length == 0 } } 