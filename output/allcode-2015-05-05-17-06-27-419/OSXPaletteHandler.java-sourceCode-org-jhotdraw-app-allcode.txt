org jhotdraw app import awt * import awt event * import util prefs * import javax swing * import util * O S X Palette Handler { private Hash Set< Window> palettes = new Hash Set< Window> private Hash Map< Window Project> windows = new Hash Map< Window Project> private O S X Palette Handler instance private javax swing Timer timer private Default O S X Application app private Window Focus Listener focus Handler = new Window Focus Listener { window Gained Focus Window Event { timer stop if windows contains Key get Window { app set Current Project Project windows get get Window show Palettes } } window Lost Focus Window Event { timer restart } } O S X Palette Handler Default O S X Application app { this app = app timer = new javax swing Timer 60 new Action Listener { action Performed Action Event evt { maybe Hide Palettes } } timer set Repeats } add Window window Project project { window add Window Focus Listener focus Handler windows put window project } remove Window window Project project { windows remove window window remove Window Focus Listener focus Handler } add Palette Window palette { palette add Window Focus Listener focus Handler palettes add palette } remove Palette Window palette { palettes remove palette palette remove Window Focus Listener focus Handler } Set< Window> get Palettes { Collections unmodifiable Set palettes } private show Palettes { for Window palette palettes { if ! palette Visible { palette set Visible } } } private Focused Window { if Focused Window owned Windows = get Owned Windows for i=0 < owned Windows length i++ { if Focused owned Windows { } } } private maybe Hide Palettes { has Focus = for Window window windows key Set { if Focused window { has Focus = break } } if ! has Focus windows size > 0 { for Window palette palettes { if Focused palette { has Focus = break } } } if ! has Focus { for Window palette palettes { palette set Visible } } } } 