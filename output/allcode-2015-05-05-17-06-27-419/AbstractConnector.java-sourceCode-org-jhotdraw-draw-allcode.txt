org jhotdraw draw import I O Exception import org jhotdraw util * import awt * import awt geom * import org jhotdraw geom * import org jhotdraw xml Dom Input import org jhotdraw xml Dom Output Abstract Connector implements Connector { private Figure owner private Connect To Decorator private Visible private State Persistent Abstract Connector { owner = } Abstract Connector Figure owner { this owner = owner } set Connect To Decorator new Value { Connect To Decorator = new Value } Connect To Decorator { Connect To Decorator } set Visible new Value { Visible = new Value } Visible { Visible } Figure get Connector Target Figure { Connect To Decorator get Decorator != ? get Decorator } contains Point2 { get Owner contains } draw Graphics2 { if Visible { Rectangle2 bounds = get Bounds Ellipse2 circle = new Ellipse2 bounds + bounds width / 2 - 3 bounds + bounds height / 2 - 3 6 6 set Color Color blue fill circle } } Point2 find Start Connection Figure connection { find Point connection } Point2 find End Connection Figure connection { find Point connection } Point2 find Point Connection Figure connection { Geom center get Bounds } Rectangle2 get Bounds { get Owner get Bounds } Figure get Owner { owner } set Owner Figure new Value { owner = new Value } Object clone { try { Abstract Connector that = Abstract Connector super clone that } catch Clone Not Supported Exception { Internal Error error = new Internal Error to String error } } update Start Location Point2 { } update End Location Point2 { } Point2 get Anchor { Geom center get Bounds } update Anchor Point2 { } read Dom Input I O Exception { if State Persistent { Connect To Decorator = get Attribute connect To Decorator Visible = get Attribute visible } open Element owner this owner = Figure read Object 0 close Element } write Dom Output out I O Exception { if State Persistent { if Connect To Decorator { out add Attribute connect To Decorator } if Visible { out add Attribute visible } } out open Element owner out write Object get Owner out close Element } } 