net n3 nanoxml import I O Exception import Reader import Char Array Reader Xml Util { skip Comment I Xml Reader reader I O Exception Xml Parse Exception { if reader read != '-' { Xml Util error Expected Input reader get Systemid reader get Line Nr <!-- } dashes Read = 0 for { char ch = reader read switch ch { case '-' dashes Read++ break case '>' if dashes Read == 2 { } default dashes Read = 0 } } } skip Tag I Xml Reader reader I O Exception Xml Parse Exception { level = 1 while level > 0 { char ch = reader read switch ch { case '<' ++level break case '>' --level break } } } String scan Publicid String Buffer publicid I Xml Reader reader I O Exception Xml Parse Exception { if ! Xml Util check Literal reader U B L I C { } Xml Util skip Whitespace reader publicid append Xml Util scan String reader '\0' Xml Util skip Whitespace reader Xml Util scan String reader '\0' } String scan Systemid I Xml Reader reader I O Exception Xml Parse Exception { if ! Xml Util check Literal reader Y S T E M { } Xml Util skip Whitespace reader Xml Util scan String reader '\0' } String scan Identifier I Xml Reader reader I O Exception Xml Parse Exception { String Buffer result = new String Buffer for { char ch = reader read if ch == '_' || ch == ' ' || ch == '-' || ch == ' ' || ch >= 'a' ch <= 'z' || ch >= ' A' ch <= ' Z' || ch >= '0' ch <= '9' || ch > '\u007 E' { result append ch } else { reader unread ch break } } result to String } String scan String I Xml Reader reader char entity Char I Xml Entity Resolver entity Resolver I O Exception Xml Parse Exception { String Buffer result = new String Buffer starting Level = reader get Stream Level char delim = reader read if delim != '\'' delim != ' ' { Xml Util error Expected Input reader get Systemid reader get Line Nr delimited } for { String = Xml Util read reader entity Char char ch = char At 0 if ch == entity Char { if char At 1 == '#' { result append Xml Util process Char Literal } else { Xml Util process Entity reader entity Resolver } } else if ch == ' ' { reader unread ch = Xml Util read reader ' ' if char At 1 == '#' { result append Xml Util process Char Literal } else { result append } } else if reader get Stream Level == starting Level { if ch == delim { break } else if ch == 9 || ch == 10 || ch == 13 { result append ' ' } else { result append ch } } else { result append ch } } result to String } process Entity String entity I Xml Reader reader I Xml Entity Resolver entity Resolver I O Exception Xml Parse Exception { entity = entity substring 1 entity length - 1 Reader entity Reader = entity Resolver get Entity reader entity if entity Reader == { Xml Util error Invalid Entity reader get Systemid reader get Line Nr entity } external Entity = entity Resolver External Entity entity reader start New Stream entity Reader !external Entity } char process Char Literal String entity I O Exception Xml Parse Exception { if entity char At 2 == 'x' { entity = entity substring 3 entity length - 1 char Integer parse Int entity 16 } else { entity = entity substring 2 entity length - 1 char Integer parse Int entity 10 } } skip Whitespace I Xml Reader reader String Buffer buffer I O Exception { char ch if buffer == { { ch = reader read } while ch == ' ' || ch == '\t' || ch == '\n' } else { for { ch = reader read if ch != ' ' ch != '\t' ch != '\n' { break } if ch == '\n' { buffer append '\n' } else { buffer append ' ' } } } reader unread ch } String read I Xml Reader reader char entity Char I O Exception Xml Parse Exception { char ch = reader read String Buffer buf = new String Buffer buf append ch if ch == entity Char { while ch != ' ' { ch = reader read buf append ch } } buf to String } char read Char I Xml Reader reader char entity Char I O Exception Xml Parse Exception { String = Xml Util read reader entity Char char ch = char At 0 if ch == entity Char { Xml Util error Unexpected Entity reader get Systemid reader get Line Nr } ch } check Literal I Xml Reader reader String literal I O Exception Xml Parse Exception { for = 0 < literal length i++ { if reader read != literal char At { } } } error Expected Input String systemid line Nr String expected String Xml Parse Exception { new Xml Parse Exception systemid line Nr Expected + expected String } error Invalid Entity String systemid line Nr String entity Xml Parse Exception { new Xml Parse Exception systemid line Nr Invalid entity ` + entity + ' } error Unexpected Entity String systemid line Nr String entity Xml Parse Exception { new Xml Parse Exception systemid line Nr No entity reference expected here + entity + } error Unexpected C A T A String systemid line Nr Xml Parse Exception { new Xml Parse Exception systemid line Nr No C A T A section expected here } error Invalid Input String systemid line Nr String unexpected String Xml Parse Exception { new Xml Parse Exception systemid line Nr Invalid input + unexpected String } error Wrong Closing Tag String systemid line Nr String expected Name String wrong Name Xml Parse Exception { new Xml Parse Exception systemid line Nr Closing tag does not match opening tag ` + wrong Name + ' != ` + expected Name + ' } error Closing Tag Not Empty String systemid line Nr Xml Parse Exception { new Xml Parse Exception systemid line Nr Closing tag must be empty } error Missing Element String systemid line Nr String parent Element Name String missing Element Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception MISSING_ELEMENT systemid line Nr missing Element Name Element + parent Element Name + expects to have + missing Element Name } error Unexpected Element String systemid line Nr String parent Element Name String unexpected Element Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception UNEXPECTED_ELEMENT systemid line Nr unexpected Element Name Unexpected + unexpected Element Name + + parent Element Name } error Missing Attribute String systemid line Nr String element Name String attribute Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception MISSING_ATTRIBUTE systemid line Nr element Name attribute Name Element + element Name + expects attribute named + attribute Name } error Unexpected Attribute String systemid line Nr String element Name String attribute Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception UNEXPECTED_ATTRIBUTE systemid line Nr element Name attribute Name Element + element Name + did not expect attribute + named + attribute Name } error Invalid Attribute Value String systemid line Nr String element Name String attribute Name String attribute Value Xml Validation Exception { new Xml Validation Exception Xml Validation Exception ATTRIBUTE_WITH_INVALID_VALUE systemid line Nr element Name attribute Name attribute Value Invalid value for attribute + attribute Name } error Missing P C Data String systemid line Nr String parent Element Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception MISSING_PCDATA systemid line Nr Missing # P C A T A element + parent Element Name } error Unexpected P C Data String systemid line Nr String parent Element Name Xml Validation Exception { new Xml Validation Exception Xml Validation Exception UNEXPECTED_PCDATA systemid line Nr Unexpected # P C A T A element + parent Element Name } validation Error String systemid line Nr String message String element Name String attribute Name String attribute Value Xml Validation Exception { new Xml Validation Exception Xml Validation Exception MISC_ERROR systemid line Nr element Name attribute Name attribute Value message } } 