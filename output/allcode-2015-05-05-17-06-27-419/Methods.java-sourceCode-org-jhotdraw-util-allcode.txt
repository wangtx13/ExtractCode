org jhotdraw util import lang reflect * Methods { private Methods { } Object invoke Object String Name No Such Method Exception { try { Method = get Class get Method Name new Class 0 Object result = invoke new Object 0 result } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Object String Name String Parameter No Such Method Exception { try { Method = get Class get Method Name new Class { String } Object result = invoke new Object { Parameter } result } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Static Class clazz String Name No Such Method Exception { try { Method = clazz get Method Name new Class 0 Object result = invoke new Object 0 result } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Static String clazz String Name No Such Method Exception { try { invoke Static Class for Name clazz Name } catch Class Not Found Exception { new No Such Method Exception +clazz+ not found } } Object invoke Static Class clazz String Name Class types Object values No Such Method Exception { try { Method = clazz get Method Name types Object result = invoke values result } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Static String clazz String Name Class types Object values No Such Method Exception { try { invoke Static Class for Name clazz Name types values } catch Class Not Found Exception { new No Such Method Exception +clazz+ not found } } Object invoke Static String clazz String Name Class types Object values Object default Value { try { invoke Static Class for Name clazz Name types values } catch Class Not Found Exception { default Value } catch No Such Method Exception { default Value } } invoke Getter Object String Name default Value { try { Method = get Class get Method Name new Class 0 Object result = invoke new Object 0 Integer result Value } catch No Such Method Exception { default Value } catch Illegal Access Exception { default Value } catch Invocation Target Exception { default Value } } long invoke Getter Object String Name long default Value { try { Method = get Class get Method Name new Class 0 Object result = invoke new Object 0 Long result long Value } catch No Such Method Exception { default Value } catch Illegal Access Exception { default Value } catch Invocation Target Exception { default Value } } invoke Getter Object String Name default Value { try { Method = get Class get Method Name new Class 0 Object result = invoke new Object 0 Boolean result Value } catch No Such Method Exception { default Value } catch Illegal Access Exception { default Value } catch Invocation Target Exception { default Value } } Object invoke Getter Object String Name Object default Value { try { Method = get Class get Method Name new Class 0 Object result = invoke new Object 0 result } catch No Such Method Exception { default Value } catch Illegal Access Exception { default Value } catch Invocation Target Exception { default Value } } invoke Static Getter Class clazz String Name default Value { try { Method = clazz get Method Name new Class 0 Object result = invoke new Object 0 Boolean result Value } catch No Such Method Exception { default Value } catch Illegal Access Exception { default Value } catch Invocation Target Exception { default Value } } Object invoke Object String Name new Value No Such Method Exception { try { Method = get Class get Method Name new Class { Boolean T Y P E} invoke new Object { new Boolean new Value } } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Object String Name new Value No Such Method Exception { try { Method = get Class get Method Name new Class { Integer T Y P E} invoke new Object { new Integer new Value } } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Object String Name float new Value No Such Method Exception { try { Method = get Class get Method Name new Class { Float T Y P E} invoke new Object { new Float new Value } } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Object String Name Class clazz Object new Value No Such Method Exception { try { Method = get Class get Method Name new Class { clazz } invoke new Object { new Value} } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { new Internal Error get Message } } Object invoke Object String Name Class clazz Object new Value No Such Method Exception { try { Method = get Class get Method Name clazz invoke new Value } catch Illegal Access Exception { new No Such Method Exception Name+ not accessible } catch Invocation Target Exception { Internal Error error = new Internal Error get Message error init Cause get Cause != ? get Cause error } } invoke If Exists Object String Name { try { invoke Name } catch No Such Method Exception { } } invoke If Exists Object String Name float new Value { try { invoke Name new Value } catch No Such Method Exception { } } invoke If Exists Object String Name new Value { try { invoke Name new Value } catch No Such Method Exception { } } invoke If Exists Object String Name Class clazz Object new Value { try { invoke Name clazz new Value } catch No Such Method Exception { } } } 