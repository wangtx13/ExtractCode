org jhotdraw samples svg figures import awt geom * import * import util * import org jhotdraw draw * import org jhotdraw samples svg * import org jhotdraw xml * S V G Group Group Figure implements S V G Figure { S V G Group { S V G Util set Defaults this } @ Override Linked List< Handle> create Handles detail Level { Linked List< Handle> handles if detail Level == 0 { handles = Linked List< Handle> super create Handles detail Level handles add new Rotate Handle this } else { handles = new Linked List< Handle> } handles } @ Override read Dom Input I O Exception { read Attributes for i=0 = get Element Count < i++ { open Element String = get Tag Name if equals pattern { close Element } else if equals color-profile { close Element } else if equals defs { close Element } else if equals use { close Element } else if equals script { close Element } else if equals filter { close Element } else if equals title { close Element } else if equals desc { close Element } else if equals switch { close Element } else if equals radial Gradient { close Element } else if equals linear Gradient { close Element } else { close Element Object = Object read Object if instanceof S V G Drawing { S V G Group = new S V G Group will Change for Figure child S V G Drawing get Figures { basic Add child } changed if ! Empty { add } } else if instanceof S V G Figure { if ! S V G Figure Empty { add S V G Figure } } else { new I O Exception Unexpected child +f } } } Affine Transform tx = S V G Util get Transform transform for Figure child get Children { child basic Transform tx } invalidate Bounds } read Attributes Dom Input I O Exception { S V G Util read Attributes this } @ Override write Dom Output out I O Exception { for Figure child get Children { out write Object child } write Attributes out } write Attributes Dom Output out I O Exception { S V G Util write Attributes this out } Empty { get Child Count == 0 } String to String { String Builder buf = new String Builder buf append get Class get Name substring get Class get Name last Index Of ' ' +1 buf append '@' buf append hash Code if get Child Count > 0 { buf append ' ' for Iterator< Figure> = get Children iterator has Next { Figure child = next buf append child if has Next { buf append ' ' } } buf append ' ' } buf to String } } 