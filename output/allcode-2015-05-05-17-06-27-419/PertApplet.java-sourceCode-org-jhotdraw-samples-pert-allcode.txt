org jhotdraw samples pert import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import org jhotdraw xml * Pert Applet J Applet { private String V E R S I O N = 0 5 private String N A M E = Jhotdraw Pert private Pert Panel drawing Panel String get Parameter String { try { super get Parameter } catch Null Pointer Exception { } } init { try { U I Manager set Look And Feel U I Manager get System Look And Feel Class Name } catch Throwable { } Container = get Content Pane set Layout new Box Layout Box Layout Y_AXIS String labels = get Applet Info split \n for i=0 < labels length i++ { add new J Label labels length == 0 ? labels } new Swing Worker { Object construct { Object result try { System out get Parameter datafile +get Parameter datafile if get Parameter data != { Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Pert Factory new String Reader get Parameter data domi open Element Pert Diagram result = domi read Object 0 } else if get Parameter datafile != { Input Stream = try { U R L url = new U R L get Document Base get Parameter datafile = url open Connection get Input Stream Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Pert Factory domi open Element Pert Diagram result = domi read Object 0 } finally { if != close } } else { result = } } catch Throwable { result = } result } finished { if get Value instanceof Throwable { Throwable get Value Stack Trace } Container = get Content Pane set Layout new Border Layout remove All add drawing Panel = new Pert Panel Object result = get Value init Components if result != { if result instanceof Drawing { set Drawing Drawing result } else if result instanceof Throwable { get Drawing add new Text Figure result to String Throwable result Stack Trace } } validate } } start } private set Drawing Drawing { drawing Panel set Drawing } private Drawing get Drawing { drawing Panel get Drawing } set Data String text { if text != text length > 0 { String Reader = new String Reader text try { Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Pert Factory domi open Element Pert set Drawing Drawing domi read Object 0 } catch Throwable { get Drawing clear Text Figure tf = new Text Figure tf set Text get Message tf set Bounds new Point2 10 10 new Point2 100 100 get Drawing add tf Stack Trace } finally { if != close } } } String get Data { Char Array Writer out = new Char Array Writer try { Nano Xml Lite Dom Output domo = new Nano Xml Lite Dom Output new Pert Factory domo open Element Pert domo write Object get Drawing domo close Element domo save out } catch I O Exception { Text Figure tf = new Text Figure tf set Text get Message tf set Bounds new Point2 10 10 new Point2 100 100 get Drawing add tf Stack Trace } finally { if out != out close } out to String } String get Parameter Info { new String { { data String the data to be displayed by this applet } { datafile U R L U R L to containing the data to be displayed by this applet } } } String get Applet Info { N A M E+ \n Version + V E R S I O N + \n\n Copyright \u00a9 2004-2006 \u00a9 Werner Randelshofer + \n Alle Rights Reserved + \n\n This software based + \n Jhotdraw \u00a9 1996-1997 I F A Informatik und Erich Gamma + \n Nano Xml \u00a9 2000-2002 Marc De Scheemaecker + \n + \n Java Script can access the drawing data using the set Data and get Data } private init Components { tool Button Group = new javax swing Button Group } String args { Swing Utilities invoke Later new Runnable { run { J Frame = new J Frame Jhotdraw Pert Applet set Default Close Operation J Frame EXIT_ON_CLOSE Pert Applet = new Pert Applet get Content Pane add init set Size 500 400 set Visible start } } } private javax swing Button Group tool Button Group } 