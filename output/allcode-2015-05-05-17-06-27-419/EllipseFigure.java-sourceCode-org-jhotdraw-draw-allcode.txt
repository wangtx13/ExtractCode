org jhotdraw draw import org jhotdraw geom Geom import org jhotdraw util * import awt * import awt geom * import org jhotdraw draw Attribute Keys * Ellipse Figure Attributed Figure { private Ellipse2 ellipse Ellipse Figure { this 0 0 0 0 } Ellipse Figure width height { ellipse = new Ellipse2 width height set Attribute Enabled TEXT_COLOR } Connector find Connector Point2 Connection Figure prototype { new Chop Ellipse Connector this } Connector find Compatible Connector Connector Start Connector { new Chop Ellipse Connector this } Rectangle2 get Bounds { Rectangle2 ellipse get Bounds2 } Rectangle2 get Figure Draw Bounds { Rectangle2 = Rectangle2 ellipse get Bounds2 grow = Attribute Keys get Perpendicular Hit Growth this Geom grow grow grow } draw Fill Graphics2 { Ellipse2 = Ellipse2 ellipse clone grow = Attribute Keys get Perpendicular Fill Growth this -= grow -= grow width += grow * 2 height += grow * 2 if width > 0 height > 0 { fill } } draw Stroke Graphics2 { Ellipse2 = Ellipse2 ellipse clone grow = Attribute Keys get Perpendicular Draw Growth this -= grow -= grow width += grow * 2 height += grow * 2 if width > 0 height > 0 { draw } } contains Point2 { Ellipse2 = Ellipse2 ellipse clone grow = Attribute Keys get Perpendicular Hit Growth this -= grow -= grow width += grow * 2 height += grow * 2 contains } basic Set Bounds Point2 anchor Point2 { ellipse = Math min anchor ellipse = Math min anchor ellipse width = Math max 0 1 Math - anchor ellipse height = Math max 0 1 Math - anchor } basic Transform Affine Transform tx { Point2 anchor = get Start Point Point2 = get End Point basic Set Bounds Point2 tx transform anchor anchor Point2 tx transform } Ellipse Figure clone { Ellipse Figure that = Ellipse Figure super clone that ellipse = Ellipse2 this ellipse clone that } restore To Object geometry { Ellipse2 = Ellipse2 geometry ellipse = ellipse = ellipse width = width ellipse height = height } Object get Restore Data { ellipse clone } } 