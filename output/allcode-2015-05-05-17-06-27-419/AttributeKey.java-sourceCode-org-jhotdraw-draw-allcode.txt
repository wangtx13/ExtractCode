org jhotdraw draw import lang reflect * Attribute Key< T> { private String key private T default Value private Null Value Allowed Attribute Key String key { this key } Attribute Key String key T default Value { this key default Value } Attribute Key String key T default Value Null Value Allowed { this key = key this default Value = default Value this Null Value Allowed = Null Value Allowed } String get Key { key } T get Default Value { default Value } T get Figure { T value = T get Attribute this value == ! Null Value Allowed ? default Value value } set Figure T value { if value == ! Null Value Allowed { new Null Pointer Exception Null value not allowed for Attribute Key +key } set Attribute this value } basic Set Figure T value { if value == ! Null Value Allowed { new Null Pointer Exception Null value not allowed for Attribute Key +key } basic Set Attribute this value } equals Object { if instanceof Attribute Key { Attribute Key that = Attribute Key that key equals this key } } hash Code { key hash Code } String to String { key } Null Value Allowed { Null Value Allowed } String args { Type Variable = new Attribute Key< Double> hey get Class get Type Parameters 0 } Assignable Object value { if value == { Null Value Allowed } try { T = T value } catch Class Cast Exception { } } } 