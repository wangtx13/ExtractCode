org jhotdraw gui import awt * import awt event * import awt peer * import beans * import lang reflect * import javax swing * import javax swing event * import javax swing plaf * import org jhotdraw gui event * import org jhotdraw util * J Sheet J Dialog { Event Listener List listener List = new Event Listener List private Component Listener owner Movement Handler private Point shift Back Location private Point old Location private Component old Focus Owner private Installed private Animated = J Sheet Frame owner { super owner init } J Sheet Dialog owner { super owner init } private init { if get Owner != Show As Sheet { set Undecorated get Root Pane set Window Decoration Style J Root Pane N O N E get Root Pane set Border U I Manager get Border Sheet border } owner Movement Handler = new Component Adapter { component Moved Component Event evt { Window owner = get Owner Point new Location = owner get Location if ! new Location equals old Location { set Location new Location + owner get Width - get Width / 2 new Location + owner get Insets top shift Back Location = old Location = new Location } } } } Show As Sheet { U I Manager get Boolean Sheet show As Sheet } install Sheet { if ! Installed { Window owner = get Owner if owner != { Point owner Loc = owner get Location Point sheet Loc if Show As Sheet { if owner instanceof J Frame { sheet Loc = new Point owner Loc + owner get Width - get Width / 2 owner Loc + owner get Insets top + J Frame owner get Root Pane get Content Pane get Y } else if owner instanceof J Dialog { sheet Loc = new Point owner Loc + owner get Width - get Width / 2 owner Loc + owner get Insets top + J Dialog owner get Root Pane get Content Pane get Y } else { sheet Loc = new Point owner Loc + owner get Width - get Width / 2 owner Loc + owner get Insets top } if sheet Loc < 0 { owner set Location owner Loc - sheet Loc owner Loc sheet Loc = 0 shift Back Location = owner Loc old Location = owner get Location } else { shift Back Location = old Location = owner Loc } } else { sheet Loc = new Point owner Loc + owner get Width - get Width / 2 owner Loc + owner get Height - get Height / 2 } set Location sheet Loc old Focus Owner = owner get Focus Owner owner set Focusable Window State owner set Enabled if U I Manager get Boolean Sheet show As Sheet { owner add Component Listener owner Movement Handler } else { if owner instanceof Frame { set Title Frame owner get Title } } } Installed = } } uninstall Sheet { if Installed { Window owner = get Owner if owner != { owner set Focusable Window State owner set Enabled owner remove Component Listener owner Movement Handler if shift Back Location != { owner set Location shift Back Location } if old Focus Owner != { owner to Front old Focus Owner request Focus } } Installed = } } add Notify { super add Notify if U I Manager get Boolean Sheet show As Sheet { Methods invoke Static ch randelshofer quaqua Quaqua Utilities set Window Alpha new Class { Window Integer T Y P E } new Object {this 240} } } set Animated new Value { old Value = Animated Animated = new Value fire Property Change animated old Value new Value } Animated { Animated } dispose { super dispose uninstall Sheet } hide0 { super hide } show0 { super show } hide { if Animated Show As Sheet { get Content Pane set Visible Rectangle start Bounds = get Bounds parent Width = get Parent get Width Rectangle Bounds = new Rectangle parent Width < start Bounds width ? start Bounds + start Bounds width - parent Width / 2 start Bounds start Bounds Math min start Bounds width parent Width 0 Timer timer = new Timer 20 timer add Action Listener new Action Listener { long start Time long Time action Performed Action Event evt { long now = System current Time Millis if start Time == 0 { start Time = now Time = start Time + 200 } if now > Time { timer stop hide0 set Bounds start Bounds get Content Pane set Visible uninstall Sheet } else { float ratio = now - start Time / float Time - start Time set Bounds start Bounds * 1f - ratio + Bounds * ratio start Bounds * 1f - ratio + Bounds * ratio start Bounds width * 1f - ratio + Bounds width * ratio start Bounds height * 1f - ratio + Bounds height * ratio } } } timer set Repeats timer set Initial Delay 5 timer start } else { hide0 uninstall Sheet } } show { if Animated Show As Sheet { install Sheet get Content Pane set Visible long start Time = System current Time Millis long Time = start Time + 300 Rectangle Bounds = get Bounds parent Width = get Parent get Width Rectangle start Bounds = new Rectangle parent Width < Bounds width ? Bounds + Bounds width - parent Width / 2 Bounds Bounds Math min Bounds width parent Width 0 set Bounds start Bounds show0 Timer timer = new Timer 20 timer add Action Listener new Action Listener { long start Time long Time action Performed Action Event evt { long now = System current Time Millis if start Time == 0 { start Time = now Time = start Time + 200 } if now > Time { timer stop set Bounds Bounds get Content Pane set Visible request Focus Window get Parent to Front } else { float ratio = now - start Time / float Time - start Time set Bounds start Bounds * 1f - ratio + Bounds * ratio start Bounds * 1f - ratio + Bounds * ratio start Bounds width * 1f - ratio + Bounds width * ratio start Bounds height * 1f - ratio + Bounds height * ratio } } } timer set Repeats timer set Initial Delay 5 timer start } else { install Sheet show0 } } add Sheet Listener Sheet Listener { listener List add Sheet Listener } remove Sheet Listener Sheet Listener { listener List remove Sheet Listener } fire Option Selected J Option Pane pane { Object value = pane get Value option if value == { option = J Option Pane CLOSED_OPTION } else { if pane get Options == { if value instanceof Integer { option = Integer value Value } else { option = J Option Pane CLOSED_OPTION } } else { option = J Option Pane CLOSED_OPTION Object options = pane get Options for = 0 = options length < i++ { if options equals value { option = break } } if option == J Option Pane CLOSED_OPTION { value = } } } fire Option Selected pane option value pane get Input Value } fire Option Selected J Option Pane pane option Object value Object input Value { Sheet Event sheet Event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Sheet Listener { if sheet Event == sheet Event = new Sheet Event this pane option value input Value Sheet Listener listeners i+1 option Selected sheet Event } } } fire Option Selected J File Chooser pane option { Sheet Event sheet Event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Sheet Listener { if sheet Event == sheet Event = new Sheet Event this pane option Sheet Listener listeners i+1 option Selected sheet Event } } } show Sheet J Option Pane pane Component parent Component Sheet Listener listener { J Sheet sheet = create Sheet pane parent Component style From Message Type pane get Message Type sheet add Sheet Listener listener sheet show } show Confirm Sheet Component parent Component Object message Sheet Listener listener { show Confirm Sheet parent Component message J Option Pane YES_NO_CANCEL_OPTION listener } show Confirm Sheet Component parent Component Object message option Type Sheet Listener listener { show Confirm Sheet parent Component message option Type J Option Pane QUESTION_MESSAGE listener } show Confirm Sheet Component parent Component Object message option Type message Type Sheet Listener listener { show Confirm Sheet parent Component message option Type message Type listener } show Confirm Sheet Component parent Component Object message option Type message Type Icon icon Sheet Listener listener { show Option Sheet parent Component message option Type message Type icon listener } show Input Sheet Component parent Component Object message Sheet Listener listener { show Input Sheet parent Component message J Option Pane QUESTION_MESSAGE listener } show Input Sheet Component parent Component Object message Object initial Selection Value Sheet Listener listener { show Input Sheet parent Component message J Option Pane QUESTION_MESSAGE initial Selection Value listener } show Input Sheet Component parent Component Object message message Type Sheet Listener listener { show Input Sheet parent Component message message Type listener } show Input Sheet Component parent Component Object message message Type Icon icon Object selection Values Object initial Selection Value Sheet Listener listener { J Option Pane pane = new J Option Pane message message Type J Option Pane OK_CANCEL_OPTION icon pane set Wants Input pane set Selection Values selection Values pane set Initial Selection Value initial Selection Value pane set Component Orientation parent Component == ? J Option Pane get Root Frame parent Component get Component Orientation style = style From Message Type message Type J Sheet sheet = create Sheet pane parent Component style pane select Initial Value sheet add Sheet Listener listener sheet show sheet to Front } show Message Sheet Component parent Component Object message { show Message Sheet parent Component message J Option Pane INFORMATION_MESSAGE } show Message Sheet Component parent Component Object message Sheet Listener listener { show Message Sheet parent Component message J Option Pane INFORMATION_MESSAGE listener } show Message Sheet Component parent Component Object message message Type { show Message Sheet parent Component message message Type } show Message Sheet Component parent Component Object message message Type Sheet Listener listener { show Message Sheet parent Component message message Type listener } show Message Sheet Component parent Component Object message message Type Icon icon Sheet Listener listener { show Option Sheet parent Component message J Option Pane DEFAULT_OPTION message Type icon listener } show Option Sheet Component parent Component Object message option Type message Type Icon icon Object options Object initial Value Sheet Listener listener { J Option Pane pane = new J Option Pane message message Type option Type icon options initial Value pane set Initial Value initial Value pane set Component Orientation parent Component == ? J Option Pane get Root Frame parent Component get Component Orientation style = style From Message Type message Type J Sheet sheet = create Sheet pane parent Component style pane select Initial Value sheet add Sheet Listener listener sheet show sheet to Front } private style From Message Type message Type { switch message Type { case J Option Pane ERROR_MESSAGE J Root Pane ERROR_DIALOG case J Option Pane QUESTION_MESSAGE J Root Pane QUESTION_DIALOG case J Option Pane WARNING_MESSAGE J Root Pane WARNING_DIALOG case J Option Pane INFORMATION_MESSAGE J Root Pane INFORMATION_DIALOG case J Option Pane PLAIN_MESSAGE default J Root Pane PLAIN_DIALOG } } private J Sheet create Sheet J Option Pane pane Component parent Component style { Window window = get Window For Component parent Component J Sheet sheet if window instanceof Frame { sheet = new J Sheet Frame window } else { sheet = new J Sheet Dialog window } Container content Pane = sheet get Content Pane content Pane set Layout new Border Layout content Pane add pane Border Layout C E N T E R sheet set Resizable sheet add Window Listener new Window Adapter { private got Focus = count window Closing Window Event we { pane set Value } window Closed Window Event we { if pane get Value == J Option Pane UNINITIALIZED_VALUE { sheet fire Option Selected pane } } window Gained Focus Window Event we { if !got Focus { Option Pane U I ui = pane get U I if ui != { ui select Initial Value pane } got Focus = } } } sheet add Component Listener new Component Adapter { component Shown Component Event { pane set Value J Option Pane UNINITIALIZED_VALUE } } pane add Property Change Listener new Property Change Listener { property Change Property Change Event event { if sheet Visible event get Source == pane event get Property Name equals J Option Pane VALUE_PROPERTY event get New Value != event get New Value != J Option Pane UNINITIALIZED_VALUE { sheet set Visible sheet fire Option Selected pane } } } sheet sheet } Window get Window For Component Component parent Component { if parent Component == J Option Pane get Root Frame if parent Component instanceof Frame || parent Component instanceof Dialog Window parent Component get Window For Component parent Component get Parent } show Save Sheet J File Chooser chooser Component parent Sheet Listener listener { chooser set Dialog Type J File Chooser SAVE_DIALOG show Sheet chooser parent listener } show Open Sheet J File Chooser chooser Component parent Sheet Listener listener { chooser set Dialog Type J File Chooser OPEN_DIALOG show Sheet chooser parent listener } show Sheet J File Chooser chooser Component parent String approve Button Text Sheet Listener listener { if approve Button Text != { chooser set Approve Button Text approve Button Text chooser set Dialog Type J File Chooser CUSTOM_DIALOG } Frame frame = parent instanceof Frame ? Frame parent Frame Swing Utilities get Ancestor Of Class Frame parent String title = chooser get U I get Dialog Title chooser chooser get Accessible Context set Accessible Description title J Sheet sheet = new J Sheet frame sheet add Sheet Listener listener Container content Pane = sheet get Content Pane content Pane set Layout new Border Layout content Pane add chooser Border Layout C E N T E R Action Listener action Listener = new Action Listener { action Performed Action Event evt { option if evt get Action Command equals Approve Selection { option = J File Chooser APPROVE_OPTION } else { option = J File Chooser CANCEL_OPTION } sheet hide sheet fire Option Selected chooser option chooser remove Action Listener this } } chooser add Action Listener action Listener sheet add Window Listener new Window Adapter { window Closing Window Event { sheet fire Option Selected chooser J File Chooser CANCEL_OPTION chooser remove Action Listener action Listener } } chooser rescan Current Directory sheet sheet show sheet to Front } } 