org jhotdraw samples draw import org jhotdraw draw Drawing import org jhotdraw draw Text Figure import org jhotdraw draw action Swing Worker import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import netscape javascript * import org jhotdraw xml * Draw Live Connect Applet J Applet { private String V E R S I O N = 0 44 private String N A M E = Plasma Draw init { try { U I Manager set Look And Feel U I Manager get System Look And Feel Class Name } catch Throwable { } Container = get Content Pane set Layout new Box Layout Box Layout Y_AXIS String lines = get Applet Info split \n for i=0 < lines length i++ { add new J Label lines } new Swing Worker { Object construct { Object result try { if get Parameter data != get Parameter data length > 0 { Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Draw Figure Factory new String Reader get Parameter data domi open Element Plasma Draw result = domi read Object 0 } else if get Parameter datafile != { Input Stream = try { U R L url = new U R L get Document Base get Parameter datafile = url open Connection get Input Stream Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Draw Figure Factory domi open Element Plasma Draw result = domi read Object 0 } finally { if != close } } else { result = } } catch Throwable { result = } result } finished { Container = get Content Pane set Layout new Border Layout remove All Object result = get Value init Components if result != { if result instanceof Drawing { set Drawing Drawing result } else if result instanceof Throwable { get Drawing add new Text Figure result to String Throwable result Stack Trace } } Live Connect try { Class for Name netscape javascript J S Object Live Connect = } catch Throwable { Live Connect = } load Button set Enabled Live Connect get Parameter dataread != save Button set Enabled Live Connect get Parameter datawrite != if Live Connect { String Name = get Parameter dataread if Name index Of ' ' > 0 { Name = Name substring 0 Name index Of ' ' - 1 } J S Object win = J S Object get Window Draw Live Connect Applet this Object data = win call Name new Object 0 if data instanceof String { set Data String data } } validate } } start } private set Drawing Drawing { drawing Panel set Drawing } private Drawing get Drawing { drawing Panel get Drawing } set Data String text { if text != text length > 0 { String Reader = new String Reader text try { Nano Xml Lite Dom Input domi = new Nano Xml Lite Dom Input new Draw Figure Factory domi open Element Plasma Draw set Drawing Drawing domi read Object 0 } catch Throwable { get Drawing clear Text Figure tf = new Text Figure tf set Text get Message tf set Bounds new Point2 10 10 new Point2 100 100 get Drawing add tf Stack Trace } finally { if != close } } } String get Data { Char Array Writer out = new Char Array Writer try { Nano Xml Lite Dom Output domo = new Nano Xml Lite Dom Output new Draw Figure Factory domo open Element Plasma Draw domo write Object get Drawing domo close Element domo save out } catch I O Exception { Text Figure tf = new Text Figure tf set Text get Message tf set Bounds new Point2 10 10 new Point2 100 100 get Drawing add tf Stack Trace } finally { if out != out close } out to String } String get Parameter Info { new String { { data String the data to be displayed by this applet } { datafile U R L U R L to containing the data to be displayed by this applet } { dataread function the of Java Script function which can be used to read the data } { datawrite function the of Java Script function which can be used to write the data } } } String get Applet Info { N A M E+ \n Version + V E R S I O N + \n\n Copyright 2004 \u00a9 Werner Randelshofer + \n Alle Rechte vorbehalten + \n\n Diese Software basiert auf + \n Jhotdraw \u00a9 1996 1997 I F A Informatik und Erich Gamma } private init Components { tool Button Group = new javax swing Button Group drawing Panel = new org jhotdraw samples draw Drawing Panel Tool Bar1 = new javax swing J Tool Bar load Button = new javax swing J Button save Button = new javax swing J Button Form Listener form Listener = new Form Listener get Content Pane add drawing Panel awt Border Layout C E N T E R Tool Bar1 set Floatable load Button set Text Laden load Button add Action Listener form Listener Tool Bar1 add load Button save Button set Text Speichern save Button add Action Listener form Listener Tool Bar1 add save Button get Content Pane add Tool Bar1 awt Border Layout S O U T H } private Form Listener implements awt event Action Listener { action Performed awt event Action Event evt { if evt get Source == load Button { Draw Live Connect Applet this load evt } else if evt get Source == save Button { Draw Live Connect Applet this save evt } } } private save awt event Action Event evt { try { String Name = get Parameter datawrite if Name index Of ' ' > 0 { Name = Name substring 0 Name index Of ' ' - 1 } J S Object win = J S Object get Window this Object result = win call Name new Object { get Data } } catch Throwable { Text Figure tf = new Text Figure Fehler +t Affine Transform tx = new Affine Transform tx translate 10 20 tf transform tx get Drawing add tf } } private load awt event Action Event evt { try { String Name = get Parameter dataread if Name index Of ' ' > 0 { Name = Name substring 0 Name index Of ' ' - 1 } J S Object win = J S Object get Window this Object result = win call Name new Object 0 if result instanceof String { set Data String result } } catch Throwable { Text Figure tf = new Text Figure Fehler +t Affine Transform tx = new Affine Transform tx translate 10 20 tf transform tx get Drawing add tf } } private org jhotdraw samples draw Drawing Panel drawing Panel private javax swing J Tool Bar Tool Bar1 private javax swing J Button load Button private javax swing J Button save Button private javax swing Button Group tool Button Group } 