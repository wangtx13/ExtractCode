org jhotdraw draw import org jhotdraw undo Composite Edit import awt * import awt geom * import awt event * import javax swing event * import util * Abstract Tool implements Tool { private Active Working Drawing Editor editor Point anchor = new Point Event Listener List listener List = new Event Listener List Abstract Tool { } add Undoable Edit Listener Undoable Edit Listener { listener List add Undoable Edit Listener } remove Undoable Edit Listener Undoable Edit Listener { listener List remove Undoable Edit Listener } activate Drawing Editor editor { this editor = editor Active = } deactivate Drawing Editor editor { this editor = editor Active = } Active { Active } Drawing View get View { editor get View } Drawing Editor get Editor { editor } Drawing get Drawing { get View get Drawing } Point2 view To Drawing Point { constrain Point get View view To Drawing } Point2 constrain Point Point { constrain Point get View view To Drawing } Point2 constrain Point Point2 { get View get Constrainer constrain Point } edit Delete { get View get Drawing remove All get View get Selected Figures } edit Cut { } edit Copy { } edit Duplicate { } edit Paste { } key Released Key Event evt { fire Tool Done } key Typed Key Event evt { } key Pressed Key Event evt { if evt get Source instanceof Container { editor set View editor find View Container evt get Source } Composite Edit edit switch evt get Key Code { case Key Event VK_DELETE case Key Event VK_BACK_SPACE { edit Delete break } case Key Event VK_A { if evt get Modifiers Key Event CTRL_MASK | Key Event META_MASK != 0 { get View add To Selection get View get Drawing get Figures } break } case Key Event VK_LEFT { Collection< Figure> figures = get View get Selected Figures Affine Transform tx = new Affine Transform tx translate -1 0 for Figure figures { will Change basic Transform tx changed } get Drawing fire Undoable Edit Happened new Transform Edit figures tx break } case Key Event VK_RIGHT { Collection< Figure> figures = get View get Selected Figures Affine Transform tx = new Affine Transform tx translate 1 0 for Figure figures { will Change basic Transform tx changed } get Drawing fire Undoable Edit Happened new Transform Edit figures tx break } case Key Event VK_UP { Collection< Figure> figures = get View get Selected Figures Affine Transform tx = new Affine Transform tx translate 0 -1 for Figure figures { will Change basic Transform tx changed } get Drawing fire Undoable Edit Happened new Transform Edit figures tx break } case Key Event VK_DOWN { Collection< Figure> figures = get View get Selected Figures get Drawing fire Undoable Edit Happened edit = new Composite Edit Figur verschieben Affine Transform tx = new Affine Transform tx translate 0 1 for Figure figures { will Change basic Transform tx changed } get Drawing fire Undoable Edit Happened new Transform Edit figures tx break } } } mouse Clicked Mouse Event evt { } mouse Entered Mouse Event evt { if ! Working { editor set View editor find View Container evt get Source } } mouse Exited Mouse Event evt { } mouse Moved Mouse Event evt { } mouse Pressed Mouse Event evt { Drawing View view = editor find View Container evt get Source view request Focus anchor = new Point evt get X evt get Y Working = fire Tool Started view } mouse Released Mouse Event evt { Working = } add Tool Listener Tool Listener { listener List add Tool Listener } remove Tool Listener Tool Listener { listener List remove Tool Listener } fire Tool Started Drawing View view { Tool Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Tool Listener { if event == event = new Tool Event this view new Rectangle 0 0 -1 -1 Tool Listener listeners i+1 tool Started event } } } fire Tool Done { Tool Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Tool Listener { if event == event = new Tool Event this get View new Rectangle 0 0 -1 -1 Tool Listener listeners i+1 tool Done event } } } fire Area Invalidated Rectangle2 { Point p1 = get View drawing To View new Point2 Point p2 = get View drawing To View new Point2 x+r width y+r height fire Area Invalidated new Rectangle p1 p1 p2 x-p1 p2 y-p1 } fire Area Invalidated Rectangle invalidated Area { Tool Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Tool Listener { if event == event = new Tool Event this get View invalidated Area Tool Listener listeners i+1 area Invalidated event } } } draw Graphics2 { } update Cursor Drawing View view Point { Handle handle = view find Handle if handle != { view set Cursor handle get Cursor } else { Figure figure = view find Figure if figure != { view set Cursor figure get Cursor view view To Drawing } else { view set Cursor Cursor get Default Cursor } } } } 