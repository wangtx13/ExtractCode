org jhotdraw draw import awt * import awt geom * import org jhotdraw draw Attribute Keys * import org jhotdraw geom * Chop Diamond Connector Chop Box Connector { Chop Diamond Connector { } Chop Diamond Connector Figure owner { super owner } Point2 chop Figure target Point2 from { target = get Connector Target target Rectangle2 = target get Bounds if Diamond Figure IS_QUADRATIC get target { side = Math max width height -= side - width / 2 -= side - height / 2 width = height = side } growx growy switch STROKE_PLACEMENT get target { case I N Sid E { growx = growy = 0f break } case O U T Sid E { line Length = Math sqrt width * width + height * height scale = get Stroke Total Width target * 2d / line Length growx = scale * height growy = scale * width break } case C E N T E R default line Length = Math sqrt width * width + height * height scale = get Stroke Total Width target / line Length growx = scale * height growy = scale * width break } Geom grow growx growy Point2 c1 = new Point2 + width/2 + height/2 Point2 p2 = new Point2 + width/2 + height Point2 p4 = new Point2 + width/2 if contains from { if from > from < +r height/2 { p2 } else { p4 } } ang = Geom point To Angle from Point2 p1 = new Point2 + width + height/2 Point2 p3 = new Point2 + height/2 Point2 rp = if ang > 0 ang < 1 57 { rp = Geom intersect p1 p1 p2 p2 c1 c1 from from } else if ang > 1 575 ang < 3 14 { rp = Geom intersect p2 p2 p3 p3 c1 c1 from from } else if ang > -3 14 ang < -1 575 { rp = Geom intersect p3 p3 p4 p4 c1 c1 from from } else if ang > -1 57 ang < 0 { rp = Geom intersect p4 p4 p1 p1 c1 c1 from from } if rp == { rp = Geom angle To Point ang } rp } } 