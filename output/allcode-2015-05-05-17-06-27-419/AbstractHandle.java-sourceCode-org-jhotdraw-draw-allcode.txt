org jhotdraw draw import util Collection import javax swing event * import awt * import awt event * import javax swing undo * import util * Abstract Handle implements Handle Figure Listener { private Figure owner Drawing View view Event Listener List listener List = new Event Listener List private Rectangle bounds Abstract Handle Figure owner { this owner = owner owner add Figure Listener this } get Handlesize { 7 } add Handle Listener Handle Listener { listener List add Handle Listener } remove Handle Listener Handle Listener { listener List remove Handle Listener } Figure get Owner { owner } set View Drawing View view { this view = view } fire Area Invalidated Rectangle invalidated Area { Handle Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Handle Listener { if event == event = new Handle Event this invalidated Area Handle Listener listeners i+1 area Invalidated event } } } fire Undoable Edit Happened Undoable Edit edit { view get Drawing fire Undoable Edit Happened edit } fire Handle Request Remove Rectangle invalidated Area { Handle Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Handle Listener { if event == event = new Handle Event this invalidated Area Handle Listener listeners i+1 handle Request Remove event } } } fire Handle Request Secondary Handles { Handle Event event = Object listeners = listener List get Listener List for = listeners length-2 i>=0 i-=2 { if listeners == Handle Listener { if event == event = new Handle Event this Handle Listener listeners i+1 handle Request Secondary Handles event } } } draw Graphics2 { draw Circle Color white Color black } draw Circle Graphics2 Color fill Color stroke { Rectangle = get Bounds set Color fill fill Oval width height set Stroke new Basic Stroke set Color stroke draw Oval width height } draw Rectangle Graphics2 Color fill Color stroke { Rectangle = get Bounds set Color fill fill set Stroke new Basic Stroke set Color stroke draw } draw Diamond Graphics2 Color fill Color stroke { Rectangle = get Bounds grow 1 1 Polygon = new Polygon add Point + width / 2 add Point + width + height / 2 add Point + width / 2 + height add Point + height / 2 add Point + width / 2 set Color fill fill set Stroke new Basic Stroke set Color stroke draw } contains Point { get Bounds contains } invalidate { fire Area Invalidated get Draw Bounds } dispose { owner remove Figure Listener this owner = } figure Area Invalidated Figure Event evt { update Bounds } figure Added Figure Event { } figure Removed Figure Event { } figure Request Remove Figure Event { } figure Changed Figure Event evt { update Bounds } Cursor get Cursor { Cursor get Predefined Cursor Cursor MOVE_CURSOR } Combinable With Handle handle { get Class Assignable From handle get Class } key Typed Key Event evt { } key Released Key Event evt { } key Pressed Key Event evt { } Rectangle get Bounds { if bounds == { bounds = basic Get Bounds } Rectangle bounds clone } Rectangle get Draw Bounds { Rectangle = get Bounds grow 2 2 } Rectangle basic Get Bounds update Bounds { Rectangle new Bounds = basic Get Bounds if bounds == || ! new Bounds equals bounds { if bounds != fire Area Invalidated get Draw Bounds bounds = new Bounds fire Area Invalidated get Draw Bounds } } track Click Point modifiers Ex { } figure Attribute Changed Figure Event { } view Transform Changed { bounds = } Collection< Handle> create Secondary Handles { Collections empty List } } 