org jhotdraw app import org jhotdraw app action Select All Action import * import util * import org jhotdraw util * import javax swing * import util concurrent * import util prefs * Abstract Project J Panel implements Project { private Application application J File Chooser save Chooser J File Chooser open Chooser File Executor executor private Hash Map actions private has Unsaved Changes private Preferences prefs private multiple Open Id = 1 private Showing Abstract Project { } init { prefs = Preferences user Node For Package get Class init Components } private init Components { set Layout new awt Border Layout } set Application Application new Value { Application old Value = application application = new Value fire Property Change application old Value new Value } Application get Application { application } J Component get Component { this } File get File { } set File File new Value { File old Value = = new Value if prefs != new Value != { prefs put project File new Value get Path } fire Property Change old Value new Value } J File Chooser get Open Chooser { if open Chooser == { open Chooser = create Open Chooser } open Chooser } J File Chooser create Open Chooser { J File Chooser = new J File Chooser if prefs != { set Selected File new File prefs get project File System get Property user home } } J File Chooser get Save Chooser { if save Chooser == { save Chooser = create Save Chooser } save Chooser } J File Chooser create Save Chooser { J File Chooser = new J File Chooser if prefs != { set Current Directory new File prefs get project File System get Property user home } } has Unsaved Changes { has Unsaved Changes } set Has Unsaved Changes new Value { old Value = has Unsaved Changes has Unsaved Changes = new Value fire Property Change has Unsaved Changes old Value new Value } dispose { } Action get Action String { actions == ? Action actions get } put Action String Action action { if actions == { actions = new Hash Map } if action == { actions remove } else { actions put action } } execute Runnable worker { if executor == { executor = Executors new Single Thread Executor } executor execute worker } set Multiple Open Id new Value { old Value = multiple Open Id multiple Open Id = new Value fire Property Change multiple Open Id old Value new Value } get Multiple Open Id { multiple Open Id } set Showing new Value { old Value = Showing Showing = new Value fire Property Change showing old Value new Value } Showing { Showing } mark Changes As Saved { set Has Unsaved Changes } } 