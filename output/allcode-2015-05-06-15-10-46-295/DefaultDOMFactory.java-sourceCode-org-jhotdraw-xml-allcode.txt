org jhotdraw xml import util * default dom factory implements dom factory { private hash map< string> to name map = new hash map< string> private hash map< object> name to prototype map = new hash map< object> private hash map< string> enum to name map = new hash map< string> private hash map< class> name to enum map = new hash map< class> private hash map< enum string> enum to value map = new hash map< enum string> private hash map< set< enum>> value to enum map = new hash map< set< enum>> default dom factory { } add storable name c { name to prototype map put name c to name map put c name } add storable name dom storable prototype { name to prototype map put name prototype to name map put prototype get name } add enum name c { enum to name map put c name name to enum map put name c } add enum value enum e { enum to value map put e value set< enum> enums if value to enum map contains key value { enums = value to enum map get value } else { enums = new hash set< enum> value to enum map put value enums } enums add e } create name { o = name to prototype map get name if o == { throw new illegal argument storable name not known to factory +name } if o instanceof { try { o new instance } catch e { illegal argument = new illegal argument storable not instantiable by factory +name init cause e throw } } else { try { o get get clone o } catch e { illegal argument = new illegal argument storable prototype not cloneable by factory name +name init cause e throw } } } get name dom storable o { name = to name map get o get if name == { throw new illegal argument storable not known to factory storable +o+ factory +this get } name } get enum name enum e { name = enum to name map get e get if name == { throw new illegal argument enum not known to factory +e get } name } get enum value enum e { enum to value map contains key e ? enum to value map get e e to } enum create enum name value { enum = name to enum map get name if enum == { throw new illegal argument enum name not known to factory +name } set< enum> enums = value to enum map get value if enums == { enum value of enum value } for enum e enums { if e get == enum { e } } throw new illegal argument enum value not known to factory +value } } 