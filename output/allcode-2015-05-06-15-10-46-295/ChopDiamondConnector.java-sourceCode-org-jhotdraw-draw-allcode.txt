org jhotdraw draw import awt * import awt geom * import org jhotdraw draw attribute keys * import org jhotdraw geom * chop diamond connector chop box connector { chop diamond connector { } chop diamond connector figure owner { super owner } point2 d chop figure target point2 d from { target = get connector target target rectangle2 d r = target get bounds if diamond figure IS_QUADRATIC get target { side = math max r width r height r x = side r width / 2 r y = side r height / 2 r width = r height = side } growx growy switch STROKE_PLACEMENT get target { case i n sid e { growx = growy = 0f break } case o u t sid e { line length = math sqrt r width * r width + r height * r height scale = get stroke total width target * 2d / line length growx = scale * r height growy = scale * r width break } case c e n t e r default line length = math sqrt r width * r width + r height * r height scale = get stroke total width target / line length growx = scale * r height growy = scale * r width break } geom grow r growx growy point2 d c1 = new point2 d r x + r width/2 r y + r height/2 point2 d p2 = new point2 d r x + r width/2 r y + r height point2 d p4 = new point2 d r x + r width/2 r y if r contains from { if from y > r y from y < r y +r height/2 { p2 } else { p4 } } ang = geom point to angle r from point2 d p1 = new point2 d r x + r width r y + r height/2 point2 d p3 = new point2 d r x r y + r height/2 point2 d rp = if ang > 0 ang < 1 57 { rp = geom intersect p1 x p1 y p2 x p2 y c1 x c1 y from x from y } else if ang > 1 575 ang < 3 14 { rp = geom intersect p2 x p2 y p3 x p3 y c1 x c1 y from x from y } else if ang > 3 14 ang < 1 575 { rp = geom intersect p3 x p3 y p4 x p4 y c1 x c1 y from x from y } else if ang > 1 57 ang < 0 { rp = geom intersect p4 x p4 y p1 x p1 y c1 x c1 y from x from y } if rp == { rp = geom angle to point r ang } rp } } 