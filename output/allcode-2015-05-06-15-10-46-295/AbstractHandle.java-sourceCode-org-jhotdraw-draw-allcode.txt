org jhotdraw draw import util collection import javax swing event * import awt * import awt event * import javax swing undo * import util * handle implements handle figure listener { private figure owner drawing view view event listener list listener list = new event listener list private rectangle bounds handle figure owner { this owner = owner owner add figure listener this } get handlesize { 7 } add handle listener handle listener l { listener list add handle listener l } remove handle listener handle listener l { listener list remove handle listener l } figure get owner { owner } set view drawing view view { this view = view } fire area invalidated rectangle invalidated area { handle event event = listeners = listener list get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handle listener { if event == event = new handle event this invalidated area handle listener listeners i+1 area invalidated event } } } fire undoable edit happened undoable edit edit { view get drawing fire undoable edit happened edit } fire handle request remove rectangle invalidated area { handle event event = listeners = listener list get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handle listener { if event == event = new handle event this invalidated area handle listener listeners i+1 handle request remove event } } } fire handle request secondary handles { handle event event = listeners = listener list get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handle listener { if event == event = new handle event this handle listener listeners i+1 handle request secondary handles event } } } draw graphics2 d g { draw circle g color white color black } draw circle graphics2 d g color fill color stroke { rectangle r = get bounds g set color fill g fill oval r x r y r width r height g set stroke new basic stroke g set color stroke g draw oval r x r y r width r height } draw rectangle graphics2 d g color fill color stroke { rectangle r = get bounds g set color fill g fill r g set stroke new basic stroke g set color stroke g draw r } draw diamond graphics2 d g color fill color stroke { rectangle r = get bounds r grow 1 1 polygon p = new polygon p add point r x + r width / 2 r y p add point r x + r width r y + r height / 2 p add point r x + r width / 2 r y + r height p add point r x r y + r height / 2 p add point r x + r width / 2 r y g set color fill g fill p g set stroke new basic stroke g set color stroke g draw p } contains point p { get bounds contains p } invalidate { fire area invalidated get draw bounds } dispose { owner remove figure listener this owner = } figure area invalidated figure event evt { update bounds } figure added figure event e { } figure removed figure event e { } figure request remove figure event e { } figure changed figure event evt { update bounds } cursor get cursor { cursor get predefined cursor cursor MOVE_CURSOR } is combinable with handle handle { get is assignable from handle get } key typed key event evt { } key released key event evt { } key pressed key event evt { } rectangle get bounds { if bounds == { bounds = basic get bounds } rectangle bounds clone } rectangle get draw bounds { rectangle r = get bounds r grow 2 2 r } rectangle basic get bounds update bounds { rectangle new bounds = basic get bounds if bounds == || ! new bounds equals bounds { if bounds != fire area invalidated get draw bounds bounds = new bounds fire area invalidated get draw bounds } } track click point p modifiers ex { } figure attribute changed figure event e { } view transform changed { bounds = } collection< handle> create secondary handles { collections empty list } } 