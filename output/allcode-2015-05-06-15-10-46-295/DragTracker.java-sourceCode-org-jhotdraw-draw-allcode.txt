org jhotdraw draw import awt * import awt geom * import awt event * import util * drag tracker tool { figure anchor figure point2 d old point point2 d anchor point private is dragging drag tracker figure figure { anchor figure = figure } mouse moved mouse event evt { update cursor editor find view container evt get source new point evt get x evt get y } mouse pressed mouse event evt { super mouse pressed evt drawing view view = get view if evt is shift down { view set handle detail level 0 view toggle selection anchor figure if ! view is figure selected anchor figure { anchor figure = } } else if ! view is figure selected anchor figure { view set handle detail level 0 view clear selection view add to selection anchor figure } point2 d origin = new point2 d MAX_VALUE MAX_VALUE for figure f view get selected figures { rectangle2 d b = f get bounds origin x = math min origin x b x origin y = math min origin y b y } point2 d constrained origin = view get constrainer constrain point new point2 d origin x origin y old point = view get constrainer constrain point view view to drawing new point evt get x evt get y old point x += origin x constrained origin x old point y += origin y constrained origin y anchor point = old point } mouse dragged mouse event evt { drawing view view = get view if is dragging = { is dragging = update cursor editor find view container evt get source new point evt get x evt get y } point2 d new point = view get constrainer constrain point view view to drawing new point evt get x evt get y affine transform tx = new affine transform tx translate new point x old point x new point y old point y for figure f view get selected figures { f will change f basic transform tx f changed } old point = new point } mouse released mouse event evt { super mouse released evt is dragging = x = evt get x y = evt get y update cursor editor find view container evt get source new point evt get x evt get y point2 d p = get view get constrainer constrain point get view view to drawing new point x y collection< figure> dragged figures = new linked list get view get selected figures figure drop target = get drawing find figure except p dragged figures if drop target != { snap back = drop target handle drop p dragged figures get view if snap back { affine transform tx = new affine transform tx translate anchor point x old point x anchor point y old point y for figure f dragged figures { f will change f basic transform tx f changed } } else { affine transform tx = new affine transform tx translate anchor point x + old point x anchor point y + old point y if ! tx is identity { get drawing fire undoable edit happened new transform edit dragged figures tx } } } else { affine transform tx = new affine transform tx translate anchor point x + old point x anchor point y + old point y if ! tx is identity { get drawing fire undoable edit happened new transform edit dragged figures tx } } fire tool done } } 