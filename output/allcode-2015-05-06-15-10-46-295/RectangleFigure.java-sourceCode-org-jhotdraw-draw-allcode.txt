org jhotdraw draw import awt * import awt geom * import io * import util * import org jhotdraw draw attribute keys * import org jhotdraw geom geom rectangle figure attributed figure { private rectangle2 d rectangle rectangle figure { this 0 0 0 0 } rectangle figure x y width height { rectangle = new rectangle2 d x y width height } rectangle2 d get bounds { rectangle2 d bounds = rectangle2 d rectangle clone bounds } draw fill graphics2 d g { rectangle2 d r = rectangle2 d rectangle clone grow = attribute keys get perpendicular fill growth this geom grow r grow grow g fill r } draw stroke graphics2 d g { rectangle2 d r = rectangle2 d rectangle clone grow = attribute keys get perpendicular draw growth this geom grow r grow grow g draw r } rectangle2 d get figure draw bounds { rectangle2 d r = rectangle2 d rectangle clone grow = attribute keys get perpendicular hit growth this + 1d geom grow r grow grow r } contains point2 d p { rectangle2 d r = rectangle2 d rectangle clone grow = attribute keys get perpendicular hit growth this + 1d geom grow r grow grow r contains p } basic set bounds point2 d anchor point2 d { rectangle x = math min anchor x x rectangle y = math min anchor y y rectangle width = math max 0 1 math abs x anchor x rectangle height = math max 0 1 math abs y anchor y } basic transform affine transform tx { point2 d anchor = get start point point2 d = get end point basic set bounds point2 d tx transform anchor anchor point2 d tx transform } rectangle figure clone { rectangle figure that = rectangle figure super clone that rectangle = rectangle2 d this rectangle clone that } restore to geometry { rectangle2 d r = rectangle2 d geometry rectangle x = r x rectangle y = r y rectangle width = r width rectangle height = r height } get restore data { rectangle clone } } 