org jhotdraw app action import awt event * import beans * import org jhotdraw app application import org jhotdraw app project toggle project property action project action { private property name private parameter private selected property value private deselected property value private setter name private getter name private property change listener project listener = new property change listener { property change property change event evt { if evt get property name == property name { update selected state } } } toggle project property action application app property name { this app property name t y p e } toggle project property action application app property name property selected property value deselected property value { super app this property name = property name this parameter = new { property } this selected property value = selected property value this deselected property value = deselected property value setter name = set + character to upper case property name char at 0 + property name substring 1 getter name = property == t y p e || property == ? is get + character to upper case property name char at 0 + property name substring 1 update selected state } action performed action event evt { project p = get current project value = get current value new value = value == selected property value || value != selected property value != value equals selected property value ? deselected property value selected property value try { p get get setter name parameter p new {new value} } catch throwable e { internal = new internal no +setter name+ on +p init cause e throw } } private get current value { project p = get current project if p != { try { p get get getter name p } catch throwable e { internal = new internal no +getter name+ on +p init cause e throw } } } install project listeners project p { super install project listeners p p add property change listener project listener update selected state } uninstall project listeners project p { super uninstall project listeners p p remove property change listener project listener } private update selected state { is selected = project p = get current project if p != { try { value = p get get getter name p is selected = value == selected property value || value != selected property value != value equals selected property value } catch throwable e { internal = new internal no +getter name+ on +p init cause e throw } } put value actions SELECTED_KEY is selected } } 