org jhotdraw draw import org jhotdraw util * import awt * import awt geom * import util * change connection handle handle { private connector original target private figure target figure private connection figure connection private point start private liner liner change connection handle figure owner { super owner set connection connection figure owner set target figure } is combinable with handle handle { } connector get target disconnect connect connector c set location point2 d p point2 d get location connector get source { if get target == get connection get start connector { get connection get end connector } get connection get start connector } track start point anchor modifiers ex { original target = get target start = anchor liner = connection get liner connection set liner } track step point anchor point modifiers ex { point2 d p = view view to drawing figure f = find connectable figure p view get drawing if f != get target figure { if get target figure != { get target figure set connectors visible } set target figure f if get source == { if get target figure != { get target figure set connectors visible get connection } } else { if get target figure != can connect get source get owner get target figure { get target figure set connectors visible get connection } } } connector target = find connection target p view get drawing if target != { p = target get anchor } set location p } track end point anchor point modifiers ex { point2 d p = view view to drawing connector target = find connection target p view get drawing if target == { target = original target } set location p if target != original target { disconnect connect target } connection set liner liner get connection update connection if get target figure != { get target figure set connectors visible set target figure } } private connector find connection target point2 d p drawing drawing { figure target figure = find connectable figure p drawing if get source == target figure != { find connector p target figure get connection } else { if target figure != target figure can connect target figure != original target !target figure includes get owner can connect get source get owner target figure { find connector p target figure get connection } } } can connect figure existing end figure target end connector find connector point2 d p figure f connection figure prototype { f find connector p prototype } draw graphics2 d g { draw circle g get target == ? color red color green color black } private figure find connectable figure point2 d p drawing drawing { for figure f drawing get figures front to back { if ! f includes get connection f can connect f contains p { f } } } set connection connection figure new connection { connection = new connection } connection figure get connection { connection } set target figure figure new target { target figure = new target } figure get target figure { target figure } rectangle basic get bounds { point center = view drawing to view get location new rectangle center x get handlesize / 2 center y get handlesize / 2 get handlesize get handlesize } } 