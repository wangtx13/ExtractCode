net n3 nanoxml import io serializable import util * xml element implements i xml element serializable { long serial uid = 2383376380548624920 l NO_LINE = 1 private i xml element parent private list attributes private list children private name private full name private namespace private content private systemid private line nr xml element { this NO_LINE } xml element full name { this full name NO_LINE } xml element full name systemid line nr { this full name systemid line nr } xml element full name namespace { this full name namespace NO_LINE } xml element full name namespace systemid line nr { this attributes = new list this children = new list 8 this full name = full name if namespace == { this name = full name } else { index = full name index of ' ' if index >= 0 { this name = full name substring index + 1 } else { this name = full name } } this namespace = namespace this content = this line nr = line nr this systemid = systemid this parent = } i xml element create p c data element { new xml element } i xml element create element full name { new xml element full name } i xml element create element full name systemid line nr { new xml element full name systemid line nr } i xml element create element full name namespace { new xml element full name namespace } i xml element create element full name namespace systemid line nr { new xml element full name namespace systemid line nr } finalize throwable { this attributes clear this attributes = this children = this full name = this name = this namespace = this content = this systemid = this parent = super finalize } i xml element get parent { this parent } get full name { this full name } get name { this name } get namespace { this namespace } set name name { this name = name this full name = name this namespace = } set name full name namespace { index = full name index of ' ' if namespace == || index < 0 { this name = full name } else { this name = full name substring index + 1 } this full name = full name this namespace = namespace } add child i xml element child { if child == { throw new illegal argument child must not be } if child get name == ! this children is empty { i xml element last child = i xml element this children get this children size 1 if last child get name == { last child set content last child get content + child get content } } xml element child parent = this this children add child } insert child i xml element child index { if child == { throw new illegal argument child must not be } if child get name == ! this children is empty { i xml element last child = i xml element this children get this children size 1 if last child get name == { last child set content last child get content + child get content } } xml element child parent = this this children add index child } remove child i xml element child { if child == { throw new illegal argument child must not be } this children remove child } remove child at index index { this children remove index } iterator iterate children { this children iterator } is leaf { this children is empty } has children { ! this children is empty } get children count { this children size } list get children { this children } i xml element get child at index index index out of bounds { i xml element this children get index } i xml element get first child named name { iterator enm = this children iterator while enm has next { i xml element child = i xml element enm next child name = child get full name if child name != child name equals name { child } } } i xml element get first child named name namespace { iterator enm = this children iterator while enm has next { i xml element child = i xml element enm next str = child get name found = str != str equals name str = child get namespace if str == { found = name == } else { found = str equals namespace } if found { child } } } list get children named name { list result = new list this children size iterator enm = this children iterator while enm has next { i xml element child = i xml element enm next child name = child get full name if child name != child name equals name { result add child } } result } list get children named name namespace { list result = new list this children size iterator enm = this children iterator while enm has next { i xml element child = i xml element enm next str = child get name found = str != str equals name str = child get namespace if str == { found = name == } else { found = str equals namespace } if found { result add child } } result } private xml attribute find attribute full name { iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next if attr get full name equals full name { attr } } } private xml attribute find attribute name namespace { iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next found = attr get name equals name if namespace == { found = attr get namespace == } else { found = namespace equals attr get namespace } if found { attr } } } get attribute count { this attributes size } get attribute name { this get attribute name } get attribute name default value { xml attribute attr = this find attribute name if attr == { default value } else { attr get value } } get attribute name namespace default value { xml attribute attr = this find attribute name namespace if attr == { default value } else { attr get value } } get attribute name default value { value = this get attribute name integer to default value integer parse value } get attribute name namespace default value { value = this get attribute name namespace integer to default value integer parse value } get attribute type name { xml attribute attr = this find attribute name if attr == { } else { attr get type } } get attribute namespace name { xml attribute attr = this find attribute name if attr == { } else { attr get namespace } } get attribute type name namespace { xml attribute attr = this find attribute name namespace if attr == { } else { attr get type } } set attribute name value { xml attribute attr = this find attribute name if attr == { attr = new xml attribute name name value c d a t a this attributes add attr } else { attr set value value } } set attribute full name namespace value { index = full name index of ' ' name = full name substring index + 1 xml attribute attr = this find attribute name namespace if attr == { attr = new xml attribute full name name namespace value c d a t a this attributes add attr } else { attr set value value } } remove attribute name { for i = 0 i < this attributes size i++ { xml attribute attr = xml attribute this attributes get i if attr get full name equals name { this attributes remove i } } } remove attribute name namespace { for i = 0 i < this attributes size i++ { xml attribute attr = xml attribute this attributes get i found = attr get name equals name if namespace == { found = attr get namespace == } else { found = attr get namespace equals namespace } if found { this attributes remove i } } } iterator iterate attribute names { list result = new list iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next result add attr get full name } result iterator } has attribute name { this find attribute name != } has attribute name namespace { this find attribute name namespace != } properties get attributes { properties result = new properties iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next result put attr get full name attr get value } result } properties get attributes in namespace namespace { properties result = new properties iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next if namespace == { if attr get namespace == { result put attr get name attr get value } } else { if namespace equals attr get namespace { result put attr get name attr get value } } } result } get systemid { this systemid } get line nr { this line nr } get content { this content } set content content { this content = content } equals raw element { try { this equals xml element i xml element raw element } catch cast e { } } equals xml element i xml element elt { if ! this name equals elt get name { } if this attributes size != elt get attribute count { } iterator enm = this attributes iterator while enm has next { xml attribute attr = xml attribute enm next if ! elt has attribute attr get name attr get namespace { } value = elt get attribute attr get name attr get namespace if ! attr get value equals value { } type = elt get attribute type attr get name attr get namespace if ! attr get type equals type { } } if this children size != elt get children count { } for i = 0 i < this children size i++ { i xml element child1 = this get child at index i i xml element child2 = elt get child at index i if ! child1 equals xml element child2 { } } } } 