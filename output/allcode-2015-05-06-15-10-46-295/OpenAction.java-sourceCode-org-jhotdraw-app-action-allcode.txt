org jhotdraw app action import org jhotdraw util * import org jhotdraw gui * import org jhotdraw gui event * import awt * import awt event * import util * import util prefs * import javax swing * import io * import org jhotdraw app application import org jhotdraw app project open action application action { = open open action application app { super app resource bundle util labels = resource bundle util get l a f bundle org jhotdraw app labels labels configure action this } action performed action event evt { application app = get application if app is enabled { app set enabled project empty project = app get current project if empty project == || empty project get != || empty project has unsaved changes { empty project = } project p if empty project == { p = app create project app add p } else { p = empty project } j chooser chooser = p get open chooser if chooser show open dialog app get component == j chooser APPROVE_OPTION { app show p open chooser p } else { app set enabled } } } open j chooser chooser project project { application app = get application = chooser get selected app set enabled multiple open = 1 for project a project app projects { if a project != project a project get != a project get equals { multiple open = math max multiple open a project get multiple open + 1 } } project set multiple open multiple open project execute new worker { construct { try { project read } catch throwable e { e } } finished value { opened project value } } } opened project project value { application app = get application if value == { project set project set enabled frame w = frame swing utilities get window ancestor project get component if w != { w set extended state w get extended state ~ frame i c o n i f i e d w to front } project get component request focus app add recent app set enabled } else { if value instanceof throwable { throwable value print stack trace } j sheet show message sheet project get component <html> + u i manager get option pane css + <b> couldn't open the \ +file+ \ </b><br> + value j option pane ERROR_MESSAGE new sheet listener { option selected sheet event evt { } } } } } 