org jhotdraw app action import org jhotdraw io * import org jhotdraw gui * import org jhotdraw gui event * import org jhotdraw util * import awt * import awt event * import javax swing * import io * import org jhotdraw app application import org jhotdraw app project save before action project action { private component old focus owner save before action application app { super app } action performed action event evt { project p = get current project if p is enabled { resource bundle util labels = resource bundle util get l a f bundle org jhotdraw app labels window w ancestor = swing utilities get window ancestor p get component old focus owner = w ancestor == ? w ancestor get focus owner p set enabled if p has unsaved changes { j option pane pane = new j option pane <html> + u i manager get option pane css + labels get save before message j option pane WARNING_MESSAGE options = { labels get save labels get cancel labels get dont save } pane set options options pane set initial value options 0 pane put client property quaqua option pane destructive option new integer 2 j sheet show sheet pane p get component new sheet listener { option selected sheet event evt { value = evt get value if value == || value equals labels get cancel { p set enabled } else if value equals labels get dont save { do it p p set enabled } else if value equals labels get save { save changes p } } } } else { do it p p set enabled if old focus owner != { old focus owner request focus } } } } save changes project p { if p get == { j chooser chooser = p get save chooser j sheet show save sheet chooser p get component new sheet listener { option selected sheet event evt { if evt get option == j chooser APPROVE_OPTION { if evt get chooser get filter instanceof extension filter { = extension filter evt get chooser get filter make acceptable evt get chooser get selected } else { = evt get chooser get selected } save to p } else { p set enabled if old focus owner != { old focus owner request focus } } } } } else { save to p p get } } save to project p { p execute new worker { construct { try { p write } catch i o e { e } } finished value { saved p value } } } saved project p value { if value == { p set p mark changes as saved do it p } else { resource bundle util labels = resource bundle util get l a f bundle org jhotdraw app labels j sheet show message sheet p get component <html> + u i manager get option pane css + labels get formatted couldnt save value j option pane ERROR_MESSAGE } p set enabled if old focus owner != { old focus owner request focus } } do it project p } 