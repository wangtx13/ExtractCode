org jhotdraw gui import awt * import awt event * import awt peer * import beans * import lang reflect * import javax swing * import javax swing event * import javax swing plaf * import org jhotdraw gui event * import org jhotdraw util * j sheet j dialog { event listener list listener list = new event listener list private component listener owner movement handler private point shift back location private point old location private component old focus owner private is installed private is animated = j sheet frame owner { super owner init } j sheet dialog owner { super owner init } private init { if get owner != is show as sheet { set undecorated get root pane set window decoration style j root pane n o n e get root pane set border u i manager get border sheet border } owner movement handler = new component adapter { component moved component event evt { window owner = get owner point new location = owner get location if ! new location equals old location { set location new location x + owner get width get width / 2 new location y + owner get insets top shift back location = old location = new location } } } } is show as sheet { u i manager get sheet show as sheet } install sheet { if ! is installed { window owner = get owner if owner != { point owner loc = owner get location point sheet loc if is show as sheet { if owner instanceof j frame { sheet loc = new point owner loc x + owner get width get width / 2 owner loc y + owner get insets top + j frame owner get root pane get content pane get y } else if owner instanceof j dialog { sheet loc = new point owner loc x + owner get width get width / 2 owner loc y + owner get insets top + j dialog owner get root pane get content pane get y } else { sheet loc = new point owner loc x + owner get width get width / 2 owner loc y + owner get insets top } if sheet loc x < 0 { owner set location owner loc x sheet loc x owner loc y sheet loc x = 0 shift back location = owner loc old location = owner get location } else { shift back location = old location = owner loc } } else { sheet loc = new point owner loc x + owner get width get width / 2 owner loc y + owner get height get height / 2 } set location sheet loc old focus owner = owner get focus owner owner set focusable window state owner set enabled if u i manager get sheet show as sheet { owner add component listener owner movement handler } else { if owner instanceof frame { set title frame owner get title } } } is installed = } } uninstall sheet { if is installed { window owner = get owner if owner != { owner set focusable window state owner set enabled owner remove component listener owner movement handler if shift back location != { owner set location shift back location } if old focus owner != { owner to front old focus owner request focus } } is installed = } } add notify { super add notify if u i manager get sheet show as sheet { ch randelshofer quaqua quaqua utilities set window alpha new { window integer t y p e } new {this 240} } } set animated new value { old value = is animated is animated = new value fire property change animated old value new value } is animated { is animated } dispose { super dispose uninstall sheet } hide0 { super hide } show0 { super show } hide { if is animated is show as sheet { get content pane set visible rectangle start bounds = get bounds parent width = get parent get width rectangle end bounds = new rectangle parent width < start bounds width ? start bounds x + start bounds width parent width / 2 start bounds x start bounds y math min start bounds width parent width 0 timer timer = new timer 20 timer add action listener new action listener { long start time long end time action performed action event evt { long now = current time millis if start time == 0 { start time = now end time = start time + 200 } if now > end time { timer stop hide0 set bounds start bounds get content pane set visible uninstall sheet } else { float ratio = now start time / float end time start time set bounds start bounds x * 1f ratio + end bounds x * ratio start bounds y * 1f ratio + end bounds y * ratio start bounds width * 1f ratio + end bounds width * ratio start bounds height * 1f ratio + end bounds height * ratio } } } timer set repeats timer set initial delay 5 timer start } else { hide0 uninstall sheet } } show { if is animated is show as sheet { install sheet get content pane set visible long start time = current time millis long end time = start time + 300 rectangle end bounds = get bounds parent width = get parent get width rectangle start bounds = new rectangle parent width < end bounds width ? end bounds x + end bounds width parent width / 2 end bounds x end bounds y math min end bounds width parent width 0 set bounds start bounds show0 timer timer = new timer 20 timer add action listener new action listener { long start time long end time action performed action event evt { long now = current time millis if start time == 0 { start time = now end time = start time + 200 } if now > end time { timer stop set bounds end bounds get content pane set visible request focus window get parent to front } else { float ratio = now start time / float end time start time set bounds start bounds x * 1f ratio + end bounds x * ratio start bounds y * 1f ratio + end bounds y * ratio start bounds width * 1f ratio + end bounds width * ratio start bounds height * 1f ratio + end bounds height * ratio } } } timer set repeats timer set initial delay 5 timer start } else { install sheet show0 } } add sheet listener sheet listener l { listener list add sheet listener l } remove sheet listener sheet listener l { listener list remove sheet listener l } fire option selected j option pane pane { value = pane get value option if value == { option = j option pane CLOSED_OPTION } else { if pane get options == { if value instanceof integer { option = integer value value } else { option = j option pane CLOSED_OPTION } } else { option = j option pane CLOSED_OPTION options = pane get options for i = 0 n = options length i < n i++ { if options i equals value { option = i break } } if option == j option pane CLOSED_OPTION { value = } } } fire option selected pane option value pane get input value } fire option selected j option pane pane option value input value { sheet event sheet event = listeners = listener list get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == sheet listener { if sheet event == sheet event = new sheet event this pane option value input value sheet listener listeners i+1 option selected sheet event } } } fire option selected j chooser pane option { sheet event sheet event = listeners = listener list get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == sheet listener { if sheet event == sheet event = new sheet event this pane option sheet listener listeners i+1 option selected sheet event } } } show sheet j option pane pane component parent component sheet listener listener { j sheet sheet = create sheet pane parent component style from message type pane get message type sheet add sheet listener listener sheet show } show confirm sheet component parent component message sheet listener listener { show confirm sheet parent component message j option pane YES_NO_CANCEL_OPTION listener } show confirm sheet component parent component message option type sheet listener listener { show confirm sheet parent component message option type j option pane QUESTION_MESSAGE listener } show confirm sheet component parent component message option type message type sheet listener listener { show confirm sheet parent component message option type message type listener } show confirm sheet component parent component message option type message type icon icon sheet listener listener { show option sheet parent component message option type message type icon listener } show input sheet component parent component message sheet listener listener { show input sheet parent component message j option pane QUESTION_MESSAGE listener } show input sheet component parent component message initial selection value sheet listener listener { show input sheet parent component message j option pane QUESTION_MESSAGE initial selection value listener } show input sheet component parent component message message type sheet listener listener { show input sheet parent component message message type listener } show input sheet component parent component message message type icon icon selection values initial selection value sheet listener listener { j option pane pane = new j option pane message message type j option pane OK_CANCEL_OPTION icon pane set wants input pane set selection values selection values pane set initial selection value initial selection value pane set component orientation parent component == ? j option pane get root frame parent component get component orientation style = style from message type message type j sheet sheet = create sheet pane parent component style pane select initial value sheet add sheet listener listener sheet show sheet to front } show message sheet component parent component message { show message sheet parent component message j option pane INFORMATION_MESSAGE } show message sheet component parent component message sheet listener listener { show message sheet parent component message j option pane INFORMATION_MESSAGE listener } show message sheet component parent component message message type { show message sheet parent component message message type } show message sheet component parent component message message type sheet listener listener { show message sheet parent component message message type listener } show message sheet component parent component message message type icon icon sheet listener listener { show option sheet parent component message j option pane DEFAULT_OPTION message type icon listener } show option sheet component parent component message option type message type icon icon options initial value sheet listener listener { j option pane pane = new j option pane message message type option type icon options initial value pane set initial value initial value pane set component orientation parent component == ? j option pane get root frame parent component get component orientation style = style from message type message type j sheet sheet = create sheet pane parent component style pane select initial value sheet add sheet listener listener sheet show sheet to front } private style from message type message type { switch message type { case j option pane ERROR_MESSAGE j root pane ERROR_DIALOG case j option pane QUESTION_MESSAGE j root pane QUESTION_DIALOG case j option pane WARNING_MESSAGE j root pane WARNING_DIALOG case j option pane INFORMATION_MESSAGE j root pane INFORMATION_DIALOG case j option pane PLAIN_MESSAGE default j root pane PLAIN_DIALOG } } private j sheet create sheet j option pane pane component parent component style { window window = get window for component parent component j sheet sheet if window instanceof frame { sheet = new j sheet frame window } else { sheet = new j sheet dialog window } container content pane = sheet get content pane content pane set layout new border layout content pane add pane border layout c e n t e r sheet set resizable sheet add window listener new window adapter { private got focus = count window closing window event we { pane set value } window closed window event we { if pane get value == j option pane UNINITIALIZED_VALUE { sheet fire option selected pane } } window gained focus window event we { if !got focus { option pane u i ui = pane get u i if ui != { ui select initial value pane } got focus = } } } sheet add component listener new component adapter { component shown component event ce { pane set value j option pane UNINITIALIZED_VALUE } } pane add property change listener new property change listener { property change property change event event { if sheet is visible event get source == pane event get property name equals j option pane VALUE_PROPERTY event get new value != event get new value != j option pane UNINITIALIZED_VALUE { sheet set visible sheet fire option selected pane } } } sheet pack sheet } window get window for component component parent component { if parent component == j option pane get root frame if parent component instanceof frame || parent component instanceof dialog window parent component get window for component parent component get parent } show save sheet j chooser chooser component parent sheet listener listener { chooser set dialog type j chooser SAVE_DIALOG show sheet chooser parent listener } show open sheet j chooser chooser component parent sheet listener listener { chooser set dialog type j chooser OPEN_DIALOG show sheet chooser parent listener } show sheet j chooser chooser component parent approve button text sheet listener listener { if approve button text != { chooser set approve button text approve button text chooser set dialog type j chooser CUSTOM_DIALOG } frame frame = parent instanceof frame ? frame parent frame swing utilities get ancestor of frame parent title = chooser get u i get dialog title chooser chooser get accessible context set accessible description title j sheet sheet = new j sheet frame sheet add sheet listener listener container content pane = sheet get content pane content pane set layout new border layout content pane add chooser border layout c e n t e r action listener action listener = new action listener { action performed action event evt { option if evt get action command equals approve selection { option = j chooser APPROVE_OPTION } else { option = j chooser CANCEL_OPTION } sheet hide sheet fire option selected chooser option chooser remove action listener this } } chooser add action listener action listener sheet add window listener new window adapter { window closing window event e { sheet fire option selected chooser j chooser CANCEL_OPTION chooser remove action listener action listener } } chooser rescan current directory sheet pack sheet show sheet to front } } 