org jhotdraw draw import util * import awt * import awt geom * import awt event * box handle kit { box handle kit { } add handles figure f collection< handle> handles { handles add south east f handles add south west f handles add north east f handles add north west f } add edge handles figure f collection< handle> handles { handles add south f handles add north f handles add east f handles add west f } add box handles figure f collection< handle> handles { add handles f handles add edge handles f handles } handle south figure owner { new south handle owner } handle south east figure owner { new south east handle owner } handle south west figure owner { new south west handle owner } handle north figure owner { new north handle owner } handle north east figure owner { new north east handle owner } handle north west figure owner { new north west handle owner } handle east figure owner { new east handle owner } handle west figure owner { new west handle owner } private resize handle locator handle { private dx dy geometry resize handle figure owner locator loc { super owner loc } track start point anchor modifiers ex { geometry = get owner get restore data point location = get location dx = anchor x + location x dy = anchor y + location y } track step point anchor point modifiers ex { point2 d p = view view to drawing new point x + dx y + dy view get constrainer constrain point p track step normalized p } track end point anchor point modifiers ex { fire undoable edit happened new geometry edit get owner geometry get owner get restore data } track step normalized point2 d p { } set bounds point2 d anchor point2 d { figure f = get owner f will change rectangle2 d old bounds = f get bounds rectangle2 d new bounds = new rectangle2 d math min anchor x x math min anchor y y math abs anchor x x math abs anchor y y sx = new bounds width / old bounds width sy = new bounds height / old bounds height affine transform tx = new affine transform tx translate old bounds x old bounds y if ! is na n sx ! is na n sy sx != 1d || sy != 1d ! sx < 0 0001 ! sy < 0 0001 { f basic transform tx tx set to identity tx scale sx sy f basic transform tx tx set to identity } tx translate new bounds x new bounds y f basic transform tx f changed } } private north east handle resize handle { north east handle figure owner { super owner relative locator north east } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d r x math min r y + r height 1 p y new point2 d math max r x p x r y + r height } cursor get cursor { cursor get predefined cursor cursor NE_RESIZE_CURSOR } } private east handle resize handle { east handle figure owner { super owner relative locator east } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d r x r y new point2 d math max r x + 1 p x r y + r height } cursor get cursor { cursor get predefined cursor cursor E_RESIZE_CURSOR } } private north handle resize handle { north handle figure owner { super owner relative locator north } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d r x math min r y + r height 1 p y new point2 d r x + r width r y + r height } cursor get cursor { cursor get predefined cursor cursor N_RESIZE_CURSOR } } private north west handle resize handle { north west handle figure owner { super owner relative locator north west } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d math min r x + r width 1 p x math min r y + r height 1 p y new point2 d r x + r width r y + r height } cursor get cursor { cursor get predefined cursor cursor NW_RESIZE_CURSOR } } private south east handle resize handle { south east handle figure owner { super owner relative locator south east } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d r x r y new point2 d math max r x + 1 p x math max r y + 1 p y } cursor get cursor { cursor get predefined cursor cursor SE_RESIZE_CURSOR } } private south handle resize handle { south handle figure owner { super owner relative locator south } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d r x r y new point2 d r x + r width math max r y + 1 p y } cursor get cursor { cursor get predefined cursor cursor S_RESIZE_CURSOR } } private south west handle resize handle { south west handle figure owner { super owner relative locator south west } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d math min r x + r width 1 p x r y new point2 d r x + r width math max r y + 1 p y } cursor get cursor { cursor get predefined cursor cursor SW_RESIZE_CURSOR } } private west handle resize handle { west handle figure owner { super owner relative locator west } track step normalized point2 d p { rectangle2 d r = get owner get bounds set bounds new point2 d math min r x + r width 1 p x r y new point2 d r x + r width r y + r height } cursor get cursor { cursor get predefined cursor cursor W_RESIZE_CURSOR } } } 