org jhotdraw samples pert figures import io i o import org jhotdraw samples * import awt geom * import beans * import org jhotdraw draw attribute keys * import util * import org jhotdraw draw * import org jhotdraw geom * import org jhotdraw util * import org jhotdraw xml * task figure graphical composite figure { private hash set< dependency figure> dependencies private start time private name adapter figure listener { private task figure target name adapter task figure target { this target = target } figure attribute changed figure event e { } } private duration adapter figure listener { private task figure target duration adapter task figure target { this target = target } figure attribute changed figure event evt { for task figure succ target get successors { succ update start time } } } task figure { super new rectangle figure set layouter new vertical layouter rectangle figure name compartment p f = new rectangle figure STROKE_COLOR set name compartment p f name compartment p f set attribute enabled STROKE_COLOR FILL_COLOR set name compartment p f name compartment p f set attribute enabled FILL_COLOR list figure name compartment = new list figure name compartment p f list figure attribute compartment = new list figure separator line figure separator1 = new separator line figure apply attributes get presentation figure add name compartment add separator1 add attribute compartment insets2 d insets = new insets2 d 4 8 4 8 LAYOUT_INSETS set name compartment insets LAYOUT_INSETS set attribute compartment insets text figure name figure name compartment add name figure = new text figure FONT_BOLD set name figure name figure set attribute enabled FONT_BOLD text figure duration figure attribute compartment add duration figure = new text figure FONT_BOLD set duration figure duration figure set text 0 duration figure set attribute enabled FONT_BOLD text figure start time figure attribute compartment add start time figure = new text figure start time figure set editable start time figure set text 0 start time figure set attribute enabled FONT_BOLD apply attributes this set attribute enabled STROKE_DASHES resource bundle util labels = resource bundle util get l a f bundle org jhotdraw samples pert labels set name labels get task default name set duration 0 start time = 0 dependencies = new hash set< dependency figure> name figure add figure listener new name adapter this duration figure add figure listener new duration adapter this } collection< handle> create handles detail level { list< handle> handles = new linked list< handle> if detail level == 0 { handles add new move handle this relative locator north west handles add new move handle this relative locator north east handles add new move handle this relative locator south west handles add new move handle this relative locator south east handles add new connection handle this relative locator east new dependency figure } handles } set name new value { get name figure set text new value } get name { get name figure get text } set duration new value { old value = get duration get duration figure set text integer to new value if old value != new value { for task figure succ get successors { succ update start time } } } get duration { try { integer value of get duration figure get text } catch number format e { 0 } } update start time { old value = get start time new value = 0 for task figure pre get predecessors { new value = math max new value pre get start time + pre get duration } get start time figure set text integer to new value if new value != old value { for task figure succ get successors { if ! this is dependent of succ { succ update start time } } } if old value != new value { fire area invalidated } } get start time { try { integer value of get start time figure get text } catch number format e { 0 } } private text figure get name figure { text figure list figure get child 0 get child 0 } private text figure get duration figure { text figure list figure get child 2 get child 0 } private text figure get start time figure { text figure list figure get child 2 get child 1 } private apply attributes figure f { map< attribute key object> attr = attributed figure get presentation figure get attributes for map entry< attribute key object> entry attr entry set { f set attribute entry get key entry get value } } task figure clone { task figure that = task figure super clone that dependencies = new hash set< dependency figure> that get name figure add figure listener new name adapter that that get duration figure add figure listener new duration adapter that that update start time that } read dom input in i o { x = in get attribute x 0d y = in get attribute y 0d w = in get attribute w 0d h = in get attribute h 0d set bounds new point2 d x y new point2 d x+w y+h read attributes in in open element model in open element name set name in read in close element in open element duration set duration integer in read in close element in close element } write dom output out i o { rectangle2 d r = get bounds out add attribute x r x out add attribute y r y write attributes out out open element model out open element name out write get name out close element out open element duration out write get duration out close element out close element } get layer { 0 } set< dependency figure> get dependencies { collections unmodifiable set dependencies } add dependency dependency figure f { dependencies add f update start time } remove dependency dependency figure f { dependencies remove f update start time } list< task figure> get successors { linked list< task figure> list = new linked list< task figure> for dependency figure c get dependencies { if c get start figure == this { list add task figure c get end figure } } list } list< task figure> get predecessors { linked list< task figure> list = new linked list< task figure> for dependency figure c get dependencies { if c get end figure == this { list add task figure c get start figure } } list } is dependent of task figure t { if this == t for task figure pre get predecessors { if pre is dependent of t { } } } to { task figure# +hash + +get name + +get duration + +get start time } } 