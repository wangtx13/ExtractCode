net n3 nanoxml import io reader import io i o content reader reader { private i xml reader reader private buffer private buffer index private i xml entity resolver resolver content reader i xml reader reader i xml entity resolver resolver buffer { this reader = reader this resolver = resolver this buffer = buffer this buffer index = 0 } finalize throwable { this reader = this resolver = this buffer = super finalize } read char output buffer offset size i o { try { chars read = 0 buffer length = this buffer length if offset + size > output buffer length { size = output buffer length offset } while chars read < size { str = char ch if this buffer index >= buffer length { str = xml util read this reader ' ' ch = str char at 0 } else { ch = this buffer char at this buffer index this buffer index++ output buffer chars read = ch chars read++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' str length > 1 { if str char at 1 == '#' { ch = xml util process char literal str } else { xml util process entity str this reader this resolver continue } } output buffer chars read = ch chars read++ } if chars read == 0 { chars read = 1 } chars read } catch xml parse e { throw new i o e get message } } close i o { try { buffer length = this buffer length for { str = char ch if this buffer index >= buffer length { str = xml util read this reader ' ' ch = str char at 0 } else { ch = this buffer char at this buffer index this buffer index++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' str length > 1 { if str char at 1 != '#' { xml util process entity str this reader this resolver } } } } catch xml parse e { throw new i o e get message } } } 