org jhotdraw samples svg figures import awt * import awt font * import awt geom * import io * import org jhotdraw draw * import org jhotdraw geom geom import org jhotdraw samples svg * import org jhotdraw xml * import org jhotdraw draw attribute keys * s v g text text figure implements s v g figure { enum text anchor { s t a r t mid d l e e n d } attribute key< text anchor> TEXT_ANCHOR = new attribute key< text anchor> text anchor text anchor s t a r t s v g text { s v g util set defaults this } @ override draw stroke graphics2 d g { if get text != || is editable { rectangle2 d bounds = get bounds text layout layout = get text layout affine transform tx = new affine transform tx translate origin x origin y + layout get ascent shape outline = layout get outline tx g draw outline } } @ override draw fill graphics2 d g { if get text != || is editable { text layout layout = get text layout layout draw g float origin x float origin y + layout get ascent } } @ override draw text awt graphics2 d g { } @ override write dom output out { out add attribute x origin x out add attribute y origin y out add text get text } write attributes dom output out i o { s v g util write attributes this out } @ override read dom input in i o { origin x = s v g util get dimension in x origin y = s v g util get dimension in y set text in get text read attributes in affine transform tx = s v g util get transform in transform basic transform tx rectangle2 d r = get bounds switch TEXT_ANCHOR get this { case s t a r t break case mid d l e origin x = r width / 2d break case e n d origin x = r width break } origin y = FONT_SIZE get this } read attributes dom input in i o { s v g util read attributes this in } color get text color { FILL_COLOR get this } color get fill color { color white } is empty { get text == || get text length == 0 } } 