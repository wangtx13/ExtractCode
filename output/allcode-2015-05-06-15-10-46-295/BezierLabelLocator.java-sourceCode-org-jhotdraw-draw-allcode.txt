org jhotdraw draw import org jhotdraw geom dimension2 d import org jhotdraw geom geom import org jhotdraw util * import awt * import awt geom * import org jhotdraw xml dom input import org jhotdraw xml dom output import org jhotdraw xml dom storable bezier label locator implements locator dom storable { private relative position private angle private distance bezier label locator { } bezier label locator relative position angle distance { this relative position = relative position this angle = angle this distance = distance } point2 d locate figure owner { get relative point bezier figure owner } point2 d locate figure owner figure label { point2 d relative point = get relative label point bezier figure owner label relative point } point2 d get relative point bezier figure owner { point2 d point = owner get point on path float relative position 3 point2 d next point = owner get point on path relative position < 0 5 ? float relative position + 0 1f float relative position 0 1f 3 dir = math atan2 next point y point y next point x point x if relative position >= 0 5 { dir += math p i } alpha = dir + angle point2 d p = new point2 d point x + distance * math cos alpha point y + distance * math sin alpha if is na n p x p = point p } point2 d get relative label point bezier figure owner figure label { point2 d point = owner get point on path float relative position 3 if point == { new point2 d 0 0 } point2 d next point = owner get point on path relative position < 0 5 ? float relative position + 0 1f float relative position 0 1f 3 dir = math atan2 next point y point y next point x point x if relative position >= 0 5 { dir += math p i } alpha = dir + angle point2 d p = new point2 d point x + distance * math cos alpha point y + distance * math sin alpha if is na n p x p = point dimension2 d label dim = label get preferred size if relative position == 0 5 p x >= point x distance / 2 p x <= point x + distance / 2 { if p y >= point y { new point2 d p x label dim width / 2 p y } else { new point2 d p x label dim width / 2 p y label dim height } } else { if p x >= point x { if p y >= point y { new point2 d p x p y } else { new point2 d p x p y label dim height } } else { if p y >= point y { new point2 d p x label dim width p y } else { new point2 d p x label dim width p y label dim height } } } } read dom input in { relative position = in get attribute relative position 0d angle = in get attribute angle 0d distance = in get attribute distance 0 } write dom output out { out add attribute relative position relative position out add attribute angle angle out add attribute distance distance } } 