org jhotdraw draw import org jhotdraw geom geom import org jhotdraw util * import awt * import awt geom * import org jhotdraw draw attribute keys * ellipse figure attributed figure { private ellipse2 d ellipse ellipse figure { this 0 0 0 0 } ellipse figure x y width height { ellipse = new ellipse2 d x y width height set attribute enabled TEXT_COLOR } connector find connector point2 d p connection figure prototype { new chop ellipse connector this } connector find compatible connector connector c is start connector { new chop ellipse connector this } rectangle2 d get bounds { rectangle2 d ellipse get bounds2 d } rectangle2 d get figure draw bounds { rectangle2 d r = rectangle2 d ellipse get bounds2 d grow = attribute keys get perpendicular hit growth this geom grow r grow grow r } draw fill graphics2 d g { ellipse2 d r = ellipse2 d ellipse clone grow = attribute keys get perpendicular fill growth this r x = grow r y = grow r width += grow * 2 r height += grow * 2 if r width > 0 r height > 0 { g fill r } } draw stroke graphics2 d g { ellipse2 d r = ellipse2 d ellipse clone grow = attribute keys get perpendicular draw growth this r x = grow r y = grow r width += grow * 2 r height += grow * 2 if r width > 0 r height > 0 { g draw r } } contains point2 d p { ellipse2 d r = ellipse2 d ellipse clone grow = attribute keys get perpendicular hit growth this r x = grow r y = grow r width += grow * 2 r height += grow * 2 r contains p } basic set bounds point2 d anchor point2 d { ellipse x = math min anchor x x ellipse y = math min anchor y y ellipse width = math max 0 1 math abs x anchor x ellipse height = math max 0 1 math abs y anchor y } basic transform affine transform tx { point2 d anchor = get start point point2 d = get end point basic set bounds point2 d tx transform anchor anchor point2 d tx transform } ellipse figure clone { ellipse figure that = ellipse figure super clone that ellipse = ellipse2 d this ellipse clone that } restore to geometry { ellipse2 d r = ellipse2 d geometry ellipse x = r x ellipse y = r y ellipse width = r width ellipse height = r height } get restore data { ellipse clone } } 