org jhotdraw app import awt * import awt event * import util prefs * import javax swing * import util * o s x palette handler { private hash set< window> palettes = new hash set< window> private hash map< window project> windows = new hash map< window project> private o s x palette handler instance private javax swing timer timer private default o s x application app private window focus listener focus handler = new window focus listener { window gained focus window event e { timer stop if windows contains key e get window { app set current project project windows get e get window show palettes } } window lost focus window event e { timer restart } } o s x palette handler default o s x application app { this app = app timer = new javax swing timer 60 new action listener { action performed action event evt { maybe hide palettes } } timer set repeats } add window window project project { window add window focus listener focus handler windows put window project } remove window window project project { windows remove window window remove window focus listener focus handler } add palette window palette { palette add window focus listener focus handler palettes add palette } remove palette window palette { palettes remove palette palette remove window focus listener focus handler } set< window> get palettes { collections unmodifiable set palettes } private show palettes { for window palette palettes { if ! palette is visible { palette set visible } } } private is focused window w { if w is focused window owned windows = w get owned windows for i=0 i < owned windows length i++ { if is focused owned windows i { } } } private maybe hide palettes { has focus = for window window windows key set { if is focused window { has focus = break } } if ! has focus windows size > 0 { for window palette palettes { if is focused palette { has focus = break } } } if ! has focus { for window palette palettes { palette set visible } } } } 