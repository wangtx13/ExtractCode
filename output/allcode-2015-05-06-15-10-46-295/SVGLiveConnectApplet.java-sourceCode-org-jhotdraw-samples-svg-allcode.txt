org jhotdraw samples svg import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import io * import net * import util * import javax swing * import javax swing event * import netscape javascript * import org jhotdraw xml * s v g live connect applet j applet { private v e r s i o n = 0 44 private n a m e = s v g draw init { try { u i manager set look and feel u i manager get look and feel name } catch throwable e { } container c = get content pane c set layout new box layout c box layout Y_AXIS lines = get applet info split \n for i=0 i < lines length i++ { c add new j label lines i } new swing worker { construct { result try { if get parameter data != get parameter data length > 0 { nano xml dom input domi = new nano xml dom input new s v g figure factory new reader get parameter data result = domi read 0 } else if get parameter datafile != { input stream in = try { u r l url = new u r l get document base get parameter datafile in = url open connection get input stream nano xml dom input domi = new nano xml dom input new s v g figure factory in result = domi read 0 } finally { if in != in close } } else { result = } } catch throwable t { result = t } result } finished { container c = get content pane c set layout new border layout c remove all result = get value init components if result != { if result instanceof drawing { set drawing drawing result } else if result instanceof throwable { get drawing add new text figure result to throwable result print stack trace } } is live connect try { for name netscape javascript j s is live connect = } catch throwable t { is live connect = } load button set enabled is live connect get parameter dataread != save button set enabled is live connect get parameter datawrite != if is live connect { name = get parameter dataread if name index of ' ' > 0 { name = name substring 0 name index of ' ' 1 } j s win = j s get window s v g live connect applet this data = win call name new 0 if data instanceof { set data data } } c validate } } start } private set drawing drawing d { drawing panel set drawing d } private drawing get drawing { drawing panel get drawing } set data text { if text != text length > 0 { reader in = new reader text try { nano xml dom input domi = new nano xml dom input new s v g figure factory in domi open element s v g draw set drawing drawing domi read 0 } catch throwable e { get drawing clear text figure tf = new text figure tf set text e get message tf set bounds new point2 d 10 10 new point2 d 100 100 get drawing add tf e print stack trace } finally { if in != in close } } } get data { char writer out = new char writer try { nano xml dom output domo = new nano xml dom output new s v g figure factory domo open element s v g draw domo write get drawing domo close element domo save out } catch i o e { text figure tf = new text figure tf set text e get message tf set bounds new point2 d 10 10 new point2 d 100 100 get drawing add tf e print stack trace } finally { if out != out close } out to } get parameter info { new { { data the data to be displayed by this applet } { datafile u r l an u r l to a containing the data to be displayed by this applet } { dataread function the name of a script function which can be used to read the data } { datawrite function the name of a script function which can be used to write the data } } } get applet info { n a m e+ \n + v e r s i o n + \n\n copyright 2004 \u00a9 werner randelshofer + \n alle rechte vorbehalten + \n\n diese software basiert auf + \n jhotdraw \u00a9 1996 1997 i f a informatik und erich gamma } private init components { tool button group = new javax swing button group drawing panel = new org jhotdraw samples draw drawing panel j tool bar1 = new javax swing j tool bar load button = new javax swing j button save button = new javax swing j button get content pane add drawing panel awt border layout c e n t e r j tool bar1 set floatable load button set text laden load button add action listener new awt event action listener { action performed awt event action event evt { load evt } } j tool bar1 add load button save button set text speichern save button add action listener new awt event action listener { action performed awt event action event evt { save evt } } j tool bar1 add save button get content pane add j tool bar1 awt border layout s o u t h } private save awt event action event evt { try { name = get parameter datawrite if name index of ' ' > 0 { name = name substring 0 name index of ' ' 1 } j s win = j s get window this result = win call name new { get data } } catch throwable t { text figure tf = new text figure fehler +t affine transform tx = new affine transform tx translate 10 20 tf transform tx get drawing add tf } } private load awt event action event evt { try { name = get parameter dataread if name index of ' ' > 0 { name = name substring 0 name index of ' ' 1 } j s win = j s get window this result = win call name new 0 if result instanceof { set data result } } catch throwable t { text figure tf = new text figure fehler +t affine transform tx = new affine transform tx translate 10 20 tf transform tx get drawing add tf } } private org jhotdraw samples draw drawing panel drawing panel private javax swing j tool bar j tool bar1 private javax swing j button load button private javax swing j button save button private javax swing button group tool button group } 