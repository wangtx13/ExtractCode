org jhotdraw samples svg figures import awt * import awt font * import awt geom * import * import org jhotdraw draw * import org jhotdraw geom geom import org jhotdraw samples svg * import org jhotdraw xml * import org jhotdraw draw AttributeKeys attribute keys * SVGText text TextFigure text figure implements SVGFigure figure { enum TextAnchor text anchor { START MIDDLE mid END } AttributeKey<TextAnchor> attribute key< text anchor> TEXT_ANCHOR = new AttributeKey<TextAnchor> attribute key< text anchor> textAnchor text anchor TextAnchor text anchor START SVGText text { SVGUtil util setDefaults set defaults this } @Override @ drawStroke draw stroke Graphics2D graphics2 { if getText get text != || isEditable editable { Rectangle2D rectangle2 bounds = getBounds get bounds TextLayout text layout layout = getTextLayout get text layout AffineTransform affine transform tx = new AffineTransform affine transform tx translate origin origin + layout getAscent get ascent shape outline = layout getOutline get outline tx draw outline } } @Override @ drawFill draw fill Graphics2D graphics2 { if getText get text != || isEditable editable { TextLayout text layout layout = getTextLayout get text layout layout draw float origin float origin + layout getAscent get ascent } } @Override @ drawText draw text awt Graphics2D graphics2 { } @Override @ write DOMOutput dom output out { out addAttribute add attribute origin out addAttribute add attribute origin out addText add text getText get text } writeAttributes write attributes DOMOutput dom output out IOException { SVGUtil util writeAttributes write attributes this out } @Override @ read DOMInput dom input IOException { origin = SVGUtil util getDimension get dimension origin = SVGUtil util getDimension get dimension setText set text getText get text readAttributes read attributes AffineTransform affine transform tx = SVGUtil util getTransform get transform transform basicTransform basic transform tx Rectangle2D rectangle2 = getBounds get bounds switch TEXT_ANCHOR get this { case START break case MIDDLE mid origin -= width / 2d break case END origin -= width break } origin -= FONT_SIZE get this } readAttributes read attributes DOMInput dom input IOException { SVGUtil util readAttributes read attributes this } color getTextColor get text color { FILL_COLOR get this } color getFillColor get fill color { color white } isEmpty empty { getText get text == || getText get text length == 0 } } 