org jhotdraw draw import org jhotdraw beans * import awt * import awt datatransfer * import awt event FocusEvent focus event import awt event FocusListener focus listener import beans * import util * import * import org jhotdraw draw AttributeKeys attribute keys * DefaultDrawingEditor default drawing editor AbstractBean bean implements DrawingEditor drawing editor ToolListener tool listener { private HashMap<AttributeKey hash map< attribute key object> defaultAttributes default attributes = new HashMap<AttributeKey hash map< attribute key object> private tool tool private HashSet<DrawingView> hash set< drawing view> views private DrawingView drawing view activeView active view private isEnabled enabled = private DrawingView drawing view focusedView focused view private FocusListener focus listener focusHandler focus handler = new FocusListener focus listener { focusGained focus gained FocusEvent focus event { setFocusedView set focused view DrawingView drawing view findView find view container getSource get source } focusLost focus lost FocusEvent focus event { if ! isTemporary temporary { setFocusedView set focused view } } } DefaultDrawingEditor default drawing editor { setDefaultAttribute set default attribute FILL_COLOR color white setDefaultAttribute set default attribute STROKE_COLOR color black setDefaultAttribute set default attribute TEXT_COLOR color black views = new HashSet<DrawingView> hash set< drawing view> } setTool set tool tool { if == tool if tool != { for DrawingView drawing view views { removeMouseListener remove mouse listener tool removeMouseMotionListener remove mouse motion listener tool removeKeyListener remove key listener tool } tool deactivate this tool removeToolListener remove tool listener this } tool = if tool != { tool activate this for DrawingView drawing view views { addMouseListener add mouse listener tool addMouseMotionListener add mouse motion listener tool addKeyListener add key listener tool } tool addToolListener add tool listener this } } areaInvalidated area invalidated ToolEvent tool event evt { rectangle = evt getInvalidatedArea get invalidated area evt getView get view getContainer get container repaint width height } toolStarted tool started ToolEvent tool event evt { setView set view evt getView get view } setView set view DrawingView drawing view newValue new value { DrawingView drawing view oldValue old value = activeView active view activeView active view = newValue new value firePropertyChange fire property change view oldValue old value newValue new value for DrawingView drawing view views { getContainer get container repaint } } toolDone tool done ToolEvent tool event evt { DrawingView drawing view = getView get view if != { container = getContainer get container invalidate if getParent get parent != getParent get parent validate } } tool getTool get tool { tool } DrawingView drawing view getView get view { activeView active view != ? activeView active view views iterator next } private updateFocusedView update focused view { for DrawingView drawing view views { if getContainer get container hasFocus has focus { setFocusedView set focused view } } setFocusedView set focused view } private setFocusedView set focused view DrawingView drawing view newValue new value { DrawingView drawing view oldValue old value = focusedView focused view focusedView focused view = newValue new value firePropertyChange fire property change focusedView focused view oldValue old value newValue new value } DrawingView drawing view getFocusedView get focused view { focusedView focused view } applyDefaultAttributesTo apply default attributes to figure { for map Entry<AttributeKey entry< attribute key object> entry defaultAttributes default attributes entrySet entry set { setAttribute set attribute entry getKey get key entry getValue get value } } getDefaultAttribute get default attribute AttributeKey attribute key key { defaultAttributes default attributes get key } setDefaultAttribute set default attribute AttributeKey attribute key key newValue new value { oldValue old value = defaultAttributes default attributes put key newValue new value firePropertyChange fire property change key getKey get key oldValue old value newValue new value } remove DrawingView drawing view view { view getContainer get container removeFocusListener remove focus listener focusHandler focus handler views remove view if tool != { view removeMouseListener remove mouse listener tool view removeMouseMotionListener remove mouse motion listener tool view removeKeyListener remove key listener tool } view removeNotify remove notify this if activeView active view == view { view = views size > 0 ? views iterator next } updateFocusedView update focused view } add DrawingView drawing view view { views add view view addNotify add notify this view getContainer get container addFocusListener add focus listener focusHandler focus handler if tool != { view addMouseListener add mouse listener tool view addMouseMotionListener add mouse motion listener tool view addKeyListener add key listener tool } updateFocusedView update focused view } setCursor set cursor cursor { } Collection<DrawingView> collection< drawing view> getDrawingViews get drawing views { collections unmodifiableCollection unmodifiable collection views } DrawingView drawing view findView find view container { for DrawingView drawing view views { if getContainer get container == { } } } setEnabled set enabled newValue new value { if newValue new value != isEnabled enabled { oldValue old value = isEnabled enabled isEnabled enabled = newValue new value firePropertyChange fire property change enabled oldValue old value newValue new value } } isEnabled enabled { isEnabled enabled } } 