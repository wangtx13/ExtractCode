net n3 nanoxml import IOException import reader import util stack StdXMLBuilder std xml builder implements IXMLBuilder xml builder { private stack stack private IXMLElement xml element root private IXMLElement xml element prototype StdXMLBuilder std xml builder { this new XMLElement xml element } StdXMLBuilder std xml builder IXMLElement xml element prototype { this stack = this root = this prototype = prototype } finalize throwable { this prototype = this root = this stack clear this stack = super finalize } startBuilding start building systemid lineNr line nr { this stack = new stack this root = } newProcessingInstruction new processing instruction target reader reader { } startElement start element nsPrefix prefix nsURI systemid lineNr line nr { fullName full = if nsPrefix prefix != { fullName full = nsPrefix prefix + ' ' + } IXMLElement xml element elt = this prototype createElement create element fullName full nsURI systemid lineNr line nr if this stack empty { this root = elt } else { IXMLElement xml element top = IXMLElement xml element this stack peek top addChild add child elt } this stack push elt } elementAttributesProcessed element attributes processed nsPrefix prefix nsURI { } endElement element nsPrefix prefix nsURI { IXMLElement xml element elt = IXMLElement xml element this stack pop if elt getChildrenCount get children count == 1 { IXMLElement xml element child = elt getChildAtIndex get child index 0 if child getName get == { elt setContent set content child getContent get content elt removeChildAtIndex remove child index 0 } } } addAttribute add attribute key nsPrefix prefix nsURI value type { fullName full = key if nsPrefix prefix != { fullName full = nsPrefix prefix + ' ' + key } IXMLElement xml element top = IXMLElement xml element this stack peek if top hasAttribute has attribute fullName full { new XMLParseException xml parse top getSystemID get systemid top getLineNr get line nr duplicate attribute + key } if nsPrefix prefix != { top setAttribute set attribute fullName full nsURI value } else { top setAttribute set attribute fullName full value } } addPCData add data reader reader systemid lineNr line nr { bufSize buf size = 2048 sizeRead size read = 0 StringBuffer buffer = new StringBuffer buffer bufSize buf size char buf = new char bufSize buf size for { if sizeRead size read >= bufSize buf size { bufSize buf size *= 2 ensureCapacity ensure capacity bufSize buf size } size try { size = reader read buf } catch IOException { break } if size < 0 { break } append buf 0 size sizeRead size read += size } IXMLElement xml element elt = this prototype createElement create element systemid lineNr line nr elt setContent set content toString to if ! this stack empty { IXMLElement xml element top = IXMLElement xml element this stack peek top addChild add child elt } } getResult get result { this root } } 