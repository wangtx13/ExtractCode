org jhotdraw draw import org jhotdraw util * import org jhotdraw undo * import awt * import awt event * import awt geom * import util * import org jhotdraw geom * BezierNodeHandle bezier node handle AbstractHandle handle { index private CompositeEdit composite edit edit private BezierPath bezier path node oldNode old node BezierNodeHandle bezier node handle BezierFigure bezier figure owner index { super owner this index = index } draw Graphics2D graphics2 { BezierFigure bezier figure = getBezierFigure get bezier figure if getPointCount get point count > index { BezierPath bezier path node = getNode get node index if mask == 0 { drawRectangle draw rectangle color black color white } else if mask == BezierPath bezier path C1_MASK || mask == BezierPath bezier path C2_MASK || !f isClosed closed mask == BezierPath bezier path C1_MASK | BezierPath bezier path C2_MASK index == 0 || index == getNodeCount get node count - 1 { drawDiamond draw diamond color black color white } else { drawCircle draw circle color black color white } } } BezierFigure bezier figure getBezierFigure get bezier figure { BezierFigure bezier figure getOwner get owner } point getLocation get location { getBezierFigure get bezier figure getPointCount get point count > index ? view drawingToView drawing to view getBezierFigure get bezier figure getPoint get point index 0 new point 10 10 } rectangle basicGetBounds basic get bounds { rectangle = new rectangle getLocation get location grow getHandlesize get handlesize / 2 getHandlesize get handlesize / 2 } trackStart track start point anchor modifiersEx modifiers { BezierFigure bezier figure figure = getBezierFigure get bezier figure view getDrawing get drawing fireUndoableEditHappened fire undoable edit happened edit = new CompositeEdit composite edit punkt verschieben Point2D point2 location = view getConstrainer get constrainer constrainPoint constrain point view viewToDrawing view to drawing getLocation get location Point2D point2 = view getConstrainer get constrainer constrainPoint constrain point view viewToDrawing view to drawing anchor oldNode old node = figure getNode get node index fireHandleRequestSecondaryHandles fire handle request secondary handles } trackStep track step point anchor point modifiersEx modifiers { BezierFigure bezier figure figure = getBezierFigure get bezier figure figure willChange will change Point2D point2 = view getConstrainer get constrainer constrainPoint constrain point view viewToDrawing view to drawing BezierPath bezier path node = figure getNode get node index fireAreaInvalidated fire area invalidated moveTo move to fireAreaInvalidated fire area invalidated figure basicSetNode basic set node index figure changed } private fireAreaInvalidated fire area invalidated BezierPath bezier path node { Rectangle2D rectangle2 dr = new Rectangle2D rectangle2 0 0 0 0 for i=1 < 3 i++ { dr add } rectangle vr = view drawingToView drawing to view dr vr grow getHandlesize get handlesize getHandlesize get handlesize fireAreaInvalidated fire area invalidated vr } trackEnd track point anchor point modifiersEx modifiers { BezierFigure bezier figure = getBezierFigure get bezier figure if modifiersEx modifiers InputEvent input event META_DOWN_MASK | InputEvent input event CTRL_DOWN_MASK != 0 modifiersEx modifiers InputEvent input event BUTTON2_DOWN_MASK == 0 { willChange will change BezierPath bezier path node = getNode get node index if index > 0 index < getNodeCount get node count || isClosed closed { mask = mask + 3 % 4 } else if index == 0 { mask = mask BezierPath bezier path C2_MASK == 0 ? BezierPath bezier path C2_MASK 0 } else { mask = mask BezierPath bezier path C1_MASK == 0 ? BezierPath bezier path C1_MASK 0 } basicSetNode basic set node index changed fireHandleRequestSecondaryHandles fire handle request secondary handles } view getDrawing get drawing fireUndoableEditHappened fire undoable edit happened new BezierNodeEdit bezier node edit index oldNode old node getNode get node index view getDrawing get drawing fireUndoableEditHappened fire undoable edit happened edit } @Override @ isCombinableWith combinable with handle { } trackDoubleClick track click point modifiersEx modifiers { BezierFigure bezier figure = getBezierFigure get bezier figure if getNodeCount get node count > 2 modifiersEx modifiers InputEvent input event META_DOWN_MASK | InputEvent input event CTRL_DOWN_MASK | InputEvent input event ALT_DOWN_MASK == 0 { rectangle invalidatedArea invalidated area = getDrawBounds get draw bounds willChange will change basicRemoveNode basic remove node index changed fireHandleRequestRemove fire handle request remove invalidatedArea invalidated area } } Collection<Handle> collection< handle> createSecondaryHandles create secondary handles { BezierFigure bezier figure = getBezierFigure get bezier figure LinkedList<Handle> linked list< handle> list = new LinkedList<Handle> linked list< handle> BezierPath bezier path node = getNode get node index if mask BezierPath bezier path C1_MASK != 0 index != 0 || isClosed closed { list add new BezierControlPointHandle bezier control point handle index 1 } if mask BezierPath bezier path C2_MASK != 0 index < getNodeCount get node count - 1 || isClosed closed { list add new BezierControlPointHandle bezier control point handle index 2 } if index > 0 || isClosed closed { = index == 0 ? getNodeCount get node count - 1 index - 1 = getNode get node if mask BezierPath bezier path C2_MASK != 0 { list add new BezierControlPointHandle bezier control point handle 2 } } if index < getNodeCount get node count - 2 || isClosed closed { = index == getNodeCount get node count - 1 ? 0 index + 1 = getNode get node if mask BezierPath bezier path C1_MASK != 0 { list add new BezierControlPointHandle bezier control point handle 1 } } list } } 