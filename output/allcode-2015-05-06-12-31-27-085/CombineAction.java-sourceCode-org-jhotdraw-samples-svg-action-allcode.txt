org jhotdraw samples svg action import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw samples svg figures * import org jhotdraw undo * import org jhotdraw util * import util * import javax swing * import javax swing undo * CombineAction combine action GroupAction group action { = selectionCombine selection combine CombineAction combine action DrawingEditor drawing editor editor { super editor new SVGPath path labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw samples svg labels locale getDefault get default labels configureAction configure action this } @Override @ canGroup can group { canCombine can combine = getView get view getSelectionCount get selection count > 1 if canCombine can combine { for figure getView get view getSelectedFigures get selected figures { if ! instanceof SVGPath path { canCombine can combine = break } } } canCombine can combine } Collection<Figure> collection< figure> ungroupFigures ungroup figures DrawingView drawing view view CompositeFigure composite figure group { LinkedList<Figure> linked list< figure> figures = new LinkedList<Figure> linked list< figure> group getChildren get children view clearSelection clear selection group basicRemoveAllChildren basic remove all children LinkedList<Figure> linked list< figure> paths = new LinkedList<Figure> linked list< figure> for figure figures { SVGPath path path = new SVGPath path path removeAllChildren remove all children for map Entry<AttributeKey entry< attribute key object> entry group getAttributes get attributes entrySet entry set { path basicSetAttribute basic set attribute entry getKey get key entry getValue get value } path add view getDrawing get drawing basicAdd basic add path paths add path } view getDrawing get drawing remove group view addToSelection add to selection paths figures } groupFigures group figures DrawingView drawing view view CompositeFigure composite figure group Collection<Figure> collection< figure> figures { Collection<Figure> collection< figure> sorted = view getDrawing get drawing sort figures view getDrawing get drawing basicRemoveAll basic remove all figures view clearSelection clear selection view getDrawing get drawing add group group willChange will change SVGPath path group removeAllChildren remove all children for map Entry<AttributeKey entry< attribute key object> entry figures iterator next getAttributes get attributes entrySet entry set { group basicSetAttribute basic set attribute entry getKey get key entry getValue get value } for figure sorted { SVGPath path path = SVGPath path for figure child path getChildren get children { group basicAdd basic add child } } group changed view addToSelection add to selection group } } 