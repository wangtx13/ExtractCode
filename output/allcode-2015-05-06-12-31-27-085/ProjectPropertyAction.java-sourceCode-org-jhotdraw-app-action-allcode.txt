org jhotdraw app action import awt event * import beans * import org jhotdraw app application import org jhotdraw app project ProjectPropertyAction project property action AbstractProjectAction project action { private propertyName property private parameterClass private propertyValue property value private setterName setter private getterName getter private PropertyChangeListener property change listener projectListener project listener = new PropertyChangeListener property change listener { propertyChange property change PropertyChangeEvent property change event evt { if evt getPropertyName get property == propertyName property { updateSelectedState update selected state } } } ProjectPropertyAction project property action application app propertyName property propertyValue property value { this app propertyName property propertyValue property value getClass get propertyValue property value } ProjectPropertyAction project property action application app propertyName property propertyClass property propertyValue property value { super app this propertyName property = propertyName property this parameterClass = new { propertyClass property } this propertyValue property value = propertyValue property value setterName setter = set +Character + character toUpperCase to upper case propertyName property charAt char 0 + propertyName property substring 1 getterName getter = propertyClass property == TYPE || propertyClass property == ? get + character toUpperCase to upper case propertyName property charAt char 0 + propertyName property substring 1 updateSelectedState update selected state } actionPerformed action performed ActionEvent action event evt { project = getCurrentProject get current project try { getClass get getMethod get setterName setter parameterClass new {propertyValue} {property value} } catch throwable { InternalError internal = new InternalError internal invocation failed initCause init cause } } installProjectListeners install project listeners project { super installProjectListeners install project listeners addPropertyChangeListener add property change listener projectListener project listener updateSelectedState update selected state } uninstallProjectListeners uninstall project listeners project { super uninstallProjectListeners uninstall project listeners removePropertyChangeListener remove property change listener projectListener project listener } private updateSelectedState update selected state { isSelected selected = project = getCurrentProject get current project if != { try { value = getClass get getMethod get getterName getter isSelected selected = value == propertyValue property value || value != propertyValue property value != value equals propertyValue property value } catch throwable { InternalError internal = new InternalError internal invocation failed initCause init cause } } putValue put value actions SELECTED_KEY isSelected selected } } 