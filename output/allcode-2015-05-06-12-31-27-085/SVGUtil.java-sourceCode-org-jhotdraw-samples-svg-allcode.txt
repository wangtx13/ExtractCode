org jhotdraw samples svg import awt color import awt geom * import * import util * import javax swing * import org jhotdraw draw * import org jhotdraw geom * import org jhotdraw samples svg figures * import org jhotdraw xml * import org jhotdraw draw AttributeKeys attribute keys * SVGUtil util { private color INHERIT_COLOR = new color 0xffff00 private color CURRENT_COLOR = new color 0xffff00 Map<String map< color> SVG_COLORS { LinkedHashMap<String linked hash map< color> map = new LinkedHashMap<String linked hash map< color> map put black new color 0 0 0 map put green new color 0 128 0 map put silver new color 192 192 192 map put lime new color 0 255 0 map put gray new color 128 128 128 map put olive new color 128 128 0 map put white new color 255 255 255 map put yellow new color 255 255 0 map put maroon new color 128 0 0 map put navy new color 0 0 128 map put red new color 255 0 0 map put blue new color 0 0 255 map put purple new color 128 0 128 map put teal new color 0 128 128 map put fuchsia new color 255 0 255 map put aqua new color 0 255 255 map put aliceblue new color 240 248 255 map put antiquewhite new color 250 235 215 map put aqua new color 0 255 255 map put aquamarine new color 127 255 212 map put azure new color 240 255 255 map put beige new color 245 245 220 map put bisque new color 255 228 196 map put black new color 0 0 0 map put blanchedalmond new color 255 235 205 map put blue new color 0 0 255 map put blueviolet new color 138 43 226 map put brown new color 165 42 42 map put burlywood new color 222 184 135 map put cadetblue new color 95 158 160 map put chartreuse new color 127 255 0 map put chocolate new color 210 105 30 map put coral new color 255 127 80 map put cornflowerblue new color 100 149 237 map put cornsilk new color 255 248 220 map put crimson new color 220 20 60 map put cyan new color 0 255 255 map put darkblue new color 0 0 139 map put darkcyan new color 0 139 139 map put darkgoldenrod new color 184 134 11 map put darkgray new color 169 169 169 map put darkgreen new color 0 100 0 map put darkgrey new color 169 169 169 map put darkkhaki new color 189 183 107 map put darkmagenta new color 139 0 139 map put darkolivegreen new color 85 107 47 map put darkorange new color 255 140 0 map put darkorchid new color 153 50 204 map put darkred new color 139 0 0 map put darksalmon new color 233 150 122 map put darkseagreen new color 143 188 143 map put darkslateblue new color 72 61 139 map put darkslategray new color 47 79 79 map put darkslategrey new color 47 79 79 map put darkturquoise new color 0 206 209 map put darkviolet new color 148 0 211 map put deeppink new color 255 20 147 map put deepskyblue new color 0 191 255 map put dimgray new color 105 105 105 map put dimgrey new color 105 105 105 map put dodgerblue new color 30 144 255 map put firebrick new color 178 34 34 map put floralwhite new color 255 250 240 map put forestgreen new color 34 139 34 map put fuchsia new color 255 0 255 map put gainsboro new color 220 220 220 map put ghostwhite new color 248 248 255 map put gold new color 255 215 0 map put goldenrod new color 218 165 32 map put gray new color 128 128 128 map put grey new color 128 128 128 map put green new color 0 128 0 map put greenyellow new color 173 255 47 map put honeydew new color 240 255 240 map put hotpink new color 255 105 180 map put indianred new color 205 92 92 map put indigo new color 75 0 130 map put ivory new color 255 255 240 map put khaki new color 240 230 140 map put lavender new color 230 230 250 map put lavenderblush new color 255 240 245 map put lawngreen new color 124 252 0 map put lemonchiffon new color 255 250 205 map put lightblue new color 173 216 230 map put lightcoral new color 240 128 128 map put lightcyan new color 224 255 255 map put lightgoldenrodyellow new color 250 250 210 map put lightgray new color 211 211 211 map put lightgreen new color 144 238 144 map put lightgrey new color 211 211 211 map put lightpink new color 255 182 193 map put lightsalmon new color 255 160 122 map put lightseagreen new color 32 178 170 map put lightskyblue new color 135 206 250 map put lightslategray new color 119 136 153 map put lightslategrey new color 119 136 153 map put lightsteelblue new color 176 196 222 map put lightyellow new color 255 255 224 map put lime new color 0 255 0 map put limegreen new color 50 205 50 map put linen new color 250 240 230 map put magenta new color 255 0 255 map put maroon new color 128 0 0 map put mediumaquamarine new color 102 205 170 map put mediumblue new color 0 0 205 map put mediumorchid new color 186 85 211 map put mediumpurple new color 147 112 219 map put mediumseagreen new color 60 179 113 map put mediumslateblue new color 123 104 238 map put mediumspringgreen new color 0 250 154 map put mediumturquoise new color 72 209 204 map put mediumvioletred new color 199 21 133 map put midnightblue new color 25 25 112 map put mintcream new color 245 255 250 map put mistyrose new color 255 228 225 map put moccasin new color 255 228 181 map put navajowhite new color 255 222 173 map put navy new color 0 0 128 map put oldlace new color 253 245 230 map put olive new color 128 128 0 map put olivedrab new color 107 142 35 map put orange new color 255 165 0 map put orangered new color 255 69 0 map put orchid new color 218 112 214 map put palegoldenrod new color 238 232 170 map put palegreen new color 152 251 152 map put paleturquoise new color 175 238 238 map put palevioletred new color 219 112 147 map put papayawhip new color 255 239 213 map put peachpuff new color 255 218 185 map put peru new color 205 133 63 map put pink new color 255 192 203 map put plum new color 221 160 221 map put powderblue new color 176 224 230 map put purple new color 128 0 128 map put red new color 255 0 0 map put rosybrown new color 188 143 143 map put royalblue new color 65 105 225 map put saddlebrown new color 139 69 19 map put salmon new color 250 128 114 map put sandybrown new color 244 164 96 map put seagreen new color 46 139 87 map put seashell new color 255 245 238 map put sienna new color 160 82 45 map put silver new color 192 192 192 map put skyblue new color 135 206 235 map put slateblue new color 106 90 205 map put slategray new color 112 128 144 map put slategrey new color 112 128 144 map put snow new color 255 250 250 map put springgreen new color 0 255 127 map put steelblue new color 70 130 180 map put tan new color 210 180 140 map put teal new color 0 128 128 map put thistle new color 216 191 216 map put tomato new color 255 99 71 map put turquoise new color 64 224 208 map put violet new color 238 130 238 map put wheat new color 245 222 179 map put white new color 255 255 255 map put whitesmoke new color 245 245 245 map put yellow new color 255 255 0 map put yellowgreen new color 154 205 50 map put activeborder UIManager manager getColor get color activeCaptionBorder active caption border map put activecaption UIManager manager getColor get color activeCaption active caption map put appworkspace UIManager manager getColor get color window map put background UIManager manager getColor get color desktop map put buttonface UIManager manager getColor get color control map put buttonhighlight UIManager manager getColor get color controlHighlight control highlight map put buttonshadow UIManager manager getColor get color controlShadow control shadow map put buttontext UIManager manager getColor get color controlText control text map put captiontext UIManager manager getColor get color activeCaptionText active caption text map put graytext UIManager manager getColor get color textInactiveText text inactive text map put highlight UIManager manager getColor get color textHighlight text highlight map put highlighttext UIManager manager getColor get color textHighlightText text highlight text map put inactiveborder UIManager manager getColor get color inactiveCaptionBorder inactive caption border map put inactivecaption UIManager manager getColor get color inactiveCaption inactive caption map put inactivecaptiontext UIManager manager getColor get color inactiveCaptionText inactive caption text map put infobackground UIManager manager getColor get color info map put infotext UIManager manager getColor get color infoText info text map put menu UIManager manager getColor get color menu map put menutext UIManager manager getColor get color menuText menu text map put scrollbar UIManager manager getColor get color scrollbar map put threeddarkshadow UIManager manager getColor get color controlDkShadow control dk shadow map put threedface UIManager manager getColor get color control map put threedhighlight UIManager manager getColor get color controlHighlight control highlight map put threedlightshadow UIManager manager getColor get color controlLtHighlight control lt highlight map put threedshadow UIManager manager getColor get color controlShadow control shadow map put window UIManager manager getColor get color window map put windowframe UIManager manager getColor get color windowBorder window border map put windowtext UIManager manager getColor get color windowText window text SVG_COLORS = map } private SVGUtil util { } AffineTransform affine transform getTransform get transform DOMInput dom input attributeName attribute IOException { getTransform get transform getAttribute get attribute attributeName attribute } AffineTransform affine transform getTransform get transform IOException { AffineTransform affine transform = new AffineTransform affine transform if != { StreamTokenizer stream tokenizer tt = new StreamTokenizer stream tokenizer new StringReader reader tt resetSyntax reset syntax tt wordChars word chars 'a' 'z' tt wordChars word chars 'A' ' a' 'Z' ' z' tt wordChars word chars 128 + 32 255 tt whitespaceChars whitespace chars 0 ' ' tt whitespaceChars whitespace chars ' ' ' ' tt parseNumbers parse numbers while tt nextToken next token != StreamTokenizer stream tokenizer TT_EOF { if tt ttype != StreamTokenizer stream tokenizer TT_WORD { new IOException illegal transform +str } type = tt sval if tt nextToken next token != ' ' { new IOException ' ' not found transform +str } if type equals matrix { = new 6 for i=0 < 6 i++ { if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException matrix value +i+ not found transform +str+ token +tt ttype+ +tt sval } if tt nextToken next token == StreamTokenizer stream tokenizer TT_WORD tt sval startsWith starts with { mantissa = tt nval tt nval = valueOf value of tt nval + tt sval } else { tt pushBack push back } = tt nval } concatenate new AffineTransform affine transform } else if type equals translate { tx ty if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException x-translation value not found transform +str } tx = tt nval if tt nextToken next token == StreamTokenizer stream tokenizer TT_NUMBER { ty = tt nval } else { tt pushBack push back ty = 0 } translate tx ty } else if type equals scale { sx if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException x-scale value not found transform +str } sx = tt nval if tt nextToken next token == StreamTokenizer stream tokenizer TT_NUMBER { = tt nval } else { tt pushBack push back = sx } scale sx } else if type equals rotate { angle cx cy if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException angle value not found transform +str } angle = tt nval if tt nextToken next token == StreamTokenizer stream tokenizer TT_NUMBER { cx = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException y-center value not found transform +str } cy = tt nval } else { tt pushBack push back cx = cy = 0 } rotate angle * math PI / 180d cx * math PI / 180d cy * math PI / 180d } else if type equals skewX skew { angle if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException skew angle not found transform +str } angle = tt nval concatenate new AffineTransform affine transform 1 0 math tan angle * math PI / 180 1 0 0 } else if type equals skewY skew { angle if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER { new IOException skew angle not found transform +str } angle = tt nval concatenate new AffineTransform affine transform 1 math tan angle * math PI / 180 0 1 0 0 }else { new IOException unknown transform +type+ +str } if tt nextToken next token != ' ' { new IOException ' ' not found transform +str } } } } getDimension get dimension DOMInput dom input attributeName attribute IOException { getDimensionValue get dimension value getAttribute get attribute attributeName attribute 0 } getDimensionValue get dimension value DOMInput dom input IOException { scaleFactor scale factor = 1d if == || length == 0 { 0d } if endsWith with % { = substring 0 length - 1 } else if endsWith with px { = substring 0 length - 2 } else if endsWith with { = substring 0 length - 2 scaleFactor scale factor = 1 25 } else if endsWith with pc { = substring 0 length - 2 scaleFactor scale factor = 15 } else if endsWith with mm { = substring 0 length - 2 scaleFactor scale factor = 3 543307 } else if endsWith with cm { = substring 0 length - 2 scaleFactor scale factor = 35 43307 } else if endsWith with { = substring 0 length - 2 scaleFactor scale factor = 90 } else if endsWith with { = substring 0 length - 2 List<Map<String list< map< string>> styles = new ArrayList<Map<String list< map< string>> List<String> list< string> values = getInheritedAttribute get inherited attribute style for values { styles add getStyles get styles } value = getInheritedAttribute get inherited attribute font-size styles if value != ! value endsWith with { scaleFactor scale factor = getDimensionValue get dimension value value } } parseDouble parse * scaleFactor scale factor } List<BezierPath> list< bezier path> getPath get path DOMInput dom input attributeName attribute IOException { fromPathData from path data getAttribute get attribute attributeName attribute } setPath set path DOMOutput dom output out attributeName attribute BezierPath bezier path path { out addAttribute add attribute attributeName attribute toPathData to path data path } toPathData to path data BezierPath bezier path path { StringBuilder builder buf = new StringBuilder builder if path size == 0 { } else if path size == 1 { BezierPath bezier path node current = path get 0 buf append buf append current 0 buf append ' ' buf append current 0 buf append buf append current 0 buf append ' ' buf append current 0 + 1 } else { BezierPath bezier path node previous BezierPath bezier path node current previous = current = path get 0 buf append buf append current 0 buf append ' ' buf append current 0 for i=1 = path size < i++ { previous = current current = path get if previous mask BezierPath bezier path C2_MASK == 0 { if current mask BezierPath bezier path C1_MASK == 0 { buf append buf append current 0 buf append ' ' buf append current 0 } else { buf append buf append current 1 buf append ' ' buf append current 1 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } } else { if current mask BezierPath bezier path C1_MASK == 0 { buf append buf append current 2 buf append ' ' buf append current 2 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } else { buf append buf append previous 2 buf append ' ' buf append previous 2 buf append ' ' buf append current 1 buf append ' ' buf append current 1 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } } } if path isClosed closed { if path size > 1 { previous = path get path size - 1 current = path get 0 if previous mask BezierPath bezier path C2_MASK == 0 { if current mask BezierPath bezier path C1_MASK == 0 { buf append buf append current 0 buf append ' ' buf append current 0 } else { buf append buf append current 1 buf append ' ' buf append current 1 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } } else { if current mask BezierPath bezier path C1_MASK == 0 { buf append buf append previous 2 buf append ' ' buf append previous 2 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } else { buf append buf append previous 2 buf append ' ' buf append previous 2 buf append ' ' buf append current 1 buf append ' ' buf append current 1 buf append ' ' buf append current 0 buf append ' ' buf append current 0 } } } buf append z } } buf toString to } private HashSet hash set pathCommands path commands = new HashSet hash set arrays asList list new { z z } List<BezierPath> list< bezier path> fromPathData from path data IOException { LinkedList<BezierPath> linked list< bezier path> paths = new LinkedList<BezierPath> linked list< bezier path> BezierPath bezier path path = Point2D point2 = new Point2D point2 Point2D point2 c1 = new Point2D point2 Point2D point2 c2 = new Point2D point2 StreamTokenizer stream tokenizer tt = new StreamTokenizer stream tokenizer new StringReader reader tt resetSyntax reset syntax tt parseNumbers parse numbers tt whitespaceChars whitespace chars 0 ' ' tt whitespaceChars whitespace chars ' ' ' ' char nextCommand next command = 'M' ' m' char command = 'M' ' m' while tt nextToken next token != StreamTokenizer stream tokenizer TT_EOF { if tt ttype > 0 { command = char tt ttype } else { command = nextCommand next command tt pushBack push back } BezierPath bezier path node node switch command { case 'M' ' m' if path != { paths add path } path = new BezierPath bezier path if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path moveTo move to nextCommand next command = 'L' ' l' break case 'm' if path != { paths add path } path = new BezierPath bezier path if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path moveTo move to nextCommand next command = 'l' break case 'Z' ' z' case 'z' = path get 0 0 = path get 0 0 path setClosed set closed break case 'L' ' l' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path lineTo line to nextCommand next command = 'L' ' l' break case 'l' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path lineTo line to nextCommand next command = 'l' break case 'H' ' h' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path lineTo line to nextCommand next command = 'H' ' h' break case 'h' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path lineTo line to nextCommand next command = 'h' break case 'V' ' v' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path lineTo line to nextCommand next command = 'V' ' v' break case 'v' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path lineTo line to nextCommand next command = 'v' break case 'C' ' c' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path curveTo curve to c1 c1 c2 c2 nextCommand next command = 'C' ' c' break case 'c' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path curveTo curve to c1 c1 c2 c2 nextCommand next command = 'c' break case 'S' ' s' node = path get path size - 1 c1 = node 0 * 2d - node 1 c1 = node 0 * 2d - node 1 if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path curveTo curve to c1 c1 c2 c2 nextCommand next command = 'S' ' s' break case 's' node = path get path size - 1 c1 = node 0 * 2d - node 1 c1 = node 0 * 2d - node 1 if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c2 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path curveTo curve to c1 c1 c2 c2 nextCommand next command = 's' break case 'Q' ' q' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path quadTo quad to c1 c1 nextCommand next command = 'Q' ' q' break case 'q' if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected c1 = + tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path quadTo quad to c1 c1 nextCommand next command = 'q' break case 'T' ' t' node = path get path size - 1 c1 = node 0 * 2d - node 1 c1 = node 0 * 2d - node 1 if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected = tt nval path quadTo quad to c1 c1 nextCommand next command = 'T' ' t' break case 't' node = path get path size - 1 c1 = node 0 * 2d - node 1 c1 = node 0 * 2d - node 1 if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval if tt nextToken next token != StreamTokenizer stream tokenizer TT_NUMBER new IOException number expected += tt nval path quadTo quad to c1 c1 nextCommand next command = 's' break default new IOException illegal command +command } } if path != { paths add path } paths } getInheritedAttribute get inherited attribute DOMInput dom input List<Map<String list< map< string>> styles { List<String> list< string> values = getInheritedAttribute get inherited attribute for i=values size - 1 >= 0 i-- { if values get != { values get } if styles get != styles get containsKey contains key { styles get get } } } readAttributes read attributes figure DOMInput dom input IOException { List<Map<String list< map< string>> styles = new ArrayList<Map<String list< map< string>> List<String> list< string> values = getInheritedAttribute get inherited attribute style for values { styles add getStyles get styles } value value = getInheritedAttribute get inherited attribute fill styles if value != { color color = getColor get color value if color != INHERIT_COLOR color != CURRENT_COLOR { FILL_COLOR set color } } value = getInheritedAttribute get inherited attribute fill-rule styles if value != { WINDING_RULE set value toUpperCase to upper case equals NONZERO z ? WindingRule winding rule NON_ZERO WindingRule winding rule EVEN_ODD } else { WINDING_RULE set WindingRule winding rule NON_ZERO } value = getInheritedAttribute get inherited attribute stroke styles if value != { color color = getColor get color value if color != INHERIT_COLOR color != CURRENT_COLOR { STROKE_COLOR set color } } value = getInheritedAttribute get inherited attribute stroke-width styles if value != { STROKE_WIDTH set valueOf value of value } value = getInheritedAttribute get inherited attribute stroke-miterlimit styles if value != { STROKE_MITER_LIMIT_FACTOR set valueOf value of value } value = getInheritedAttribute get inherited attribute stroke-dasharray styles if value != { StringTokenizer tokenizer tt = new StringTokenizer tokenizer value dashes = new tt countTokens count tokens for i=0 = dashes length < i++ { dashes = valueOf value of tt nextToken next token } STROKE_DASHES set dashes } value = getInheritedAttribute get inherited attribute stroke-dashoffset styles if value != { STROKE_DASH_PHASE set math valueOf value of value } value = getInheritedAttribute get inherited attribute font-size styles if value != { FONT_SIZE set getDimensionValue get dimension value value } value = getInheritedAttribute get inherited attribute text-anchor styles if value != { SVGText text TEXT_ANCHOR set enum valueOf value of SVGText text TextAnchor text anchor value toUpperCase to upper case } } Map<String map< string> getStyles get styles IOException { HashMap<String hash map< string> styles = new HashMap<String hash map< string> if == styles StreamTokenizer stream tokenizer tt = new StreamTokenizer stream tokenizer new StringReader reader tt resetSyntax reset syntax tt wordChars word chars '!' '9' tt wordChars word chars '<' '~' tt wordChars word chars 128 + 32 255 tt whitespaceChars whitespace chars 0 ' ' while tt nextToken next token != StreamTokenizer stream tokenizer TT_EOF { if tt ttype != ' ' { key value if tt ttype != StreamTokenizer stream tokenizer TT_WORD { new IOException key token expected +str+ +Integer + integer toHexString to hex tt ttype } key = tt sval if tt nextToken next token != ' ' { new IOException colon expected after +key+ +str } if tt nextToken next token != StreamTokenizer stream tokenizer TT_WORD { new IOException value token expected after +key+ +str+ +tt ttype } value = tt sval while tt nextToken next token == StreamTokenizer stream tokenizer TT_WORD { value += ' ' + tt sval } tt pushBack push back styles put key value } } styles } color getColor get color value { value = value trim toLowerCase to lower case if value equals none { } else if value equals currentColor current color { CURRENT_COLOR } else if value equals inherit { INHERIT_COLOR } else if SVG_COLORS containsKey contains key value { SVG_COLORS get value } else if value startsWith starts with # value length == 7 { new color integer decode value } else if value startsWith starts with # value length == 4 { = integer decode value new color 0xf | 0xf << 4 | 0xf0 << 4 | 0xf0 << 8 | 0xf00 << 8 | 0xf00 << 12 } else if value startsWith starts with rgb { StringTokenizer tokenizer tt = new StringTokenizer tokenizer value tt nextToken next token color = new color integer decode tt nextToken next token integer decode tt nextToken next token integer decode tt nextToken next token } else { } } setDefaults set defaults figure { FILL_COLOR set color black STROKE_COLOR set STROKE_DASH_FACTOR set 1d } writeAttributes write attributes figure DOMOutput dom output out IOException { color color dbl value color = FILL_COLOR get if color == { value = none } else { value = 000000 +Integer + integer toHexString to hex color getRGB get value = # +value substring value length - 6 } out addAttribute add attribute fill value if WINDING_RULE get != WindingRule winding rule NON_ZERO { out addAttribute add attribute fill-rule evenodd } color = STROKE_COLOR get if color == { value = none } else { value = 000000 +Integer + integer toHexString to hex color getRGB get value = # +value substring value length - 6 } out addAttribute add attribute stroke value out addAttribute add attribute stroke-width STROKE_WIDTH get 1d out addAttribute add attribute stroke-miterlimit STROKE_MITER_LIMIT_FACTOR get / STROKE_WIDTH get 4d dashes = STROKE_DASHES get dbl = STROKE_DASH_FACTOR get == ? STROKE_WIDTH get STROKE_DASH_FACTOR get if dashes != { StringBuilder builder buf = new StringBuilder builder for i=0 < dashes length i++ { if != 0 { buf append ' ' buf append dashes * dbl } out addAttribute add attribute stroke-dasharray buf toString to } } out addAttribute add attribute stroke-dashoffset STROKE_DASH_PHASE get 0d out addAttribute add attribute font-size FONT_SIZE get } } 