org jhotdraw xml import util * import * import awt * import nanoxml * NanoXMLLiteDOMInput nano xml lite dom input implements DOMInput dom input { private HashMap<String hash map< object> idobjects = new HashMap<String hash map< object> private XMLElement xml element document private XMLElement xml element current private DOMFactory dom factory factory private Stack<XMLElement> stack< xml element> stack = new Stack<XMLElement> stack< xml element> NanoXMLLiteDOMInput nano xml lite dom input DOMFactory dom factory factory InputStream input stream IOException { this factory new InputStreamReader input stream reader UTF8 f8 } NanoXMLLiteDOMInput nano xml lite dom input DOMFactory dom factory factory reader IOException { this factory = factory HashMap hash map entities = new HashMap hash map current = new XMLElement xml element entities current parseFromReader parse from reader document = new XMLElement xml element entities document addChild add child current current = document } getTagName get tag { current getName get } getAttribute get attribute defaultValue default value { value = current getAttribute get attribute value == || value length == 0 ? defaultValue default value value } getText get text { getText get text } getText get text defaultValue default value { value = current getContent get content value == ? defaultValue default value value } util List<String> list< string> getInheritedAttribute get inherited attribute { LinkedList<String> linked list< string> values = new LinkedList<String> linked list< string> for XMLElement xml element node stack { value = node getAttribute get attribute values add value } value = current getAttribute get attribute values add value values } getAttribute get attribute defaultValue default value { value = current getAttribute get attribute value == || value length == 0 ? defaultValue default value long decode value intValue value } getAttribute get attribute defaultValue default value { value = current getAttribute get attribute value == || value length == 0 ? defaultValue default value parseDouble parse value } getAttribute get attribute defaultValue default value { value = current getAttribute get attribute value == || value length == 0 ? defaultValue default value valueOf value of value booleanValue value } getElementCount get element count { current countChildren count children } getElementCount get element count tagName tag { count = 0 ArrayList list list = current getChildren get children for i=0 < list size i++ { XMLElement xml element node = XMLElement xml element list get if node getName get equals tagName tag { count++ } } count } openElement open element index { stack push current ArrayList list list = current getChildren get children current = XMLElement xml element list get index } openElement open element tagName tag { ArrayList list list = current getChildren get children for i=0 < list size i++ { XMLElement xml element node = XMLElement xml element list get if node getName get equals tagName tag { stack push current current = node } } new IllegalArgumentException illegal argument no such element +tagName +tag } openElement open element tagName tag index { count = 0 ArrayList list list = current getChildren get children for i=0 < list size i++ { XMLElement xml element node = XMLElement xml element list get if node getName get equals tagName tag { if count++ == index { stack push current current = node } } } new IllegalArgumentException illegal argument no such element +tagName+ +tag name+ index +index } closeElement close element { current = XMLElement xml element stack pop } readObject read IOException { readObject read 0 } readObject read index IOException { openElement open element index tagName tag = getTagName get tag if tagName tag equals { = } else if tagName tag equals { = getText get text } else if tagName tag equals { = integer decode getText get text } else if tagName tag equals long { = long decode getText get text } else if tagName tag equals float { = new float float parseFloat parse float getText get text } else if tagName tag equals { = new parseDouble parse getText get text } else if tagName tag equals { = valueOf value of getText get text } else if tagName tag equals color { = new color getAttribute get attribute rgba 0xff } else if tagName tag equals intArray { = new getElementCount get element count for i=0 < length i++ { = integer readObject read intValue value } = } else if tagName tag equals floatArray float { float = new float getElementCount get element count for i=0 < length i++ { = float readObject read floatValue float value } = } else if tagName tag equals doubleArray { = new getElementCount get element count for i=0 < length i++ { = readObject read doubleValue value } = } else if tagName tag equals font { = new font getAttribute get attribute dialog getAttribute get attribute style 0 getAttribute get attribute size 0 } else if tagName tag equals enum { = factory createEnum create enum getAttribute get attribute type getText get text } else { ref = getAttribute get attribute ref = getAttribute get attribute ref if == { = factory create getTagName get tag } else if idobjects containsKey contains key { = idobjects get } else { = factory create getTagName get tag idobjects put } if ref == { if instanceof DOMStorable dom storable { DOMStorable dom storable read this } } } closeElement close element } } 