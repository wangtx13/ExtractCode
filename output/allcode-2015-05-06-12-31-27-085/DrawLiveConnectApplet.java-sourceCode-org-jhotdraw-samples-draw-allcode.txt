org jhotdraw samples draw import org jhotdraw draw drawing import org jhotdraw draw TextFigure text figure import org jhotdraw draw action SwingWorker swing worker import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import netscape javascript * import org jhotdraw xml * DrawLiveConnectApplet draw live connect applet JApplet applet { private VERSION = 0 44 private NAME = PlasmaDraw plasma draw init { try { UIManager manager setLookAndFeel set look and feel UIManager manager getSystemLookAndFeelClassName get look and feel } catch throwable { } container = getContentPane get content pane setLayout set layout new BoxLayout box layout BoxLayout box layout Y_AXIS lines = getAppletInfo get applet info split \n for i=0 < lines length i++ { add new JLabel label lines } new SwingWorker swing worker { construct { result try { if getParameter get data != getParameter get data length > 0 { NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new DrawFigureFactory draw figure factory new StringReader reader getParameter get data domi openElement open element PlasmaDraw plasma draw result = domi readObject read 0 } else if getParameter get datafile != { InputStream input stream = try { URL url = new URL getDocumentBase get document base getParameter get datafile = url openConnection open connection getInputStream get input stream NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new DrawFigureFactory draw figure factory domi openElement open element PlasmaDraw plasma draw result = domi readObject read 0 } finally { if != close } } else { result = } } catch throwable { result = } result } finished { container = getContentPane get content pane setLayout set layout new BorderLayout border layout removeAll remove all result = getValue get value initComponents init components if result != { if result instanceof drawing { setDrawing set drawing drawing result } else if result instanceof throwable { getDrawing get drawing add new TextFigure text figure result toString to throwable result printStackTrace stack trace } } isLiveConnect live connect try { forName for netscape javascript JSObject isLiveConnect live connect = } catch throwable { isLiveConnect live connect = } loadButton load button setEnabled set enabled isLiveConnect live connect getParameter get dataread != saveButton save button setEnabled set enabled isLiveConnect live connect getParameter get datawrite != if isLiveConnect live connect { methodName = getParameter get dataread if methodName indexOf index of ' ' > 0 { methodName = methodName substring 0 methodName indexOf index of ' ' - 1 } JSObject win = JSObject getWindow get window DrawLiveConnectApplet draw live connect applet this data = win call methodName new 0 if data instanceof { setData set data data } } validate } } start } private setDrawing set drawing drawing { drawingPanel drawing panel setDrawing set drawing } private drawing getDrawing get drawing { drawingPanel drawing panel getDrawing get drawing } setData set data text { if text != text length > 0 { StringReader reader = new StringReader reader text try { NanoXMLLiteDOMInput nano xml lite dom input domi = new NanoXMLLiteDOMInput nano xml lite dom input new DrawFigureFactory draw figure factory domi openElement open element PlasmaDraw plasma draw setDrawing set drawing drawing domi readObject read 0 } catch throwable { getDrawing get drawing clear TextFigure text figure tf = new TextFigure text figure tf setText set text getMessage get message tf setBounds set bounds new Point2D point2 10 10 new Point2D point2 100 100 getDrawing get drawing add tf printStackTrace stack trace } finally { if != close } } } getData get data { CharArrayWriter char writer out = new CharArrayWriter char writer try { NanoXMLLiteDOMOutput nano xml lite dom output domo = new NanoXMLLiteDOMOutput nano xml lite dom output new DrawFigureFactory draw figure factory domo openElement open element PlasmaDraw plasma draw domo writeObject write getDrawing get drawing domo closeElement close element domo save out } catch IOException { TextFigure text figure tf = new TextFigure text figure tf setText set text getMessage get message tf setBounds set bounds new Point2D point2 10 10 new Point2D point2 100 100 getDrawing get drawing add tf printStackTrace stack trace } finally { if out != out close } out toString to } getParameterInfo get info { new { { data the data to be displayed by this applet } { datafile URL URL to containing the data to be displayed by this applet } { dataread function the of JavaScript script function which can be used to read the data } { datawrite function the of JavaScript script function which can be used to write the data } } } getAppletInfo get applet info { NAME+ e+ \nVersion \n +VERSION + + \n\nCopyright \n\n copyright 2004 \u00a9 werner randelshofer + \nAlle \n alle rechte vorbehalten + \n\nDiese \n\n diese software basiert auf + \nJHotDraw \n jhotdraw \u00a9 1996 1997 IFA informatik und erich gamma } private initComponents init components { toolButtonGroup tool button group = new javax swing ButtonGroup button group drawingPanel drawing panel = new org jhotdraw samples draw DrawingPanel drawing panel jToolBar1 tool bar1 = new javax swing JToolBar tool bar loadButton load button = new javax swing JButton button saveButton save button = new javax swing JButton button FormListener form listener formListener form listener = new FormListener form listener getContentPane get content pane add drawingPanel drawing panel awt BorderLayout border layout CENTER jToolBar1 tool bar1 setFloatable set floatable loadButton load button setText set text laden loadButton load button addActionListener add action listener formListener form listener jToolBar1 tool bar1 add loadButton load button saveButton save button setText set text speichern saveButton save button addActionListener add action listener formListener form listener jToolBar1 tool bar1 add saveButton save button getContentPane get content pane add jToolBar1 tool bar1 awt BorderLayout border layout SOUTH } private FormListener form listener implements awt event ActionListener action listener { actionPerformed action performed awt event ActionEvent action event evt { if evt getSource get source == loadButton load button { DrawLiveConnectApplet draw live connect applet this load evt } else if evt getSource get source == saveButton save button { DrawLiveConnectApplet draw live connect applet this save evt } } } private save awt event ActionEvent action event evt { try { methodName = getParameter get datawrite if methodName indexOf index of ' ' > 0 { methodName = methodName substring 0 methodName indexOf index of ' ' - 1 } JSObject win = JSObject getWindow get window this result = win call methodName new { getData get data } } catch throwable { TextFigure text figure tf = new TextFigure text figure fehler +t AffineTransform affine transform tx = new AffineTransform affine transform tx translate 10 20 tf transform tx getDrawing get drawing add tf } } private load awt event ActionEvent action event evt { try { methodName = getParameter get dataread if methodName indexOf index of ' ' > 0 { methodName = methodName substring 0 methodName indexOf index of ' ' - 1 } JSObject win = JSObject getWindow get window this result = win call methodName new 0 if result instanceof { setData set data result } } catch throwable { TextFigure text figure tf = new TextFigure text figure fehler +t AffineTransform affine transform tx = new AffineTransform affine transform tx translate 10 20 tf transform tx getDrawing get drawing add tf } } private org jhotdraw samples draw DrawingPanel drawing panel drawingPanel drawing panel private javax swing JToolBar tool bar jToolBar1 tool bar1 private javax swing JButton button loadButton load button private javax swing JButton button saveButton save button private javax swing ButtonGroup button group toolButtonGroup tool button group } 