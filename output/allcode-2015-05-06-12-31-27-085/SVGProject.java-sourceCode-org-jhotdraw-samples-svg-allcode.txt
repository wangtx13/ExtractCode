org jhotdraw samples svg import org jhotdraw gui * import org jhotdraw * import org jhotdraw undo * import org jhotdraw util * import awt * import beans * import * import lang reflect * import javax swing * import javax swing border * import org jhotdraw app * import org jhotdraw app action * import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw xml * SVGProject project AbstractProject project { private UndoRedoManager undo redo manager undo private DrawingEditor drawing editor editor SVGProject project { } init { super init initComponents init components JPanel panel zoomButtonPanel zoom button panel = new JPanel panel new BorderLayout border layout scrollPane scroll pane setLayout set layout new PlacardScrollPaneLayout placard scroll pane layout scrollPane scroll pane setBorder set border new EmptyBorder empty border 0 0 0 0 setEditor set editor new DefaultDrawingEditor default drawing editor view setDOMFactory set dom factory new SVGFigureFactory figure factory undo = new UndoRedoManager undo redo manager view setDrawing set drawing new SVGDrawing drawing view getDrawing get drawing addUndoableEditListener add undoable edit listener undo initActions init actions undo addPropertyChangeListener add property change listener new PropertyChangeListener property change listener { propertyChange property change PropertyChangeEvent property change event evt { setHasUnsavedChanges set has unsaved changes undo hasSignificantEdits has significant edits } } ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw draw labels JPanel panel placardPanel placard panel = new JPanel panel new BorderLayout border layout javax swing AbstractButton button pButton button pButton button = ToolBarButtonFactory tool bar button factory createZoomButton create zoom button view pButton button putClientProperty put client property quaqua button style placard pButton button putClientProperty put client property quaqua component visualMargin visual margin new insets 0 0 0 0 pButton button setFont set font UIManager manager getFont get font SmallSystemFont small font placardPanel placard panel add pButton button BorderLayout border layout WEST pButton button = ToolBarButtonFactory tool bar button factory createToggleGridButton create toggle grid button view pButton button putClientProperty put client property quaqua button style placard pButton button putClientProperty put client property quaqua component visualMargin visual margin new insets 0 0 0 0 pButton button setFont set font UIManager manager getFont get font SmallSystemFont small font labels configureToolBarButton configure tool bar button pButton button alignGridSmall align grid small placardPanel placard panel add pButton button BorderLayout border layout EAST scrollPane scroll pane add placardPanel placard panel JScrollPane scroll pane LOWER_LEFT_CORNER } DrawingEditor drawing editor getEditor get editor { editor } setEditor set editor DrawingEditor drawing editor newValue new value { DrawingEditor drawing editor oldValue old value = editor if oldValue old value != { oldValue old value remove view } editor = newValue new value if newValue new value != { newValue new value add view } } private initActions init actions { putAction put action UndoAction undo action undo getUndoAction get undo action putAction put action RedoAction redo action undo getRedoAction get redo action } setHasUnsavedChanges set has unsaved changes newValue new value { super setHasUnsavedChanges set has unsaved changes newValue new value undo setHasSignificantEdits set has significant edits newValue new value } write IOException { OutputStream output stream out = try { out = new BufferedOutputStream buffered output stream new FileOutputStream output stream NanoXMLDOMOutput nano xml dom output domo = new NanoXMLDOMOutput nano xml dom output view getDOMFactory get dom factory domo setDoctype set doctype svg PUBLIC \ - \ http domo writeObject write view getDrawing get drawing domo save out } finally { if out != try { out close } catch IOException {} } } read IOException { InputStream input stream = try { = new BufferedInputStream buffered input stream new FileInputStream input stream DOMInput dom input domi = new NanoXMLDOMInput nano xml dom input view getDOMFactory get dom factory drawing drawing = drawing domi readObject read SwingUtilities swing utilities invokeAndWait and wait new runnable { run { view getDrawing get drawing removeUndoableEditListener remove undoable edit listener undo view setDrawing set drawing drawing view getDrawing get drawing addUndoableEditListener add undoable edit listener undo undo discardAllEdits discard all edits }} } catch InterruptedException interrupted { InternalError internal = new InternalError internal initCause init cause } catch InvocationTargetException invocation target { InternalError internal = new InternalError internal initCause init cause } finally { if != try { close } catch IOException {} } } setDrawingEditor set drawing editor DrawingEditor drawing editor newValue new value { if editor != { editor remove view } editor = newValue new value if editor != { editor add view } } DrawingEditor drawing editor getDrawingEditor get drawing editor { editor } clear { view setDrawing set drawing new SVGDrawing drawing undo discardAllEdits discard all edits } @Override @ JFileChooser chooser createOpenChooser create open chooser { JFileChooser chooser = super createOpenChooser create open chooser addChoosableFileFilter add choosable filter new ExtensionFileFilter extension filter SVG drawing svg } @Override @ JFileChooser chooser createSaveChooser create save chooser { JFileChooser chooser = super createSaveChooser create save chooser addChoosableFileFilter add choosable filter new ExtensionFileFilter extension filter SVG drawing svg } private initComponents init components { scrollPane scroll pane = new javax swing JScrollPane scroll pane view = new org jhotdraw draw DefaultDrawingView default drawing view setLayout set layout new awt BorderLayout border layout scrollPane scroll pane setHorizontalScrollBarPolicy set horizontal scroll bar policy javax swing ScrollPaneConstants scroll pane constants HORIZONTAL_SCROLLBAR_ALWAYS scrollPane scroll pane setVerticalScrollBarPolicy set vertical scroll bar policy javax swing ScrollPaneConstants scroll pane constants VERTICAL_SCROLLBAR_ALWAYS scrollPane scroll pane setViewportView set viewport view view add scrollPane scroll pane awt BorderLayout border layout CENTER } private javax swing JScrollPane scroll pane scrollPane scroll pane private org jhotdraw draw DefaultDrawingView default drawing view view } 