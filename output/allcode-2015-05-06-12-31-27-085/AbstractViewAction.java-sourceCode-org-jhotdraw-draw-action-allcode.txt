org jhotdraw draw action import org jhotdraw draw drawing import org jhotdraw draw DrawingEditor drawing editor import org jhotdraw draw DrawingView drawing view import org jhotdraw util * import beans * import javax swing * import javax swing undo * import util * AbstractViewAction view action AbstractAction action { private DrawingEditor drawing editor editor private DrawingView drawing view view ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw draw labels locale getDefault get default private PropertyChangeListener property change listener propertyChangeHandler property change handler = new PropertyChangeListener property change listener { propertyChange property change PropertyChangeEvent property change event evt { if evt getPropertyName get property equals enabled { updateEnabledState update enabled state } } } AbstractViewAction view action DrawingEditor drawing editor editor { this editor = editor editor addPropertyChangeListener add property change listener new PropertyChangeListener property change listener { propertyChange property change PropertyChangeEvent property change event evt { if evt getPropertyName get property equals view { if evt getOldValue get old value != { DrawingView drawing view view = DrawingView drawing view evt getOldValue get old value view removePropertyChangeListener remove property change listener propertyChangeHandler property change handler } if evt getNewValue get new value != { DrawingView drawing view view = DrawingView drawing view evt getOldValue get old value view addPropertyChangeListener add property change listener propertyChangeHandler property change handler updateEnabledState update enabled state } } } } } AbstractViewAction view action DrawingView drawing view view { this view = view } setEditor set editor DrawingEditor drawing editor newValue new value { editor = newValue new value } DrawingView drawing view getView get view { view != ? view editor getView get view } drawing getDrawing get drawing { getView get view getDrawing get drawing } fireUndoableEditHappened fire undoable edit happened UndoableEdit undoable edit edit { getDrawing get drawing fireUndoableEditHappened fire undoable edit happened edit } viewChanged view changed { } updateEnabledState update enabled state { if getView get view != { setEnabled set enabled getView get view isEnabled enabled getView get view getSelectionCount get selection count > 0 } else { setEnabled set enabled } } } 