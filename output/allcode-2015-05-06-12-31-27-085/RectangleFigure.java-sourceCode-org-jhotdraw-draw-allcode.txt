org jhotdraw draw import awt * import awt geom * import * import util * import org jhotdraw draw AttributeKeys attribute keys * import org jhotdraw geom geom RectangleFigure rectangle figure AttributedFigure attributed figure { private Rectangle2D rectangle2 rectangle RectangleFigure rectangle figure { this 0 0 0 0 } RectangleFigure rectangle figure width height { rectangle = new Rectangle2D rectangle2 width height } Rectangle2D rectangle2 getBounds get bounds { Rectangle2D rectangle2 bounds = Rectangle2D rectangle2 rectangle clone bounds } drawFill draw fill Graphics2D graphics2 { Rectangle2D rectangle2 = Rectangle2D rectangle2 rectangle clone grow = AttributeKeys attribute keys getPerpendicularFillGrowth get perpendicular fill growth this geom grow grow grow fill } drawStroke draw stroke Graphics2D graphics2 { Rectangle2D rectangle2 = Rectangle2D rectangle2 rectangle clone grow = AttributeKeys attribute keys getPerpendicularDrawGrowth get perpendicular draw growth this geom grow grow grow draw } Rectangle2D rectangle2 getFigureDrawBounds get figure draw bounds { Rectangle2D rectangle2 = Rectangle2D rectangle2 rectangle clone grow = AttributeKeys attribute keys getPerpendicularHitGrowth get perpendicular hit growth this + 1d geom grow grow grow } contains Point2D point2 { Rectangle2D rectangle2 = Rectangle2D rectangle2 rectangle clone grow = AttributeKeys attribute keys getPerpendicularHitGrowth get perpendicular hit growth this + 1d geom grow grow grow contains } basicSetBounds basic set bounds Point2D point2 anchor Point2D point2 { rectangle = math min anchor rectangle = math min anchor rectangle width = math max 0 1 math - anchor rectangle height = math max 0 1 math - anchor } basicTransform basic transform AffineTransform affine transform tx { Point2D point2 anchor = getStartPoint get start point Point2D point2 = getEndPoint get point basicSetBounds basic set bounds Point2D point2 tx transform anchor anchor Point2D point2 tx transform } RectangleFigure rectangle figure clone { RectangleFigure rectangle figure that = RectangleFigure rectangle figure super clone that rectangle = Rectangle2D rectangle2 this rectangle clone that } restoreTo restore to geometry { Rectangle2D rectangle2 = Rectangle2D rectangle2 geometry rectangle = rectangle = rectangle width = width rectangle height = height } getRestoreData get restore data { rectangle clone } } 