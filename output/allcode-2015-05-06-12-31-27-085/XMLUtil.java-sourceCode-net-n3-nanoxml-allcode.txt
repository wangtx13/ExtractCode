net n3 nanoxml import IOException import reader import CharArrayReader char reader XMLUtil xml util { skipComment skip comment IXMLReader xml reader reader IOException XMLParseException xml parse { if reader read != '-' { XMLUtil xml util errorExpectedInput expected input reader getSystemID get systemid reader getLineNr get line nr <!-- } dashesRead dashes read = 0 for { char ch = reader read switch ch { case '-' dashesRead++ dashes read++ break case '>' if dashesRead dashes read == 2 { } default dashesRead dashes read = 0 } } } skipTag skip tag IXMLReader xml reader reader IOException XMLParseException xml parse { level = 1 while level > 0 { char ch = reader read switch ch { case '<' ++level break case '>' --level break } } } scanPublicID scan publicid StringBuffer buffer publicid IXMLReader xml reader reader IOException XMLParseException xml parse { if ! XMLUtil xml util checkLiteral check literal reader UBLIC { } XMLUtil xml util skipWhitespace skip whitespace reader publicid append XMLUtil xml util scanString scan reader '\0' XMLUtil xml util skipWhitespace skip whitespace reader XMLUtil xml util scanString scan reader '\0' } scanSystemID scan systemid IXMLReader xml reader reader IOException XMLParseException xml parse { if ! XMLUtil xml util checkLiteral check literal reader YSTEM { } XMLUtil xml util skipWhitespace skip whitespace reader XMLUtil xml util scanString scan reader '\0' } scanIdentifier scan identifier IXMLReader xml reader reader IOException XMLParseException xml parse { StringBuffer buffer result = new StringBuffer buffer for { char ch = reader read if ch == '_' || ch == ' ' || ch == '-' || ch == ' ' || ch >= 'a' ch <= 'z' || ch >= 'A' ' a' ch <= 'Z' ' z' || ch >= '0' ch <= '9' || ch > '\u007E' '\u007 e' { result append ch } else { reader unread ch break } } result toString to } scanString scan IXMLReader xml reader reader char entityChar entity char IXMLEntityResolver xml entity resolver entityResolver entity resolver IOException XMLParseException xml parse { StringBuffer buffer result = new StringBuffer buffer startingLevel starting level = reader getStreamLevel get stream level char delim = reader read if delim != '\'' delim != ' ' { XMLUtil xml util errorExpectedInput expected input reader getSystemID get systemid reader getLineNr get line nr delimited } for { = XMLUtil xml util read reader entityChar entity char char ch = charAt char 0 if ch == entityChar entity char { if charAt char 1 == '#' { result append XMLUtil xml util processCharLiteral process char literal } else { XMLUtil xml util processEntity process entity reader entityResolver entity resolver } } else if ch == ' ' { reader unread ch = XMLUtil xml util read reader ' ' if charAt char 1 == '#' { result append XMLUtil xml util processCharLiteral process char literal } else { result append } } else if reader getStreamLevel get stream level == startingLevel starting level { if ch == delim { break } else if ch == 9 || ch == 10 || ch == 13 { result append ' ' } else { result append ch } } else { result append ch } } result toString to } processEntity process entity entity IXMLReader xml reader reader IXMLEntityResolver xml entity resolver entityResolver entity resolver IOException XMLParseException xml parse { entity = entity substring 1 entity length - 1 reader entityReader entity reader = entityResolver entity resolver getEntity get entity reader entity if entityReader entity reader == { XMLUtil xml util errorInvalidEntity invalid entity reader getSystemID get systemid reader getLineNr get line nr entity } externalEntity external entity = entityResolver entity resolver isExternalEntity external entity entity reader startNewStream start new stream entityReader entity reader !externalEntity !external entity } char processCharLiteral process char literal entity IOException XMLParseException xml parse { if entity charAt char 2 == 'x' { entity = entity substring 3 entity length - 1 char integer parseInt parse entity 16 } else { entity = entity substring 2 entity length - 1 char integer parseInt parse entity 10 } } skipWhitespace skip whitespace IXMLReader xml reader reader StringBuffer buffer buffer IOException { char ch if buffer == { { ch = reader read } while ch == ' ' || ch == '\t' || ch == '\n' } else { for { ch = reader read if ch != ' ' ch != '\t' ch != '\n' { break } if ch == '\n' { buffer append '\n' } else { buffer append ' ' } } } reader unread ch } read IXMLReader xml reader reader char entityChar entity char IOException XMLParseException xml parse { char ch = reader read StringBuffer buffer buf = new StringBuffer buffer buf append ch if ch == entityChar entity char { while ch != ' ' { ch = reader read buf append ch } } buf toString to } char readChar read char IXMLReader xml reader reader char entityChar entity char IOException XMLParseException xml parse { = XMLUtil xml util read reader entityChar entity char char ch = charAt char 0 if ch == entityChar entity char { XMLUtil xml util errorUnexpectedEntity unexpected entity reader getSystemID get systemid reader getLineNr get line nr } ch } checkLiteral check literal IXMLReader xml reader reader literal IOException XMLParseException xml parse { for = 0 < literal length i++ { if reader read != literal charAt char { } } } errorExpectedInput expected input systemid lineNr line nr expectedString expected XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr expected + expectedString expected } errorInvalidEntity invalid entity systemid lineNr line nr entity XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr invalid entity ` + entity + ' } errorUnexpectedEntity unexpected entity systemid lineNr line nr entity XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr no entity reference expected here + entity + } errorUnexpectedCDATA unexpected systemid lineNr line nr XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr no CDATA section expected here } errorInvalidInput invalid input systemid lineNr line nr unexpectedString unexpected XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr invalid input + unexpectedString unexpected } errorWrongClosingTag wrong closing tag systemid lineNr line nr expectedName expected wrongName wrong XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr closing tag does not match opening tag ` + wrongName wrong + ' != ` + expectedName expected + ' } errorClosingTagNotEmpty closing tag not empty systemid lineNr line nr XMLParseException xml parse { new XMLParseException xml parse systemid lineNr line nr closing tag must be empty } errorMissingElement missing element systemid lineNr line nr parentElementName parent element missingElementName missing element XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation MISSING_ELEMENT systemid lineNr line nr missingElementName missing element element + parentElementName parent element + expects to have + missingElementName missing element } errorUnexpectedElement unexpected element systemid lineNr line nr parentElementName parent element unexpectedElementName unexpected element XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation UNEXPECTED_ELEMENT systemid lineNr line nr unexpectedElementName unexpected element unexpected + unexpectedElementName unexpected element + + parentElementName parent element } errorMissingAttribute missing attribute systemid lineNr line nr elementName element attributeName attribute XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation MISSING_ATTRIBUTE systemid lineNr line nr elementName element attributeName attribute element + elementName element + expects attribute named + attributeName attribute } errorUnexpectedAttribute unexpected attribute systemid lineNr line nr elementName element attributeName attribute XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation UNEXPECTED_ATTRIBUTE systemid lineNr line nr elementName element attributeName attribute element + elementName element + did not expect attribute + named + attributeName attribute } errorInvalidAttributeValue invalid attribute value systemid lineNr line nr elementName element attributeName attribute attributeValue attribute value XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation ATTRIBUTE_WITH_INVALID_VALUE systemid lineNr line nr elementName element attributeName attribute attributeValue attribute value invalid value for attribute + attributeName attribute } errorMissingPCData missing data systemid lineNr line nr parentElementName parent element XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation MISSING_PCDATA systemid lineNr line nr missing #PCDATA # element + parentElementName parent element } errorUnexpectedPCData unexpected data systemid lineNr line nr parentElementName parent element XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation UNEXPECTED_PCDATA systemid lineNr line nr unexpected #PCDATA # element + parentElementName parent element } validationError validation systemid lineNr line nr message elementName element attributeName attribute attributeValue attribute value XMLValidationException xml validation { new XMLValidationException xml validation XMLValidationException xml validation MISC_ERROR systemid lineNr line nr elementName element attributeName attribute attributeValue attribute value message } } 