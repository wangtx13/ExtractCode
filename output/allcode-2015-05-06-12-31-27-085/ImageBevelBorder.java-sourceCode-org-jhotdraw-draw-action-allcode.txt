org jhotdraw draw action import awt * import javax swing * import javax swing border * import awt image * import javax swing plaf basic * ImageBevelBorder image bevel border implements border { private VERBOSE = private BufferedImage buffered image image private insets borderInsets border insets private insets imageInsets image insets private fillContentArea fill content area ImageBevelBorder image bevel border image img insets borderInsets border insets { this img borderInsets border insets borderInsets border insets } ImageBevelBorder image bevel border image img insets imageInsets image insets insets borderInsets border insets { this img imageInsets image insets borderInsets border insets } ImageBevelBorder image bevel border image img insets imageInsets image insets insets borderInsets border insets fillContentArea fill content area { if img instanceof BufferedImage buffered image { this image = BufferedImage buffered image img } else { frame = new frame MediaTracker media tracker = new MediaTracker media tracker addImage add image img 0 try { waitForAll wait for all } catch InterruptedException interrupted {} image = new BufferedImage buffered image img getWidth get width img getHeight get height BufferedImage buffered image TYPE_INT_ARGB Graphics2D graphics2 imgGraphics img graphics = image createGraphics create graphics imgGraphics img graphics drawImage draw image img 0 0 imgGraphics img graphics dispose dispose } this imageInsets image insets = imageInsets image insets this borderInsets border insets = borderInsets border insets this fillContentArea fill content area = fillContentArea fill content area } isBorderOpaque border opaque { } insets getBorderInsets get border insets component { insets borderInsets border insets clone } paintBorder paint border component graphics gr width height { if image == Graphics2D graphics2 = Graphics2D graphics2 gr top = imageInsets image insets top left = imageInsets image insets left bottom = imageInsets image insets bottom right = imageInsets image insets right imgWidth img width = image getWidth get width imgHeight img height = image getHeight get height if fillContentArea fill content area { if width == imgWidth img width height == imgHeight img height { drawImage draw image image } } if width == imgWidth img width { left = imgWidth img width right = 0 } if height == imgHeight img height { top = imgHeight img height bottom = 0 } if width < left + right { left = math min left width / 2 right = width - left } if height < top + bottom { top = math min top height / 2 bottom = height - top } if top > 0 left > 0 { drawImage draw image image + left + top 0 0 left top } if top > 0 right > 0 { drawImage draw image image + width - right + width + top imgWidth img width - right 0 imgWidth img width top } if bottom > 0 left > 0 { drawImage draw image image + height - bottom + left + height 0 imgHeight img height - bottom left imgHeight img height } if bottom > 0 right > 0 { drawImage draw image image + width - right + height - bottom + width + height imgWidth img width - right imgHeight img height - bottom imgWidth img width imgHeight img height } BufferedImage buffered image subImg sub img = TexturePaint texture paint paint if top > 0 left + right < width { subImg sub img = image getSubimage get subimage left 0 imgWidth img width - right - left top paint = new TexturePaint texture paint subImg sub img new rectangle x+left imgWidth img width - left - right top setPaint set paint paint fillRect fill rect x+left width - left - right top } if bottom > 0 left + right < width { subImg sub img = image getSubimage get subimage left imgHeight img height - bottom imgWidth img width - right - left bottom paint = new TexturePaint texture paint subImg sub img new rectangle x+left + height - bottom imgWidth img width - left - right bottom setPaint set paint paint fillRect fill rect x+left + height - bottom width - left - right bottom } if left > 0 top + bottom < height { subImg sub img = image getSubimage get subimage 0 top left imgHeight img height - top - bottom paint = new TexturePaint texture paint subImg sub img new rectangle y+top left imgHeight img height - top - bottom setPaint set paint paint fillRect fill rect y+top left height - top - bottom } if right > 0 top + bottom < height { subImg sub img = image getSubimage get subimage imgWidth img width - right top right imgHeight img height - top - bottom paint = new TexturePaint texture paint subImg sub img new rectangle x+width-right + top right imgHeight img height - top - bottom setPaint set paint paint fillRect fill rect x+width-right + top right height - top - bottom } if fillContentArea fill content area { setColor set color color yellow if left + right < width top + bottom < height { subImg sub img = image getSubimage get subimage left top imgWidth img width - right - left imgHeight img height - top - bottom paint = new TexturePaint texture paint subImg sub img new rectangle + left + top imgWidth img width - right - left imgHeight img height - top - bottom setPaint set paint paint fillRect fill rect x+left + top width - right - left height - top - bottom } } } } 