net n3 nanoxml import PrintStream stream import PrintWriter writer XMLException xml { private msg private systemid private lineNr line nr private encapsulatedException encapsulated XMLException xml msg { this -1 msg } XMLException xml { this -1 nested } XMLException xml systemid lineNr line nr { this systemid lineNr line nr nested } XMLException xml systemid lineNr line nr msg { this systemid lineNr line nr msg } XMLException xml systemid lineNr line nr msg reportParams report params { super XMLException xml buildMessage build message systemid lineNr line nr msg reportParams report params this systemid = systemid this lineNr line nr = lineNr line nr this encapsulatedException encapsulated = this msg = XMLException xml buildMessage build message systemid lineNr line nr msg reportParams report params } private buildMessage build message systemid lineNr line nr msg reportParams report params { = msg if reportParams report params { if systemid != { += systemid=' + systemid + ' } if lineNr line nr >= 0 { += line= + lineNr line nr } if != { += + } } } finalize throwable { this systemid = this encapsulatedException encapsulated = super finalize } getSystemID get systemid { this systemid } getLineNr get line nr { this lineNr line nr } getException get { this encapsulatedException encapsulated } printStackTrace stack trace PrintWriter writer writer { super printStackTrace stack trace writer if this encapsulatedException encapsulated != { writer *** nested this encapsulatedException encapsulated printStackTrace stack trace writer } } printStackTrace stack trace PrintStream stream stream { super printStackTrace stack trace stream if this encapsulatedException encapsulated != { stream *** nested this encapsulatedException encapsulated printStackTrace stack trace stream } } printStackTrace stack trace { super printStackTrace stack trace if this encapsulatedException encapsulated != { *** nested this encapsulatedException encapsulated printStackTrace stack trace } } toString to { this msg } } 