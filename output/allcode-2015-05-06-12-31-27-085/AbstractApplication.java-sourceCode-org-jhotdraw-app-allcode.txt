org jhotdraw app import awt * import org jhotdraw beans * import org jhotdraw util * import util * import util prefs * import javax swing * import * AbstractApplication application AbstractBean bean implements application { private LinkedList linked list projects = new LinkedList linked list private collection unmodifiableDocuments unmodifiable documents private isEnabled enabled = ResourceBundleUtil resource bundle util labels private ApplicationModel application model model private LinkedList<File> linked list< file> recentFiles recent files = new LinkedList linked list private maxRecentFilesCount max recent files count = 10 private preferences prefs AbstractApplication application { } init { prefs = preferences userNodeForPackage user node for getModel get model == ? getClass get getModel get model getClass get count = prefs getInt get recentFileCount recent count 0 for i=0 < count i++ { path = prefs get recentFile recent +i if path != { recentFiles recent files add new path } } if model != { model initApplication init application this } } start { project = createProject create project add show } project createProject create project { project = basicCreateProject basic create project init if getModel get model != { getModel get model initProject init project this } initProjectActions init project actions } setModel set model ApplicationModel application model newValue new value { ApplicationModel application model oldValue old value = model model = newValue new value firePropertyChange fire property change model oldValue old value newValue new value } ApplicationModel application model getModel get model { model } project basicCreateProject basic create project { model createProject create project } getName get { model getName get } getVersion get { model getVersion get } getCopyright get copyright { model getCopyright get copyright } initProjectActions init project actions project stop { for project new LinkedList<Project> linked list< project> projects { dispose } exit 0 } remove project { hide oldCount old count = projects size projects remove setApplication set application firePropertyChange fire property change projectCount project count oldCount old count projects size } add project { if getApplication get application != this { oldCount old count = projects size projects add setApplication set application this firePropertyChange fire property change projectCount project count oldCount old count projects size } } dispose project { remove dispose } Collection<Project> collection< project> projects { if unmodifiableDocuments unmodifiable documents == { unmodifiableDocuments unmodifiable documents = collections unmodifiableCollection unmodifiable collection projects } unmodifiableDocuments unmodifiable documents } isEnabled enabled { isEnabled enabled } setEnabled set enabled newValue new value { oldValue old value = isEnabled enabled isEnabled enabled = newValue new value firePropertyChange fire property change enabled oldValue old value newValue new value } container createContainer create container { new JFrame frame } launch args { configure args SwingUtilities swing utilities invokeLater later new runnable { run { init start } } } initLabels init labels { labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw app labels } configure args { } util List<File> list< file> recentFiles recent files { collections unmodifiableList unmodifiable list recentFiles recent files } clearRecentFiles clear recent files { util List<File> list< file> oldValue old value = util List<File> list< file> recentFiles recent files clone recentFiles recent files clear prefs putInt put recentFileCount recent count recentFiles recent files size firePropertyChange fire property change recentFiles recent files collections unmodifiableList unmodifiable list oldValue old value collections unmodifiableList unmodifiable list recentFiles recent files } addRecentFile add recent { util List<File> list< file> oldValue old value = util List<File> list< file> recentFiles recent files clone if recentFiles recent files contains { recentFiles recent files remove } recentFiles recent files addFirst add first if recentFiles recent files size > maxRecentFilesCount max recent files count { recentFiles recent files removeLast remove last } prefs putInt put recentFileCount recent count recentFiles recent files size i=0 for recentFiles recent files { prefs put recentFile recent +i getPath get path i++ } firePropertyChange fire property change recentFiles recent files oldValue old value 0 firePropertyChange fire property change recentFiles recent files collections unmodifiableList unmodifiable list oldValue old value collections unmodifiableList unmodifiable list recentFiles recent files } } 