org jhotdraw app action import org jhotdraw gui * import org jhotdraw gui event * import org jhotdraw util * import awt * import awt event * import util * import javax swing * import * import org jhotdraw app application import org jhotdraw app project ExitAction exit action AbstractApplicationAction application action { = exit private component oldFocusOwner old focus owner private project unsavedProject unsaved project ExitAction exit action application app { super app ResourceBundleUtil resource bundle util labels = ResourceBundleUtil resource bundle util getLAFBundle get bundle org jhotdraw app labels labels configureAction configure action this } actionPerformed action performed ActionEvent action event evt { application app = getApplication get application if app isEnabled enabled { app setEnabled set enabled unsavedProjectsCount unsaved projects count = 0 project documentToBeReviewed document to be reviewed = for project app projects { if hasUnsavedChanges has unsaved changes { if isEnabled enabled { documentToBeReviewed document to be reviewed = } unsavedProjectsCount++ unsaved projects count++ } } if unsavedProjectsCount unsaved projects count > 0 documentToBeReviewed document to be reviewed == { app setEnabled set enabled } switch unsavedProjectsCount unsaved projects count { case 0 { doExit exit break } case 1 { unsavedProject unsaved project = documentToBeReviewed document to be reviewed oldFocusOwner old focus owner = SwingUtilities swing utilities getWindowAncestor get window ancestor unsavedProject unsaved project getComponent get component getFocusOwner get focus owner unsavedProject unsaved project setEnabled set enabled JOptionPane option pane pane = new JOptionPane option pane <html> +UIManager + manager getString get OptionPane option pane css + <b>Do <b> you want to save changes to this document + before exiting?</b><p> + if you don't save your changes will be lost JOptionPane option pane WARNING_MESSAGE options = { save cancel don't save } pane setOptions set options options pane setInitialValue set initial value options 0 pane putClientProperty put client property quaqua OptionPane option pane destructiveOption destructive option new integer 2 JSheet sheet showSheet show sheet pane unsavedProject unsaved project getComponent get component new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { value = evt getValue get value if value == || value equals cancel { unsavedProject unsaved project setEnabled set enabled app setEnabled set enabled } else if value equals don't save { doExit exit unsavedProject unsaved project setEnabled set enabled } else if value equals save { saveChanges save changes } } } break } default { JOptionPane option pane pane = new JOptionPane option pane <html> +UIManager + manager get OptionPane option pane css + <b>You <b> you have +unsavedProjectsCount+ +unsaved projects count+ documents with unsaved changes + you want to + review these changes before quitting?</b><p> + if you don't review your documents + all your changes will be lost JOptionPane option pane QUESTION_MESSAGE options = { review changes cancel discard changes } pane setOptions set options options pane setInitialValue set initial value options 0 pane putClientProperty put client property quaqua OptionPane option pane destructiveOption destructive option new integer 2 JDialog dialog dialog = pane createDialog create dialog app getComponent get component dialog setVisible set visible value = pane getValue get value if value == || value equals cancel { app setEnabled set enabled } else if value equals discard changes { doExit exit app setEnabled set enabled } else if value equals review changes { unsavedProject unsaved project = documentToBeReviewed document to be reviewed reviewChanges review changes } } } } } saveChanges save changes { if unsavedProject unsaved project getFile get == { JFileChooser chooser fileChooser chooser = unsavedProject unsaved project getSaveChooser get save chooser JSheet sheet showSaveSheet show save sheet fileChooser chooser unsavedProject unsaved project getComponent get component new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { if evt getOption get option == JFileChooser chooser APPROVE_OPTION { = evt getFileChooser get chooser getSelectedFile get selected saveToFile save to } else { unsavedProject unsaved project setEnabled set enabled if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } getApplication get application setEnabled set enabled } } } } else { saveToFile save to unsavedProject unsaved project getFile get } } reviewChanges review changes { if unsavedProject unsaved project isEnabled enabled { oldFocusOwner old focus owner = SwingUtilities swing utilities getWindowAncestor get window ancestor unsavedProject unsaved project getComponent get component getFocusOwner get focus owner unsavedProject unsaved project setEnabled set enabled JOptionPane option pane pane = new JOptionPane option pane <html> +UIManager + manager getString get OptionPane option pane css + <b>Do <b> you want to save changes to this document + before exiting?</b><p> + if you don't save your changes will be lost JOptionPane option pane WARNING_MESSAGE options = { save cancel don't save } pane setOptions set options options pane setInitialValue set initial value options 0 pane putClientProperty put client property quaqua OptionPane option pane destructiveOption destructive option new integer 2 JSheet sheet showSheet show sheet pane unsavedProject unsaved project getComponent get component new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { value = evt getValue get value if value == || value equals cancel { unsavedProject unsaved project setEnabled set enabled getApplication get application setEnabled set enabled } else if value equals don't save { getApplication get application dispose unsavedProject unsaved project reviewNext review next } else if value equals save { saveChangesAndReviewNext save changes and review next } } } } else { getApplication get application setEnabled set enabled out review silently aborted } } saveChangesAndReviewNext save changes and review next { if unsavedProject unsaved project getFile get == { JFileChooser chooser fileChooser chooser = unsavedProject unsaved project getSaveChooser get save chooser JSheet sheet showSaveSheet show save sheet fileChooser chooser unsavedProject unsaved project getComponent get component new SheetListener sheet listener { optionSelected option selected SheetEvent sheet event evt { if evt getOption get option == JFileChooser chooser APPROVE_OPTION { = evt getFileChooser get chooser getSelectedFile get selected saveToFileAndReviewNext save to and review next } else { unsavedProject unsaved project setEnabled set enabled if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } getApplication get application setEnabled set enabled } } } } else { saveToFileAndReviewNext save to and review next unsavedProject unsaved project getFile get } } reviewNext review next { unsavedProjectsCount unsaved projects count = 0 project documentToBeReviewed document to be reviewed = for project getApplication get application projects { if hasUnsavedChanges has unsaved changes { if isEnabled enabled { documentToBeReviewed document to be reviewed = } unsavedProjectsCount++ unsaved projects count++ } } if unsavedProjectsCount unsaved projects count == 0 { doExit exit } else if documentToBeReviewed document to be reviewed != { unsavedProject unsaved project = documentToBeReviewed document to be reviewed reviewChanges review changes } else { getApplication get application setEnabled set enabled } } saveToFile save to { unsavedProject unsaved project execute new worker { construct { try { unsavedProject unsaved project write } catch IOException { } } finished value { fileSaved saved unsavedProject unsaved project value } } } saveToFileAndReviewNext save to and review next { unsavedProject unsaved project execute new worker { construct { try { unsavedProject unsaved project write } catch IOException { } } finished value { fileSavedAndReviewNext saved and review next unsavedProject unsaved project value } } } fileSaved saved project unsavedProject unsaved project value { if value == { unsavedProject unsaved project setFile set doExit exit } else { JSheet sheet showMessageSheet show message sheet unsavedProject unsaved project getComponent get component <html> +UIManager + manager getString get OptionPane option pane css + <b>Couldn't <b> couldn't save to the \ +file+ \ <p> + reason +value JOptionPane option pane ERROR_MESSAGE } unsavedProject unsaved project setEnabled set enabled if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } getApplication get application setEnabled set enabled } fileSavedAndReviewNext saved and review next project unsavedProject unsaved project value { if value == { unsavedProject unsaved project setFile set getApplication get application dispose unsavedProject unsaved project reviewNext review next } else { JSheet sheet showMessageSheet show message sheet unsavedProject unsaved project getComponent get component <html> +UIManager + manager getString get OptionPane option pane css + <b>Couldn't <b> couldn't save to the \ +file+ \ <p> + reason +value JOptionPane option pane ERROR_MESSAGE } unsavedProject unsaved project setEnabled set enabled if oldFocusOwner old focus owner != { oldFocusOwner old focus owner requestFocus request focus } getApplication get application setEnabled set enabled } doExit exit { getApplication get application stop exit 0 } } 