org jhotdraw draw import awt * import awt geom * import awt event * import javax swing * import util * import org jhotdraw app action actions DelegationSelectionTool delegation selection tool SelectionTool selection tool { private Collection<Action> collection< action> drawingActions drawing actions private Collection<Action> collection< action> selectionActions selection actions private javax swing timer popupTimer popup timer private JPopupMenu popup menu popupMenu popup menu DelegationSelectionTool delegation selection tool { this new LinkedList<Action> linked list< action> new LinkedList<Action> linked list< action> } DelegationSelectionTool delegation selection tool Collection<Action> collection< action> drawingActions drawing actions Collection<Action> collection< action> selectionActions selection actions { this drawingActions drawing actions = drawingActions drawing actions this selectionActions selection actions = selectionActions selection actions } setDrawingActions set drawing actions Collection<Action> collection< action> drawingActions drawing actions { this drawingActions drawing actions = drawingActions drawing actions } setFigureActions set figure actions Collection<Action> collection< action> selectionActions selection actions { this selectionActions selection actions = selectionActions selection actions } mousePressed mouse pressed MouseEvent mouse event evt { if popupTimer popup timer != { popupTimer popup timer stop popupTimer popup timer = } if evt isPopupTrigger popup trigger { handlePopupMenu handle popup menu evt } else { super mousePressed mouse pressed evt popupTimer popup timer = new javax swing timer 1000 new ActionListener action listener { actionPerformed action performed ActionEvent action event aevt { handlePopupMenu handle popup menu evt popupTimer popup timer = } } popupTimer popup timer setRepeats set repeats popupTimer popup timer start } } mouseReleased mouse released MouseEvent mouse event evt { if popupTimer popup timer != { popupTimer popup timer stop popupTimer popup timer = } super mouseReleased mouse released evt if evt isPopupTrigger popup trigger { handlePopupMenu handle popup menu evt } } mouseDragged mouse dragged MouseEvent mouse event evt { if popupTimer popup timer != { popupTimer popup timer stop popupTimer popup timer = } if popupMenu popup menu == || ! popupMenu popup menu isVisible visible { super mouseDragged mouse dragged evt } } mouseClicked mouse clicked MouseEvent mouse event evt { super mouseClicked mouse clicked evt if evt getClickCount get click count == 2 { handleDoubleClick handle click evt } } handlePopupMenu handle popup menu MouseEvent mouse event evt { point = new point evt getX get evt getY get figure figure = getView get view findFigure find figure if figure != || drawingActions drawing actions size > 0 { showPopupMenu show popup menu figure evt getComponent get component } else { popupMenu popup menu = } } showPopupMenu show popup menu figure figure point component { JPopupMenu popup menu menu = new JPopupMenu popup menu popupMenu popup menu = menu JMenu menu submenu = submenuName submenu = LinkedList<Action> linked list< action> popupActions popup actions = new LinkedList<Action> linked list< action> if figure != { LinkedList<Action> linked list< action> figureActions figure actions = new LinkedList<Action> linked list< action> figure getActions get actions viewToDrawing view to drawing if popupActions popup actions size != 0 figureActions figure actions size != 0 { popupActions popup actions add } popupActions popup actions addAll add all figureActions figure actions if popupActions popup actions size != 0 selectionActions selection actions size != 0 { popupActions popup actions add } popupActions popup actions addAll add all selectionActions selection actions } if popupActions popup actions size != 0 drawingActions drawing actions size != 0 { popupActions popup actions add } popupActions popup actions addAll add all drawingActions drawing actions HashMap<Object hash map< ButtonGroup> button group> buttonGroups button groups = new HashMap<Object hash map< ButtonGroup> button group> for action popupActions popup actions { if != getValue get value actions SUBMENU_KEY != { if submenuName submenu == || ! submenuName submenu equals getValue get value actions SUBMENU_KEY { submenuName submenu = getValue get value actions SUBMENU_KEY submenu = new JMenu menu submenuName submenu menu add submenu } } else { submenuName submenu = submenu = } if == { if submenu != submenu addSeparator add separator else menu addSeparator add separator } else { AbstractButton button button if getValue get value actions BUTTON_GROUP_KEY != { ButtonGroup button group bg = buttonGroups button groups get getValue get value actions BUTTON_GROUP_KEY if bg == { bg = new ButtonGroup button group buttonGroups button groups put getValue get value actions BUTTON_GROUP_KEY bg } button = new JRadioButtonMenuItem radio button menu item bg add button button setSelected set selected getValue get value actions SELECTED_KEY == TRUE } else if getValue get value actions SELECTED_KEY != { button = new JCheckBoxMenuItem check box menu item button setSelected set selected getValue get value actions SELECTED_KEY == TRUE } else { button = new JMenuItem menu item } if submenu != submenu add button else menu add button } } menu show } handleDoubleClick handle click MouseEvent mouse event evt { DrawingView drawing view = getView get view point pos = new point evt getX get evt getY get handle handle = findHandle find handle pos if handle != { handle trackDoubleClick track click pos evt getModifiersEx get modifiers } else { Point2D point2 = viewToDrawing view to drawing pos figure outerFigure outer figure = getView get view findFigure find figure pos figure figure = outerFigure outer figure if figure != { tool figureTool figure tool = figure getTool get tool if figureTool figure tool == { figure = getDrawing get drawing findFigureInside find figure inside if figure != { figureTool figure tool = figure getTool get tool } } if figureTool figure tool != { setTracker set tracker figureTool figure tool figureTool figure tool mousePressed mouse pressed evt } else { if outerFigure outer figure handleMouseClick handle mouse click evt getView get view { clearSelection clear selection addToSelection add to selection outerFigure outer figure } else { clearSelection clear selection addToSelection add to selection outerFigure outer figure setHandleDetailLevel set handle detail level getHandleDetailLevel get handle detail level + 1 } } } } } } 