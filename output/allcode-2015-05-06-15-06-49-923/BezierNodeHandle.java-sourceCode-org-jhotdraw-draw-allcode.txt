org jhotdraw draw import org jhotdraw util * import org jhotdraw undo * import awt * import awt event * import awt geom * import util * import org jhotdraw geom * beziernodehandle bezier node handle abstracthandle handle { index private compositeedit composite edit edit private bezierpath bezier path node oldnode old node beziernodehandle bezier node handle bezierfigure bezier figure owner index { super owner this index = index } draw graphics2d graphics2 d g { bezierfigure bezier figure f = getbezierfigure get bezier figure if f getpointcount get point count > index { bezierpath bezier path node v = f getnode get node index if v mask == 0 { drawrectangle draw rectangle g color black color white } else if v mask == bezierpath bezier path C1_MASK || v mask == bezierpath bezier path C2_MASK || !f isclosed is closed v mask == bezierpath bezier path C1_MASK | bezierpath bezier path C2_MASK index == 0 || index == f getnodecount get node count 1 { drawdiamond draw diamond g color black color white } else { drawcircle draw circle g color black color white } } } bezierfigure bezier figure getbezierfigure get bezier figure { bezierfigure bezier figure getowner get owner } point getlocation get location { getbezierfigure get bezier figure getpointcount get point count > index ? view drawingtoview drawing to view getbezierfigure get bezier figure getpoint get point index 0 new point 10 10 } rectangle basicgetbounds basic get bounds { rectangle r = new rectangle getlocation get location r grow gethandlesize get handlesize / 2 gethandlesize get handlesize / 2 r } trackstart track start point anchor modifiersex modifiers ex { bezierfigure bezier figure figure = getbezierfigure get bezier figure view getdrawing get drawing fireundoableedithappened fire undoable edit happened edit = new compositeedit composite edit punkt verschieben point2d point2 d location = view getconstrainer get constrainer constrainpoint constrain point view viewtodrawing view to drawing getlocation get location point2d point2 d p = view getconstrainer get constrainer constrainpoint constrain point view viewtodrawing view to drawing anchor oldnode old node = figure getnode get node index firehandlerequestsecondaryhandles fire handle request secondary handles } trackstep track step point anchor point modifiersex modifiers ex { bezierfigure bezier figure figure = getbezierfigure get bezier figure figure willchange will change point2d point2 d p = view getconstrainer get constrainer constrainpoint constrain point view viewtodrawing view to drawing bezierpath bezier path node n = figure getnode get node index fireareainvalidated fire area invalidated n n moveto move to p fireareainvalidated fire area invalidated n figure basicsetnode basic set node index n figure changed } private fireareainvalidated fire area invalidated bezierpath bezier path node v { rectangle2d rectangle2 d dr = new rectangle2d rectangle2 d v x 0 v y 0 0 0 for i=1 i < 3 i++ { dr add v x i v y i } rectangle vr = view drawingtoview drawing to view dr vr grow gethandlesize get handlesize gethandlesize get handlesize fireareainvalidated fire area invalidated vr } trackend track end point anchor point modifiersex modifiers ex { bezierfigure bezier figure f = getbezierfigure get bezier figure if modifiersex modifiers ex inputevent input event META_DOWN_MASK | inputevent input event CTRL_DOWN_MASK != 0 modifiersex modifiers ex inputevent input event BUTTON2_DOWN_MASK == 0 { f willchange will change bezierpath bezier path node v = f getnode get node index if index > 0 index < f getnodecount get node count || f isclosed is closed { v mask = v mask + 3 % 4 } else if index == 0 { v mask = v mask bezierpath bezier path C2_MASK == 0 ? bezierpath bezier path C2_MASK 0 } else { v mask = v mask bezierpath bezier path C1_MASK == 0 ? bezierpath bezier path C1_MASK 0 } f basicsetnode basic set node index v f changed firehandlerequestsecondaryhandles fire handle request secondary handles } view getdrawing get drawing fireundoableedithappened fire undoable edit happened new beziernodeedit bezier node edit f index oldnode old node f getnode get node index view getdrawing get drawing fireundoableedithappened fire undoable edit happened edit } @override @ override iscombinablewith is combinable with handle h { } trackdoubleclick track click point p modifiersex modifiers ex { bezierfigure bezier figure f = getbezierfigure get bezier figure if f getnodecount get node count > 2 modifiersex modifiers ex inputevent input event META_DOWN_MASK | inputevent input event CTRL_DOWN_MASK | inputevent input event ALT_DOWN_MASK == 0 { rectangle invalidatedarea invalidated area = getdrawbounds get draw bounds f willchange will change f basicremovenode basic remove node index f changed firehandlerequestremove fire handle request remove invalidatedarea invalidated area } } collection<handle> collection< handle> createsecondaryhandles create secondary handles { bezierfigure bezier figure f = getbezierfigure get bezier figure linkedlist<handle> linked list< handle> list = new linkedlist<handle> linked list< handle> bezierpath bezier path node v = f getnode get node index if v mask bezierpath bezier path C1_MASK != 0 index != 0 || f isclosed is closed { list add new beziercontrolpointhandle bezier control point handle f index 1 } if v mask bezierpath bezier path C2_MASK != 0 index < f getnodecount get node count 1 || f isclosed is closed { list add new beziercontrolpointhandle bezier control point handle f index 2 } if index > 0 || f isclosed is closed { i = index == 0 ? f getnodecount get node count 1 index 1 v = f getnode get node i if v mask bezierpath bezier path C2_MASK != 0 { list add new beziercontrolpointhandle bezier control point handle f i 2 } } if index < f getnodecount get node count 2 || f isclosed is closed { i = index == f getnodecount get node count 1 ? 0 index + 1 v = f getnode get node i if v mask bezierpath bezier path C1_MASK != 0 { list add new beziercontrolpointhandle bezier control point handle f i 1 } } list } } 