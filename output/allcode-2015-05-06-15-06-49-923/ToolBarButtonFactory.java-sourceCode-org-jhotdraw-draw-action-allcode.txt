org jhotdraw draw action import org jhotdraw util * import awt * import awt event * import beans * import text * import util * import javax swing * import javax swing text * import org jhotdraw app action * import org jhotdraw draw attributekeys attribute keys * import org jhotdraw geom * import org jhotdraw draw * toolbarbuttonfactory tool bar button factory { map<string map< color> DEFAULT_COLORS { linkedhashmap<string linked hash map< color> m = new linkedhashmap<string linked hash map< color> m put cayenne new color 128 0 0 m put asparagus new color 128 128 0 m put clover new color 0 128 0 m put teal new color 0 128 128 m put midnight new color 0 0 128 m put plum new color 128 0 128 m put tin new color 127 127 127 m put nickel new color 128 128 128 m put maraschino new color 255 0 0 m put lemon new color 255 255 0 m put spring new color 0 255 0 m put turquoise new color 0 255 255 m put blueberry new color 0 0 255 m put magenta new color 255 0 255 m put steel new color 102 102 102 m put aluminium new color 153 153 153 m put salmon new color 255 102 102 m put banana new color 255 255 102 m put flora new color 102 255 102 m put ice new color 102 255 255 m put orchid new color 102 102 255 m put bubblegum new color 255 102 255 m put iron new color 76 76 76 m put magnesium new color 179 179 179 m put mocha new color 128 64 0 m put fern new color 64 128 0 m put moss new color 0 128 64 m put ocean new color 0 64 128 m put eggplant new color 64 0 128 m put maroon new color 128 0 64 m put tungsten new color 51 51 51 m put silver new color 204 204 204 m put tangerine new color 255 128 0 m put lime new color 128 255 0 m put sea foam new color 0 255 128 m put aqua new color 0 128 255 m put grape new color 128 0 255 m put strawberry new color 255 0 128 m put new color 25 25 25 m put mercury new color 230 230 230 m put cantaloupe new color 255 204 102 m put honeydew new color 204 255 102 m put spindrift new color 102 255 204 m put sky new color 102 204 255 m put lavender new color 204 102 255 m put carnation new color 255 111 207 m put licorice new color 0 0 0 m put snow new color 255 255 255 m put transparent DEFAULT_COLORS = collections unmodifiablemap unmodifiable map m } private toolbuttonlistener tool button listener implements itemlistener item listener { private tool tool private drawingeditor drawing editor editor toolbuttonlistener tool button listener tool t drawingeditor drawing editor editor { this tool = t this editor = editor } itemstatechanged item state changed itemevent item event evt { if evt getstatechange get state change == itemevent item event selected s e l e c t e d { editor settool set tool tool } } } private toolbarbuttonfactory tool bar button factory { } collection<action> collection< action> createdrawingactions create drawing actions drawingeditor drawing editor editor { linkedlist<action> linked list< action> a = new linkedlist<action> linked list< action> a add new cutaction cut action a add new copyaction copy action a add new pasteaction paste action a add new selectallaction select all action a add new selectsameaction select same action editor a } collection<action> collection< action> createselectionactions create selection actions drawingeditor drawing editor editor { linkedlist<action> linked list< action> a = new linkedlist<action> linked list< action> a add new duplicateaction duplicate action a add a add new groupaction group action editor a add new ungroupaction ungroup action editor a add a add new movetofrontaction move to front action editor a add new movetobackaction move to back action editor a } addselectiontoolto add selection tool to jtoolbar j tool bar tb drawingeditor drawing editor editor { addselectiontoolto add selection tool to tb editor createdrawingactions create drawing actions editor createselectionactions create selection actions editor } addselectiontoolto add selection tool to jtoolbar j tool bar tb drawingeditor drawing editor editor collection<action> collection< action> drawingactions drawing actions collection<action> collection< action> selectionactions selection actions { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jtogglebutton j toggle button t tool tool hashmap<string hash map< object> attributes buttongroup button group group if tb getclientproperty get client property toolbuttongroup tool button group instanceof buttongroup button group { group = buttongroup button group tb getclientproperty get client property toolbuttongroup tool button group } else { group = new buttongroup button group tb putclientproperty put client property toolbuttongroup tool button group group } tool selectiontool selection tool = new delegationselectiontool delegation selection tool drawingactions drawing actions selectionactions selection actions editor settool set tool selectiontool selection tool t = new jtogglebutton j toggle button jtogglebutton j toggle button defaulttoolbutton default tool button = t toollistener tool listener toolhandler tool handler if tb getclientproperty get client property toolhandler tool handler instanceof toollistener tool listener { toolhandler tool handler = toollistener tool listener tb getclientproperty get client property toolhandler tool handler } else { toolhandler tool handler = new toollistener tool listener { toolstarted tool started toolevent tool event event { } tooldone tool done toolevent tool event event { defaulttoolbutton default tool button setselected set selected } areainvalidated area invalidated toolevent tool event e { } } tb putclientproperty put client property toolhandler tool handler toolhandler tool handler } labels configuretoolbarbutton configure tool bar button t selectiontool selection tool t setselected set selected t additemlistener add item listener new toolbuttonlistener tool button listener selectiontool selection tool editor t setfocusable set focusable group add t tb add t } addtoolto add tool to jtoolbar j tool bar tb drawingeditor drawing editor editor tool tool labelkey label key resourcebundleutil resource bundle util labels { buttongroup button group group = buttongroup button group tb getclientproperty get client property toolbuttongroup tool button group toollistener tool listener toolhandler tool handler = toollistener tool listener tb getclientproperty get client property toolhandler tool handler jtogglebutton j toggle button t = new jtogglebutton j toggle button labels configuretoolbarbutton configure tool bar button t labelkey label key t additemlistener add item listener new toolbuttonlistener tool button listener tool editor t setfocusable set focusable tool addtoollistener add tool listener toolhandler tool handler group add t tb add t } addzoombuttonsto add zoom buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { bar add createzoombutton create zoom button editor } abstractbutton button createzoombutton create zoom button drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button zoompopupbutton zoom popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button zoompopupbutton zoom popup button viewzoom view zoom zoompopupbutton zoom popup button setfocusable set focusable if editor getdrawingviews get drawing views size == 0 { zoompopupbutton zoom popup button settext set text 100 % } else { zoompopupbutton zoom popup button settext set text editor getdrawingviews get drawing views iterator next getscalefactor get scale factor * 100 + % } editor addpropertychangelistener add property change listener new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { if evt getpropertyname get property name == focusedview focused view { if evt getnewvalue get new value == { zoompopupbutton zoom popup button settext set text 100 % } else { zoompopupbutton zoom popup button settext set text editor getfocusedview get focused view getscalefactor get scale factor * 100 + % } } } } factors = {16 8 5 4 3 2 1 5 1 25 1 0 75 0 5 0 25 0 10} for i=0 i < factors length i++ { zoompopupbutton zoom popup button add new zoomeditoraction zoom editor action editor factors i zoompopupbutton zoom popup button { actionperformed action performed awt event actionevent action event e { super actionperformed action performed e zoompopupbutton zoom popup button settext set text editor getview get view getscalefactor get scale factor * 100 + % } } } zoompopupbutton zoom popup button setfocusable set focusable zoompopupbutton zoom popup button } abstractbutton button createzoombutton create zoom button drawingview drawing view view { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button zoompopupbutton zoom popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button zoompopupbutton zoom popup button viewzoom view zoom zoompopupbutton zoom popup button setfocusable set focusable zoompopupbutton zoom popup button settext set text view getscalefactor get scale factor * 100 + % view addpropertychangelistener add property change listener new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { if evt getpropertyname get property name == scalefactor scale factor { zoompopupbutton zoom popup button settext set text view getscalefactor get scale factor * 100 + % } } } factors = {5 4 3 2 1 5 1 25 1 0 75 0 5 0 25 0 10} for i=0 i < factors length i++ { zoompopupbutton zoom popup button add new zoomaction zoom action view factors i zoompopupbutton zoom popup button { actionperformed action performed awt event actionevent action event e { super actionperformed action performed e zoompopupbutton zoom popup button settext set text view getscalefactor get scale factor * 100 + % } } } zoompopupbutton zoom popup button setfocusable set focusable zoompopupbutton zoom popup button } addattributesbuttonsto add attributes buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jbutton j button b b = bar add new pickattributesaction pick attributes action editor b setfocusable set focusable b = bar add new applyattributesaction apply attributes action editor b setfocusable set focusable bar addseparator add separator addcolorbuttonsto add color buttons to bar editor bar addseparator add separator addstrokebuttonsto add stroke buttons to bar editor bar addseparator add separator addfontbuttonsto add font buttons to bar editor } addcolorbuttonsto add color buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels addcolorbuttonto add color button to bar editor STROKE_COLOR DEFAULT_COLORS 8 attributestrokecolor attribute stroke color labels addcolorbuttonto add color button to bar editor FILL_COLOR DEFAULT_COLORS 8 attributefillcolor attribute fill color labels addcolorbuttonto add color button to bar editor TEXT_COLOR DEFAULT_COLORS 8 attributetextcolor attribute text color labels } addcolorbuttonto add color button to jtoolbar j tool bar bar drawingeditor drawing editor editor attributekey attribute key attributekey attribute key map<string map< color> colormap color map columncount column count labelkey label key resourcebundleutil resource bundle util labels { jpopupbutton j popup button popupbutton popup button = new jpopupbutton j popup button popupbutton popup button setaction set action new defaultattributeaction default attribute action editor attributekey attribute key new rectangle 0 0 22 22 popupbutton popup button setcolumncount set column count columncount column count for map entry<string entry< color> entry colormap color map entryset entry set { attributeaction attribute action a popupbutton popup button add a= new attributeaction attribute action editor attributekey attribute key entry getvalue get value new coloricon color icon entry getvalue get value a putvalue put value action SHORT_DESCRIPTION entry getkey get key } imageicon image icon choosericon chooser icon = new imageicon image icon toolbarbuttonfactory tool bar button factory getresource get resource /org/jhotdraw/draw/action/images/showcolorchooser /org/jhotdraw/draw/action/images/show color chooser png popupbutton popup button add new colorchooseraction color chooser action editor attributekey attribute key choosericon chooser icon labels configuretoolbarbutton configure tool bar button popupbutton popup button labelkey label key popupbutton popup button seticon set icon new colorattributeicon color attribute icon editor attributekey attribute key labels getimageicon get image icon labelkey label key toolbarbuttonfactory tool bar button factory getimage get image popupbutton popup button setfocusable set focusable editor addpropertychangelistener add property change listener new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { popupbutton popup button repaint } } bar add popupbutton popup button } addstrokebuttonsto add stroke buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { addstrokedecorationbuttonto add stroke decoration button to bar editor addstrokewidthbuttonto add stroke width button to bar editor addstrokedashesbuttonto add stroke dashes button to bar editor addstroketypebuttonto add stroke type button to bar editor addstrokeplacementbuttonto add stroke placement button to bar editor } addstrokewidthbuttonto add stroke width button to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button strokewidthpopupbutton stroke width popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button strokewidthpopupbutton stroke width popup button attributestrokewidth attribute stroke width strokewidthpopupbutton stroke width popup button setfocusable set focusable widths = {0 5d 1d 2d 3d 5d 7d 9d 11d} numberformat number format formatter = numberformat number format getinstance get instance if formatter instanceof decimalformat decimal format { decimalformat decimal format formatter setmaximumfractiondigits set maximum fraction digits 1 decimalformat decimal format formatter setminimumfractiondigits set minimum fraction digits 0 } for i=0 i < widths length i++ { label = tostring to widths i strokewidthpopupbutton stroke width popup button add new attributeaction attribute action editor STROKE_WIDTH new widths i label new strokeicon stroke icon new basicstroke basic stroke float widths i basicstroke basic stroke CAP_BUTT basicstroke basic stroke JOIN_BEVEL } bar add strokewidthpopupbutton stroke width popup button } addstrokedecorationbuttonto add stroke decoration button to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button strokedecorationpopupbutton stroke decoration popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button strokedecorationpopupbutton stroke decoration popup button attributestrokedecoration attribute stroke decoration strokedecorationpopupbutton stroke decoration popup button setfocusable set focusable strokedecorationpopupbutton stroke decoration popup button setcolumncount set column count 2 linedecoration line decoration decorations = { new arrowtip arrow tip 0 35 12 11 3 new arrowtip arrow tip 0 35 13 7 } for i=0 i < decorations length i++ { strokedecorationpopupbutton stroke decoration popup button add new attributeaction attribute action editor START_DECORATION decorations i new linedecorationicon line decoration icon decorations i strokedecorationpopupbutton stroke decoration popup button add new attributeaction attribute action editor END_DECORATION decorations i new linedecorationicon line decoration icon decorations i } bar add strokedecorationpopupbutton stroke decoration popup button } addstrokedashesbuttonto add stroke dashes button to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button strokedashespopupbutton stroke dashes popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button strokedashespopupbutton stroke dashes popup button attributestrokedashes attribute stroke dashes strokedashespopupbutton stroke dashes popup button setfocusable set focusable dashes = { {4d 4d} {2d 2d} {4d 2d} {2d 4d} {8d 2d} {6d 2d 2d 2d} } for i=0 i < dashes length i++ { float fdashes if dashes i == { fdashes = } else { fdashes = new float dashes i length for j = 0 j < dashes i length j++ { fdashes j = float dashes i j } } strokedashespopupbutton stroke dashes popup button add new attributeaction attribute action editor STROKE_DASHES dashes i new strokeicon stroke icon new basicstroke basic stroke 2f basicstroke basic stroke CAP_BUTT basicstroke basic stroke JOIN_BEVEL 10f fdashes 0 } bar add strokedashespopupbutton stroke dashes popup button } addstroketypebuttonto add stroke type button to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button stroketypepopupbutton stroke type popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button stroketypepopupbutton stroke type popup button attributestroketype attribute stroke type stroketypepopupbutton stroke type popup button setfocusable set focusable stroketypepopupbutton stroke type popup button add new attributeaction attribute action editor STROKE_TYPE attributekeys attribute keys stroketype stroke type basic b a s i c labels getstring get attributestroketypebasic attribute stroke type basic new strokeicon stroke icon new basicstroke basic stroke 1 basicstroke basic stroke CAP_BUTT basicstroke basic stroke JOIN_BEVEL hashmap<attributekey hash map< attribute key object> attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_TYPE attributekeys attribute keys stroketype stroke type double d o u b l e attr put STROKE_INNER_WIDTH_FACTOR 2d stroketypepopupbutton stroke type popup button add new attributeaction attribute action editor attr labels getstring get attributestroketypedouble attribute stroke type new strokeicon stroke icon new doublestroke stroke 2 1 attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_TYPE attributekeys attribute keys stroketype stroke type double d o u b l e attr put STROKE_INNER_WIDTH_FACTOR 3d stroketypepopupbutton stroke type popup button add new attributeaction attribute action editor attr labels getstring get attributestroketypedouble attribute stroke type new strokeicon stroke icon new doublestroke stroke 3 1 attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_TYPE attributekeys attribute keys stroketype stroke type double d o u b l e attr put STROKE_INNER_WIDTH_FACTOR 4d stroketypepopupbutton stroke type popup button add new attributeaction attribute action editor attr labels getstring get attributestroketypedouble attribute stroke type new strokeicon stroke icon new doublestroke stroke 4 1 bar add stroketypepopupbutton stroke type popup button } addstrokeplacementbuttonto add stroke placement button to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button strokeplacementpopupbutton stroke placement popup button = new jpopupbutton j popup button labels configuretoolbarbutton configure tool bar button strokeplacementpopupbutton stroke placement popup button attributestrokeplacement attribute stroke placement strokeplacementpopupbutton stroke placement popup button setfocusable set focusable hashmap<attributekey hash map< attribute key object> attr attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement center c e n t e r attr put FILL_UNDER_STROKE attributekeys attribute keys underfill center c e n t e r strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementcenter attribute stroke placement center attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement inside i n sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill center c e n t e r strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementinside attribute stroke placement inside attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement outside o u t sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill center c e n t e r strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementoutside attribute stroke placement outside attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement center c e n t e r attr put FILL_UNDER_STROKE attributekeys attribute keys underfill full f u l l strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementcenterfilled attribute stroke placement center filled attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement inside i n sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill full f u l l strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementinsidefilled attribute stroke placement inside filled attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement outside o u t sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill full f u l l strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementoutsidefilled attribute stroke placement outside filled attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement center c e n t e r attr put FILL_UNDER_STROKE attributekeys attribute keys underfill none n o n e strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementcenterunfilled attribute stroke placement center unfilled attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement inside i n sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill none n o n e strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementinsideunfilled attribute stroke placement inside unfilled attr = new hashmap<attributekey hash map< attribute key object> attr put STROKE_PLACEMENT attributekeys attribute keys strokeplacement stroke placement outside o u t sid e attr put FILL_UNDER_STROKE attributekeys attribute keys underfill none n o n e strokeplacementpopupbutton stroke placement popup button add new attributeaction attribute action editor attr labels getstring get attributestrokeplacementoutsideunfilled attribute stroke placement outside unfilled bar add strokeplacementpopupbutton stroke placement popup button } addfontbuttonsto add font buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jpopupbutton j popup button fontpopupbutton font popup button jbutton j button boldtogglebutton bold toggle button jbutton j button italictogglebutton italic toggle button jbutton j button underlinetogglebutton underline toggle button fontpopupbutton font popup button = new jpopupbutton j popup button boldtogglebutton bold toggle button = new jbutton j button italictogglebutton italic toggle button = new jbutton j button underlinetogglebutton underline toggle button = new jbutton j button labels configuretoolbarbutton configure tool bar button fontpopupbutton font popup button attributefont attribute font fontpopupbutton font popup button setfocusable set focusable font allfonts all fonts = graphicsenvironment graphics environment getlocalgraphicsenvironment get local graphics environment getallfonts get all fonts hashset<string> hash set< string> fontexclusionlist font exclusion list = new hashset<string> hash set< string> arrays aslist as list new { #gungseo # gung seo #headlinea # head line a #pcmyungjo # p c myungjo #pilgi # pil gi al bayan apple ligothic gothic apple lisung sung applemyungjo apple myungjo arial hebrew ayuthaya baghdad biaukai biau kai charcoal cy c y corsiva hebrew decotype deco type naskh devanagari mt m t fang song gb18030 g b18030 bitmap geeza pro geezah geneva cy c y gujarati mt m t gurmukhi mt m t hei helvetica cy c y hiragino kaku gothic std hiragino maru gothic pro hiragino mincho pro hiragino kaku gothic pro inaimathi inai mathi kai krungthep kufistandardgk kufi standard g k lihei hei pro lisong song pro mshtakan monaco cy c y nadeem new peninim mt m t osaka plantagenet cherokee raanana stfangsong s t fangsong stheiti s t heiti stkaiti s t kaiti stsong s t song sathu silom thonburi times cy c y arial unicode ms m s batang estrangelo edessa gautami kartika latha lucida sans unicode mangal marlett ms m s mincho ms m s outlook mv m v boli ocr o c r b 10 bt b t raavi shruti simsun sim sun sylfaen symbol tunga vrinda wingdings wingdings 2 wingdings 3 zwadobef z w adobe f } linkedlist<font> linked list< font> fontlist font list = new linkedlist<font> linked list< font> for i=0 i < allfonts all fonts length i++ { if ! fontexclusionlist font exclusion list contains allfonts all fonts i getfamily get family { fontlist font list add allfonts all fonts i } } allfonts all fonts = new font fontlist font list size allfonts all fonts = font fontlist font list toarray to allfonts all fonts arrays sort allfonts all fonts new comparator<font> comparator< font> { compare font f1 font f2 { result = f1 getfamily get family compareto compare to f2 getfamily get family if result == 0 { result = f1 getfontname get font name compareto compare to f2 getfontname get font name } result } } linkedlist<font> linked list< font> fontfamilies font families = new linkedlist<font> linked list< font> jmenu j menu submenu = for i=0 i < allfonts all fonts length i++ { if submenu != { if ! allfonts all fonts i getfamily get family equals allfonts all fonts i 1 getfamily get family { submenu = } } if submenu == { if i < allfonts all fonts length 2 allfonts all fonts i getfamily get family equals allfonts all fonts i + 1 getfamily get family { fontfamilies font families add allfonts all fonts i submenu = new jmenu j menu allfonts all fonts i getfamily get family fontpopupbutton font popup button add submenu } } action action = new attributeaction attribute action editor FONT_FACE allfonts all fonts i submenu == ? allfonts all fonts i getfamily get family allfonts all fonts i getfontname get font name new stylededitorkit styled editor kit fontfamilyaction font family action allfonts all fonts i getfontname get font name allfonts all fonts i getfamily get family if submenu == { fontfamilies font families add allfonts all fonts i fontpopupbutton font popup button add action } else { jmenuitem j menu item item = submenu add action } } fontpopupbutton font popup button setcolumncount set column count math max 1 fontfamilies font families size /32 labels configuretoolbarbutton configure tool bar button boldtogglebutton bold toggle button attributefontbold attribute font bold boldtogglebutton bold toggle button setfocusable set focusable labels configuretoolbarbutton configure tool bar button italictogglebutton italic toggle button attributefontitalic attribute font italic italictogglebutton italic toggle button setfocusable set focusable labels configuretoolbarbutton configure tool bar button underlinetogglebutton underline toggle button attributefontunderline attribute font underline underlinetogglebutton underline toggle button setfocusable set focusable boldtogglebutton bold toggle button addactionlistener add action listener new attributetoggler attribute toggler editor FONT_BOLD true t r u e false f a l s e new stylededitorkit styled editor kit boldaction bold action italictogglebutton italic toggle button addactionlistener add action listener new attributetoggler attribute toggler editor FONT_ITALIC true t r u e false f a l s e new stylededitorkit styled editor kit italicaction italic action underlinetogglebutton underline toggle button addactionlistener add action listener new attributetoggler attribute toggler editor FONT_UNDERLINED true t r u e false f a l s e new stylededitorkit styled editor kit underlineaction underline action bar add fontpopupbutton font popup button setfocusable set focusable bar add boldtogglebutton bold toggle button setfocusable set focusable bar add italictogglebutton italic toggle button setfocusable set focusable bar add underlinetogglebutton underline toggle button setfocusable set focusable } addalignmentbuttonsto add alignment buttons to jtoolbar j tool bar bar drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels bar add new alignaction align action west editor setfocusable set focusable bar add new alignaction align action east editor setfocusable set focusable bar add new alignaction align action horizontal editor setfocusable set focusable bar add new alignaction align action north editor setfocusable set focusable bar add new alignaction align action south editor setfocusable set focusable bar add new alignaction align action vertical editor setfocusable set focusable bar addseparator add separator bar add new moveaction move action west editor setfocusable set focusable bar add new moveaction move action east editor setfocusable set focusable bar add new moveaction move action north editor setfocusable set focusable bar add new moveaction move action south editor setfocusable set focusable bar addseparator add separator bar add new movetofrontaction move to front action editor setfocusable set focusable bar add new movetobackaction move to back action editor setfocusable set focusable } abstractbutton button createtogglegridbutton create toggle grid button drawingeditor drawing editor editor { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jtogglebutton j toggle button togglegridbutton toggle grid button togglegridbutton toggle grid button = new jtogglebutton j toggle button labels configuretoolbarbutton configure tool bar button togglegridbutton toggle grid button aligngrid align grid togglegridbutton toggle grid button setfocusable set focusable togglegridbutton toggle grid button additemlistener add item listener new itemlistener item listener { itemstatechanged item state changed itemevent item event event { constrainer c if togglegridbutton toggle grid button isselected is selected { c = new gridconstrainer grid constrainer 10 10 } else { c = new gridconstrainer grid constrainer 1 1 } for drawingview drawing view v editor getdrawingviews get drawing views { v setconstrainer set constrainer c v getcontainer get container repaint } } } togglegridbutton toggle grid button } abstractbutton button createtogglegridbutton create toggle grid button drawingview drawing view view { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw draw labels jtogglebutton j toggle button togglegridbutton toggle grid button togglegridbutton toggle grid button = new jtogglebutton j toggle button labels configuretoolbarbutton configure tool bar button togglegridbutton toggle grid button aligngrid align grid togglegridbutton toggle grid button setfocusable set focusable togglegridbutton toggle grid button additemlistener add item listener new itemlistener item listener { itemstatechanged item state changed itemevent item event event { constrainer c if togglegridbutton toggle grid button isselected is selected { c = new gridconstrainer grid constrainer 10 10 } else { c = new gridconstrainer grid constrainer 1 1 } view setconstrainer set constrainer c view getcontainer get container repaint } } view addpropertychangelistener add property change listener new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { if evt getpropertyname get property name == gridconstrainer grid constrainer { constrainer c = constrainer evt getnewvalue get new value togglegridbutton toggle grid button setselected set selected c isvisible is visible } } } togglegridbutton toggle grid button } } 