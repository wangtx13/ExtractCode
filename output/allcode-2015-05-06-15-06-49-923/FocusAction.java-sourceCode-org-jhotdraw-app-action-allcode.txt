org jhotdraw app action import org jhotdraw util * import beans * import awt * import awt event * import javax swing * import io * import org jhotdraw app project focusaction focus action abstractaction action { = focus private project project focusaction focus action project project { this project = project resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw app labels labels configureaction configure action this setenabled set enabled project != project addpropertychangelistener add property change listener new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw app labels name = evt getpropertyname get property name if name equals { putvalue put value action name n a m e evt getnewvalue get new value == ? labels getstring get unnamedfile unnamed evt getnewvalue get new value getname get name } } } } getvalue get value key { if key == action name n a m e project != { gettitle get title } else { super getvalue get value key } } private gettitle get title { resourcebundleutil resource bundle util labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw app labels title = labels getstring get unnamedfile unnamed if project != { = project getfile get if == { title = labels getstring get unnamedfile unnamed } else { title = getname get name } if project hasunsavedchanges has unsaved changes { title += * } title = labels getformatted get formatted internalframetitle internal frame title title project getapplication get application getname get name project getmultipleopenid get multiple open } title } private jframe j frame getframe get frame { jframe j frame swingutilities swing utilities getwindowancestor get window ancestor project getcomponent get component } private component getrootpanecontainer get root pane container { swingutilities swing utilities getrootpane get root pane project getcomponent get component getparent get parent } actionperformed action performed actionevent action event evt { component rpcontainer rp container = getrootpanecontainer get root pane container if rpcontainer rp container instanceof frame { frame frame = frame rpcontainer rp container frame setextendedstate set extended state frame getextendedstate get extended state ~frame ~ frame iconified i c o n i f i e d frame tofront to front } else if rpcontainer rp container instanceof jinternalframe j internal frame { jinternalframe j internal frame frame = jinternalframe j internal frame rpcontainer rp container frame tofront to front try { frame setselected set selected } catch propertyvetoexception property veto e { } } project getcomponent get component requestfocusinwindow request focus in window } } 