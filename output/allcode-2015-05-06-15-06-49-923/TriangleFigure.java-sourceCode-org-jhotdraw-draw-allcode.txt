org jhotdraw draw import awt * import awt geom * import io * import util * import javax swing * import org jhotdraw draw attributekeys attribute keys * import org jhotdraw geom * trianglefigure triangle figure attributedfigure attributed figure { private rectangle2d rectangle2 d rectangle trianglefigure triangle figure { this 0 0 0 0 } trianglefigure triangle figure orientation direction { this 0 0 0 0 direction } trianglefigure triangle figure x y width height { this x y width height orientation north n o r t h } trianglefigure triangle figure x y width height orientation direction { rectangle = new rectangle2d rectangle2 d x y width height orientation o r i e n t a t i o n set this direction } connector findconnector find connector point2d point2 d p connectionfigure connection figure prototype { new choptriangleconnector chop triangle connector this } connector findcompatibleconnector find compatible connector connector c isstartconnector is start connector { new choptriangleconnector chop triangle connector this } rectangle2d rectangle2 d getbounds get bounds { rectangle2d rectangle2 d bounds = rectangle2d rectangle2 d rectangle clone bounds } drawfill draw fill graphics2d graphics2 d g { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone shape triangle = getbezierpath get bezier path grow = attributekeys attribute keys getperpendicularfillgrowth get perpendicular fill growth this if grow != 0d { growstroke grow stroke gs = new growstroke grow stroke float grow float attributekeys attribute keys getstroketotalwidth get stroke total width this * STROKE_MITER_LIMIT_FACTOR get this triangle = gs createstrokedshape create stroked shape triangle } g fill triangle } drawstroke draw stroke graphics2d graphics2 d g { shape triangle = getbezierpath get bezier path grow = attributekeys attribute keys getperpendiculardrawgrowth get perpendicular draw growth this if grow != 0d { growstroke grow stroke gs = new growstroke grow stroke float grow float attributekeys attribute keys getstroketotalwidth get stroke total width this * STROKE_MITER_LIMIT_FACTOR get this triangle = gs createstrokedshape create stroked shape triangle } g draw triangle } collection<handle> collection< handle> createhandles create handles detaillevel detail level { linkedlist<handle> linked list< handle> handles = linkedlist<handle> linked list< handle> super createhandles create handles detaillevel detail level if detaillevel detail level == 0 { handles add new trianglerotationhandler triangle rotation handler this } handles } bezierpath bezier path getbezierpath get bezier path { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone bezierpath bezier path triangle = new bezierpath bezier path switch orientation o r i e n t a t i o n get this { case north n o r t h default triangle moveto move to float r x + r width / 2 float r y triangle lineto line to float r x + r width float r y + r height triangle lineto line to float r x float r y + r height break case NORTH_EAST triangle moveto move to float r x float r y triangle lineto line to float r x + r width float r y triangle lineto line to float r x + r width float r y + r height break case east e a s t triangle moveto move to float r x float r y triangle lineto line to float r x + r width float r y + r height / 2d triangle lineto line to float r x float r y + r height break case SOUTH_EAST triangle moveto move to float r x + r width float r y triangle lineto line to float r x + r width float r y + r height triangle lineto line to float r x float r y + r height break case south s o u t h triangle moveto move to float r x + r width / 2 float r y + r height triangle lineto line to float r x float r y triangle lineto line to float r x + r width float r y break case SOUTH_WEST triangle moveto move to float r x + r width float r y + r height triangle lineto line to float r x float r y + r height triangle lineto line to float r x float r y break case west w e s t triangle moveto move to float r x float r y + r height / 2 triangle lineto line to float r x + r width float r y triangle lineto line to float r x + r width float r y + r height break case NORTH_WEST triangle moveto move to float r x float r y + r height triangle lineto line to float r x float r y triangle lineto line to float r x + r width float r y break } triangle setclosed set closed triangle } contains point2d point2 d p { shape triangle = getbezierpath get bezier path grow = attributekeys attribute keys getperpendicularhitgrowth get perpendicular hit growth this if grow != 0d { growstroke grow stroke gs = new growstroke grow stroke float grow float attributekeys attribute keys getstroketotalwidth get stroke total width this * STROKE_MITER_LIMIT_FACTOR get this triangle =gs createstrokedshape create stroked shape triangle } triangle contains p } basicsetbounds basic set bounds point2d point2 d anchor point2d point2 d { rectangle x = math min anchor x x rectangle y = math min anchor y y rectangle width = math max 0 1 math abs x anchor x rectangle height = math max 0 1 math abs y anchor y } rectangle2d rectangle2 d getfiguredrawbounds get figure draw bounds { totalstrokewidth total stroke width = attributekeys attribute keys getstroketotalwidth get stroke total width this width = 0d if STROKE_COLOR get this != { switch STROKE_PLACEMENT get this { case inside i n sid e width = 0d break case outside o u t sid e if STROKE_JOIN get this == basicstroke basic stroke JOIN_MITER { width = totalstrokewidth total stroke width * STROKE_MITER_LIMIT_FACTOR get this } else { width = totalstrokewidth total stroke width } break case center c e n t e r if STROKE_JOIN get this == basicstroke basic stroke JOIN_MITER { width = totalstrokewidth total stroke width / 2d * STROKE_MITER_LIMIT_FACTOR get this } else { width = totalstrokewidth total stroke width / 2d } break } } width++ rectangle2d rectangle2 d r = getbounds get bounds geom grow r width width r } point2d point2 d chop point2d point2 d p { shape triangle = getbezierpath get bezier path grow = attributekeys attribute keys getperpendicularhitgrowth get perpendicular hit growth this if grow != 0d { growstroke grow stroke gs = new growstroke grow stroke float grow float attributekeys attribute keys getstroketotalwidth get stroke total width this * STROKE_MITER_LIMIT_FACTOR get this triangle =gs createstrokedshape create stroked shape triangle } geom chop triangle p } basictransform basic transform affinetransform affine transform tx { point2d point2 d anchor = getstartpoint get start point point2d point2 d = getendpoint get end point basicsetbounds basic set bounds point2d point2 d tx transform anchor anchor point2d point2 d tx transform } trianglefigure triangle figure clone { trianglefigure triangle figure that = trianglefigure triangle figure super clone that rectangle = rectangle2d rectangle2 d this rectangle clone that } restoreto restore to geometry { rectangle2d rectangle2 d r = rectangle2d rectangle2 d geometry rectangle x = r x rectangle y = r y rectangle width = r width rectangle height = r height } getrestoredata get restore data { rectangle clone } } 