org jhotdraw draw import util * import awt * import awt geom * import org jhotdraw geom * import org jhotdraw xml dominput dom input import org jhotdraw xml domoutput dom output import org jhotdraw xml domstorable dom storable elbowliner elbow liner implements liner domstorable dom storable { elbowliner elbow liner { } collection<handle> collection< handle> createhandles create handles bezierpath bezier path path { } lineout connectionfigure connection figure figure { bezierpath bezier path path = lineconnectionfigure line connection figure figure getbezierpath get bezier path connector start = figure getstartconnector get start connector connector end = figure getendconnector get end connector if start == || end == || path == { } point2d point2 d sp = start findstart find start figure point2d point2 d ep = end findend find end figure path clear path add new bezierpath bezier path node sp x sp y if sp x == ep x || sp y == ep y { path add new bezierpath bezier path node ep x ep y } else { rectangle2d rectangle2 d sb = start getbounds get bounds sb x += 5d sb y += 5d sb width = 10d sb height = 10d rectangle2d rectangle2 d eb = end getbounds get bounds eb x += 5d eb y += 5d eb width = 10d eb height = 10d soutcode = sb outcode sp if soutcode == 0 { soutcode = geom outcode sb eb } eoutcode = eb outcode ep if eoutcode == 0 { eoutcode = geom outcode eb sb } if soutcode geom OUT_TOP | geom OUT_BOTTOM != 0 eoutcode geom OUT_TOP | geom OUT_BOTTOM != 0 { path add new bezierpath bezier path node sp x sp y + ep y /2 path add new bezierpath bezier path node ep x sp y + ep y /2 } else if soutcode geom OUT_LEFT | geom OUT_RIGHT != 0 eoutcode geom OUT_LEFT | geom OUT_RIGHT != 0 { path add new bezierpath bezier path node sp x + ep x /2 sp y path add new bezierpath bezier path node sp x + ep x /2 ep y } path add new bezierpath bezier path node ep x ep y } path invalidatepath invalidate path } read dominput dom input in { } write domoutput dom output out { } liner clone { try { liner super clone } catch clonenotsupportedexception clone not supported ex { internalerror internal = new internalerror internal ex getmessage get message initcause init cause ex throw } } } 