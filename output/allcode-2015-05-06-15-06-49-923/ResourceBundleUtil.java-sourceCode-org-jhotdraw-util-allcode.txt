org jhotdraw util import util * import javax swing * import text * import net * import io * resourcebundleutil resource bundle util { private resourcebundle resource bundle resource private baseclass base = getclass get resourcebundleutil resource bundle util resourcebundle resource bundle r { resource = r } resourcebundle resource bundle getbundle get bundle { resource } getstring get key { try { resource getstring get key } catch missingresourceexception missing resource e { key } } integer getinteger get integer key { try { integer valueof value of resource getstring get key } catch missingresourceexception missing resource e { new integer 1 } } imageicon image icon getimageicon get image icon key baseclass base { try { rsrcname rsrc name = resource getstring get key+ icon if rsrcname rsrc name equals { } if ! rsrcname rsrc name startswith starts with / { imagedir image dir try { imagedir image dir = resource getstring get $imagedir $image dir if ! imagedir image dir endswith ends with / { imagedir image dir = imagedir+ image dir+ / } } catch missingresourceexception missing resource e { imagedir image dir = } rsrcname rsrc name = imagedir+rsrcname image dir+rsrc name } url u r l url = baseclass base getresource get resource rsrcname rsrc name url == ? new imageicon image icon url } catch missingresourceexception missing resource e { } } char getmnemonic get mnemonic key { s = resource getstring get key s == || s length == 0 ? '\0' s charat char at 0 } char getmnem get mnem key { s try { s = resource getstring get key+ mnem } catch missingresourceexception missing resource e { s = } s == || s length == 0 ? '\0' s charat char at 0 } gettip get tip key { try { resource getstring get key+ tip } catch missingresourceexception missing resource e { } } keystroke key stroke getkeystroke get key stroke key { keystroke key stroke ks = try { s = resource getstring get key ks = s == ? keystroke key stroke keystroke key stroke getkeystroke get key stroke s } catch nosuchelementexception no such element e { } ks } keystroke key stroke getacc get acc key { keystroke key stroke ks = try { s = resource getstring get key+ acc ks = s == ? keystroke key stroke keystroke key stroke getkeystroke get key stroke s } catch missingresourceexception missing resource e { } catch nosuchelementexception no such element e { } ks } getformatted get formatted key argument { messageformat message format format resource getstring get key new {argument} } getformatted get formatted key arguments { messageformat message format format resource getstring get key arguments } resourcebundleutil resource bundle util getlafbundle get l a f bundle basename base name missingresourceexception missing resource { getlafbundle get l a f bundle basename base name localeutil locale util getdefault get default } setbaseclass set base baseclass base { this baseclass base = baseclass base } getbaseclass get base { baseclass base } configureaction configure action action action argument { configureaction configure action action argument getbaseclass get base } configureaction configure action action action argument baseclass base { action putvalue put value action name n a m e getstring get argument action putvalue put value action ACCELERATOR_KEY getacc get acc argument action putvalue put value action MNEMONIC_KEY new integer getmnem get mnem argument action putvalue put value action SMALL_ICON getimageicon get image icon argument baseclass base } configurebutton configure button abstractbutton button button argument { configurebutton configure button button argument getbaseclass get base } configurebutton configure button abstractbutton button button argument baseclass base { button settext set text getstring get argument button seticon set icon getimageicon get image icon argument baseclass base button settooltiptext set tool tip text gettip get tip argument } configuretoolbarbutton configure tool bar button abstractbutton button button argument { configuretoolbarbutton configure tool bar button button argument getbaseclass get base } configuretoolbarbutton configure tool bar button abstractbutton button button argument baseclass base { button settext set text button seticon set icon getimageicon get image icon argument baseclass base button settooltiptext set tool tip text gettip get tip argument } configuremenu configure menu jmenuitem j menu item menu argument { menu settext set text getstring get argument if ! menu instanceof jmenu j menu { menu setaccelerator set accelerator getacc get acc argument } menu setmnemonic set mnemonic getmnem get mnem argument } resourcebundleutil resource bundle util getlafbundle get l a f bundle basename base name locale locale missingresourceexception missing resource { resourcebundleutil resource bundle util r try { r = new resourcebundleutil resource bundle util resourcebundle resource bundle getbundle get bundle baseName+'_'+UIManager getlookandfeel get look and feel getid locale } catch missingresourceexception missing resource e { r = new resourcebundleutil resource bundle util resourcebundle resource bundle getbundle get bundle basename base name locale } r } } 