org jhotdraw util import lang reflect * { private { } obj methodname name nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new 0 result = obj new 0 result } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } obj methodname name stringparameter parameter nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new { } result = obj new { stringparameter parameter } result } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } invokestatic clazz methodname name nosuchmethodexception no such { try { = clazz getmethod get methodname name new 0 result = new 0 result } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } invokestatic clazz methodname name nosuchmethodexception no such { try { invokestatic forname for name clazz methodname name } catch classnotfoundexception not found e { throw new nosuchmethodexception no such +clazz+ not found } } invokestatic clazz methodname name types values nosuchmethodexception no such { try { = clazz getmethod get methodname name types result = values result } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } invokestatic clazz methodname name types values nosuchmethodexception no such { try { invokestatic forname for name clazz methodname name types values } catch classnotfoundexception not found e { throw new nosuchmethodexception no such +clazz+ not found } } invokestatic clazz methodname name types values defaultvalue default value { try { invokestatic forname for name clazz methodname name types values } catch classnotfoundexception not found e { defaultvalue default value } catch nosuchmethodexception no such e { defaultvalue default value } } invokegetter getter obj methodname name defaultvalue default value { try { = obj getclass get getmethod get methodname name new 0 result = obj new 0 integer result intvalue value } catch nosuchmethodexception no such e { defaultvalue default value } catch illegalaccessexception illegal access e { defaultvalue default value } catch invocationtargetexception invocation target e { defaultvalue default value } } long invokegetter getter obj methodname name long defaultvalue default value { try { = obj getclass get getmethod get methodname name new 0 result = obj new 0 long result longvalue long value } catch nosuchmethodexception no such e { defaultvalue default value } catch illegalaccessexception illegal access e { defaultvalue default value } catch invocationtargetexception invocation target e { defaultvalue default value } } invokegetter getter obj methodname name defaultvalue default value { try { = obj getclass get getmethod get methodname name new 0 result = obj new 0 result booleanvalue value } catch nosuchmethodexception no such e { defaultvalue default value } catch illegalaccessexception illegal access e { defaultvalue default value } catch invocationtargetexception invocation target e { defaultvalue default value } } invokegetter getter obj methodname name defaultvalue default value { try { = obj getclass get getmethod get methodname name new 0 result = obj new 0 result } catch nosuchmethodexception no such e { defaultvalue default value } catch illegalaccessexception illegal access e { defaultvalue default value } catch invocationtargetexception invocation target e { defaultvalue default value } } invokestaticgetter getter clazz methodname name defaultvalue default value { try { = clazz getmethod get methodname name new 0 result = new 0 result booleanvalue value } catch nosuchmethodexception no such e { defaultvalue default value } catch illegalaccessexception illegal access e { defaultvalue default value } catch invocationtargetexception invocation target e { defaultvalue default value } } obj methodname name newvalue new value nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new { type} t y p e} obj new { new newvalue new value } } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } obj methodname name newvalue new value nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new { integer type} t y p e} obj new { new integer newvalue new value } } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } obj methodname name float newvalue new value nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new { float type} t y p e} obj new { new float newvalue new value } } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } obj methodname name clazz newvalue new value nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name new { clazz } obj new { newvalue} new value} } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { throw new internalerror internal e getmessage get message } } obj methodname name clazz newvalue new value nosuchmethodexception no such { try { = obj getclass get getmethod get methodname name clazz obj newvalue new value } catch illegalaccessexception illegal access e { throw new nosuchmethodexception no such methodname+ name+ is not accessible } catch invocationtargetexception invocation target e { internalerror internal = new internalerror internal e getmessage get message initcause init cause e getcause get cause != ? e getcause get cause e throw } } invokeifexists if obj methodname name { try { obj methodname name } catch nosuchmethodexception no such e { } } invokeifexists if obj methodname name float newvalue new value { try { obj methodname name newvalue new value } catch nosuchmethodexception no such e { } } invokeifexists if obj methodname name newvalue new value { try { obj methodname name newvalue new value } catch nosuchmethodexception no such e { } } invokeifexists if obj methodname name clazz newvalue new value { try { obj methodname name clazz newvalue new value } catch nosuchmethodexception no such e { } } } 