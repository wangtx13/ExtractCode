org jhotdraw samples svg import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import io * import net * import util * import javax swing * import javax swing event * import org jhotdraw xml * svgapplet s v g applet japplet j applet { private version v e r s i o n = 0 1 private name n a m e = svgdraw s v g draw private svgpanel s v g panel drawingpanel drawing panel getparameter get parameter name { try { super getparameter get parameter name } catch nullpointerexception pointer e { } } init { try { uimanager u i manager setlookandfeel set look and feel uimanager u i manager getsystemlookandfeelclassname get look and feel name } catch throwable e { } container c = getcontentpane get content pane c setlayout set layout new boxlayout box layout c boxlayout box layout Y_AXIS labels = getappletinfo get applet info split \n for i=0 i < labels length i++ { c add new jlabel j label labels i length == 0 ? labels i } new swingworker swing worker { construct { result try { out getparameter get parameter datafile +getparameter +get parameter datafile if getparameter get parameter data != { nanoxmldominput nano xml dom input domi = new nanoxmldominput nano xml dom input new svgfigurefactory s v g figure factory new stringreader reader getparameter get parameter data result = domi readobject read 0 } else if getparameter get parameter datafile != { inputstream input stream in = try { url u r l url = new url u r l getdocumentbase get document base getparameter get parameter datafile in = url openconnection open connection getinputstream get input stream nanoxmldominput nano xml dom input domi = new nanoxmldominput nano xml dom input new svgfigurefactory s v g figure factory in result = domi readobject read 0 } finally { if in != in close } } else { result = } } catch throwable t { result = t } result } finished { if getvalue get value instanceof throwable { throwable getvalue get value printstacktrace print stack trace } container c = getcontentpane get content pane c setlayout set layout new borderlayout border layout c removeall remove all c add drawingpanel drawing panel = new svgpanel s v g panel result = getvalue get value initcomponents init components if result != { if result instanceof drawing { setdrawing set drawing drawing result } else if result instanceof throwable { getdrawing get drawing add new textfigure text figure result tostring to throwable result printstacktrace print stack trace } } c validate } } start } private setdrawing set drawing drawing d { drawingpanel drawing panel setdrawing set drawing d } private drawing getdrawing get drawing { drawingpanel drawing panel getdrawing get drawing } setdata set data text { if text != text length > 0 { stringreader reader in = new stringreader reader text try { nanoxmldominput nano xml dom input domi = new nanoxmldominput nano xml dom input new svgfigurefactory s v g figure factory in domi openelement open element svgdraw s v g draw setdrawing set drawing drawing domi readobject read 0 } catch throwable e { getdrawing get drawing clear textfigure text figure tf = new textfigure text figure tf settext set text e getmessage get message tf setbounds set bounds new point2d point2 d 10 10 new point2d point2 d 100 100 getdrawing get drawing add tf e printstacktrace print stack trace } finally { if in != in close } } } getdata get data { chararraywriter char writer out = new chararraywriter char writer try { nanoxmldomoutput nano xml dom output domo = new nanoxmldomoutput nano xml dom output new svgfigurefactory s v g figure factory domo openelement open element svgdraw s v g draw domo writeobject write getdrawing get drawing domo closeelement close element domo save out } catch ioexception i o e { textfigure text figure tf = new textfigure text figure tf settext set text e getmessage get message tf setbounds set bounds new point2d point2 d 10 10 new point2d point2 d 100 100 getdrawing get drawing add tf e printstacktrace print stack trace } finally { if out != out close } out tostring to } getparameterinfo get parameter info { new { { data the data to be displayed by this applet } { datafile url u r l an url u r l to a containing the data to be displayed by this applet } } } getappletinfo get applet info { name+ n a m e+ \nversion \n +version + v e r s i o n + \n\ncopyright \n\n copyright \u00a9 2004 2006 \u00a9 werner randelshofer + \nalle \n alle rights reserved + \n\nthis \n\n this software is based on + \njhotdraw \n jhotdraw \u00a9 1996 1997 ifa i f a informatik und erich gamma + \n + \njavascript \n script can access the drawing data using the setdata set data and getdata get data } private initcomponents init components { toolbuttongroup tool button group = new javax swing buttongroup button group } mainx args { swingutilities swing utilities invokelater later new runnable { run { jframe j frame f = new jframe j frame svgdraw s v g draw applet f setdefaultcloseoperation set default close operation jframe j frame EXIT_ON_CLOSE svgapplet s v g applet a = new svgapplet s v g applet f getcontentpane get content pane add a a init f setsize set size 500 300 f setvisible set visible a start } } } private javax swing buttongroup button group toolbuttongroup tool button group } 