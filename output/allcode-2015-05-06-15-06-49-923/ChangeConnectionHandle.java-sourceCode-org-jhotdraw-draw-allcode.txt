org jhotdraw draw import org jhotdraw util * import awt * import awt geom * import util * changeconnectionhandle change connection handle abstracthandle handle { private connector originaltarget original target private figure targetfigure target figure private connectionfigure connection figure connection private point start private liner liner changeconnectionhandle change connection handle figure owner { super owner setconnection set connection connectionfigure connection figure owner settargetfigure set target figure } iscombinablewith is combinable with handle handle { } connector gettarget get target disconnect connect connector c setlocation set location point2d point2 d p point2d point2 d getlocation get location connector getsource get source { if gettarget get target == getconnection get connection getstartconnector get start connector { getconnection get connection getendconnector get end connector } getconnection get connection getstartconnector get start connector } trackstart track start point anchor modifiersex modifiers ex { originaltarget original target = gettarget get target start = anchor liner = connection getliner get liner connection setliner set liner } trackstep track step point anchor point modifiersex modifiers ex { point2d point2 d p = view viewtodrawing view to drawing figure f = findconnectablefigure find connectable figure p view getdrawing get drawing if f != gettargetfigure get target figure { if gettargetfigure get target figure != { gettargetfigure get target figure setconnectorsvisible set connectors visible } settargetfigure set target figure f if getsource get source == { if gettargetfigure get target figure != { gettargetfigure get target figure setconnectorsvisible set connectors visible getconnection get connection } } else { if gettargetfigure get target figure != canconnect can connect getsource get source getowner get owner gettargetfigure get target figure { gettargetfigure get target figure setconnectorsvisible set connectors visible getconnection get connection } } } connector target = findconnectiontarget find connection target p view getdrawing get drawing if target != { p = target getanchor get anchor } setlocation set location p } trackend track end point anchor point modifiersex modifiers ex { point2d point2 d p = view viewtodrawing view to drawing connector target = findconnectiontarget find connection target p view getdrawing get drawing if target == { target = originaltarget original target } setlocation set location p if target != originaltarget original target { disconnect connect target } connection setliner set liner liner getconnection get connection updateconnection update connection if gettargetfigure get target figure != { gettargetfigure get target figure setconnectorsvisible set connectors visible settargetfigure set target figure } } private connector findconnectiontarget find connection target point2d point2 d p drawing drawing { figure targetfigure target figure = findconnectablefigure find connectable figure p drawing if getsource get source == targetfigure target figure != { findconnector find connector p targetfigure target figure getconnection get connection } else { if targetfigure target figure != targetfigure target figure canconnect can connect targetfigure target figure != originaltarget original target !targetfigure !target figure includes getowner get owner canconnect can connect getsource get source getowner get owner targetfigure target figure { findconnector find connector p targetfigure target figure getconnection get connection } } } canconnect can connect figure existingend existing end figure targetend target end connector findconnector find connector point2d point2 d p figure f connectionfigure connection figure prototype { f findconnector find connector p prototype } draw graphics2d graphics2 d g { drawcircle draw circle g gettarget get target == ? color red color green color black } private figure findconnectablefigure find connectable figure point2d point2 d p drawing drawing { for figure f drawing getfiguresfronttoback get figures front to back { if ! f includes getconnection get connection f canconnect can connect f contains p { f } } } setconnection set connection connectionfigure connection figure newconnection new connection { connection = newconnection new connection } connectionfigure connection figure getconnection get connection { connection } settargetfigure set target figure figure newtarget new target { targetfigure target figure = newtarget new target } figure gettargetfigure get target figure { targetfigure target figure } rectangle basicgetbounds basic get bounds { point center = view drawingtoview drawing to view getlocation get location new rectangle center x gethandlesize get handlesize / 2 center y gethandlesize get handlesize / 2 gethandlesize get handlesize gethandlesize get handlesize } } 