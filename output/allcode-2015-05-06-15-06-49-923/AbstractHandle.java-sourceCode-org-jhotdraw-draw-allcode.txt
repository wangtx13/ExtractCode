org jhotdraw draw import util collection import javax swing event * import awt * import awt event * import javax swing undo * import util * abstracthandle handle implements handle figurelistener figure listener { private figure owner drawingview drawing view view eventlistenerlist event listener list listenerlist listener list = new eventlistenerlist event listener list private rectangle bounds abstracthandle handle figure owner { this owner = owner owner addfigurelistener add figure listener this } gethandlesize get handlesize { 7 } addhandlelistener add handle listener handlelistener handle listener l { listenerlist listener list add handlelistener handle listener l } removehandlelistener remove handle listener handlelistener handle listener l { listenerlist listener list remove handlelistener handle listener l } figure getowner get owner { owner } setview set view drawingview drawing view view { this view = view } fireareainvalidated fire area invalidated rectangle invalidatedarea invalidated area { handleevent handle event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handlelistener handle listener { if event == event = new handleevent handle event this invalidatedarea invalidated area handlelistener handle listener listeners i+1 areainvalidated area invalidated event } } } fireundoableedithappened fire undoable edit happened undoableedit undoable edit edit { view getdrawing get drawing fireundoableedithappened fire undoable edit happened edit } firehandlerequestremove fire handle request remove rectangle invalidatedarea invalidated area { handleevent handle event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handlelistener handle listener { if event == event = new handleevent handle event this invalidatedarea invalidated area handlelistener handle listener listeners i+1 handlerequestremove handle request remove event } } } firehandlerequestsecondaryhandles fire handle request secondary handles { handleevent handle event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == handlelistener handle listener { if event == event = new handleevent handle event this handlelistener handle listener listeners i+1 handlerequestsecondaryhandles handle request secondary handles event } } } draw graphics2d graphics2 d g { drawcircle draw circle g color white color black } drawcircle draw circle graphics2d graphics2 d g color fill color stroke { rectangle r = getbounds get bounds g setcolor set color fill g filloval fill oval r x r y r width r height g setstroke set stroke new basicstroke basic stroke g setcolor set color stroke g drawoval draw oval r x r y r width r height } drawrectangle draw rectangle graphics2d graphics2 d g color fill color stroke { rectangle r = getbounds get bounds g setcolor set color fill g fill r g setstroke set stroke new basicstroke basic stroke g setcolor set color stroke g draw r } drawdiamond draw diamond graphics2d graphics2 d g color fill color stroke { rectangle r = getbounds get bounds r grow 1 1 polygon p = new polygon p addpoint add point r x + r width / 2 r y p addpoint add point r x + r width r y + r height / 2 p addpoint add point r x + r width / 2 r y + r height p addpoint add point r x r y + r height / 2 p addpoint add point r x + r width / 2 r y g setcolor set color fill g fill p g setstroke set stroke new basicstroke basic stroke g setcolor set color stroke g draw p } contains point p { getbounds get bounds contains p } invalidate { fireareainvalidated fire area invalidated getdrawbounds get draw bounds } dispose { owner removefigurelistener remove figure listener this owner = } figureareainvalidated figure area invalidated figureevent figure event evt { updatebounds update bounds } figureadded figure added figureevent figure event e { } figureremoved figure removed figureevent figure event e { } figurerequestremove figure request remove figureevent figure event e { } figurechanged figure changed figureevent figure event evt { updatebounds update bounds } cursor getcursor get cursor { cursor getpredefinedcursor get predefined cursor cursor MOVE_CURSOR } iscombinablewith is combinable with handle handle { getclass get isassignablefrom is assignable from handle getclass get } keytyped key typed keyevent key event evt { } keyreleased key released keyevent key event evt { } keypressed key pressed keyevent key event evt { } rectangle getbounds get bounds { if bounds == { bounds = basicgetbounds basic get bounds } rectangle bounds clone } rectangle getdrawbounds get draw bounds { rectangle r = getbounds get bounds r grow 2 2 r } rectangle basicgetbounds basic get bounds updatebounds update bounds { rectangle newbounds new bounds = basicgetbounds basic get bounds if bounds == || ! newbounds new bounds equals bounds { if bounds != fireareainvalidated fire area invalidated getdrawbounds get draw bounds bounds = newbounds new bounds fireareainvalidated fire area invalidated getdrawbounds get draw bounds } } trackdoubleclick track click point p modifiersex modifiers ex { } figureattributechanged figure attribute changed figureevent figure event e { } viewtransformchanged view transform changed { bounds = } collection<handle> collection< handle> createsecondaryhandles create secondary handles { collections emptylist empty list } } 