org jhotdraw app action import awt event * import beans * import org jhotdraw app application import org jhotdraw app project projectpropertyaction project property action abstractprojectaction project action { private propertyname property name private parameterclass parameter private propertyvalue property value private settername setter name private gettername getter name private propertychangelistener property change listener projectlistener project listener = new propertychangelistener property change listener { propertychange property change propertychangeevent property change event evt { if evt getpropertyname get property name == propertyname property name { updateselectedstate update selected state } } } projectpropertyaction project property action application app propertyname property name propertyvalue property value { this app propertyname property name propertyvalue property value getclass get propertyvalue property value } projectpropertyaction project property action application app propertyname property name propertyclass property propertyvalue property value { super app this propertyname property name = propertyname property name this parameterclass parameter = new { propertyclass property } this propertyvalue property value = propertyvalue property value settername setter name = set +character + character touppercase to upper case propertyname property name charat char at 0 + propertyname property name substring 1 gettername getter name = propertyclass property == type t y p e || propertyclass property == ? is get + character touppercase to upper case propertyname property name charat char at 0 + propertyname property name substring 1 updateselectedstate update selected state } actionperformed action performed actionevent action event evt { project p = getcurrentproject get current project try { p getclass get getmethod get settername setter name parameterclass parameter p new {propertyvalue} {property value} } catch throwable e { internalerror internal = new internalerror internal invocation failed initcause init cause e throw } } installprojectlisteners install project listeners project p { super installprojectlisteners install project listeners p p addpropertychangelistener add property change listener projectlistener project listener updateselectedstate update selected state } uninstallprojectlisteners uninstall project listeners project p { super uninstallprojectlisteners uninstall project listeners p p removepropertychangelistener remove property change listener projectlistener project listener } private updateselectedstate update selected state { isselected is selected = project p = getcurrentproject get current project if p != { try { value = p getclass get getmethod get gettername getter name p isselected is selected = value == propertyvalue property value || value != propertyvalue property value != value equals propertyvalue property value } catch throwable e { internalerror internal = new internalerror internal invocation failed initcause init cause e throw } } putvalue put value actions SELECTED_KEY isselected is selected } } 