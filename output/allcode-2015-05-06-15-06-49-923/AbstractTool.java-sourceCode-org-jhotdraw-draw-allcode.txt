org jhotdraw draw import org jhotdraw undo compositeedit composite edit import awt * import awt geom * import awt event * import javax swing event * import util * abstracttool tool implements tool { private isactive is active isworking is working drawingeditor drawing editor editor point anchor = new point eventlistenerlist event listener list listenerlist listener list = new eventlistenerlist event listener list abstracttool tool { } addundoableeditlistener add undoable edit listener undoableeditlistener undoable edit listener l { listenerlist listener list add undoableeditlistener undoable edit listener l } removeundoableeditlistener remove undoable edit listener undoableeditlistener undoable edit listener l { listenerlist listener list remove undoableeditlistener undoable edit listener l } activate drawingeditor drawing editor editor { this editor = editor isactive is active = } deactivate drawingeditor drawing editor editor { this editor = editor isactive is active = } isactive is active { isactive is active } drawingview drawing view getview get view { editor getview get view } drawingeditor drawing editor geteditor get editor { editor } drawing getdrawing get drawing { getview get view getdrawing get drawing } point2d point2 d viewtodrawing view to drawing point p { constrainpoint constrain point getview get view viewtodrawing view to drawing p } point2d point2 d constrainpoint constrain point point p { constrainpoint constrain point getview get view viewtodrawing view to drawing p } point2d point2 d constrainpoint constrain point point2d point2 d p { getview get view getconstrainer get constrainer constrainpoint constrain point p } editdelete edit delete { getview get view getdrawing get drawing removeall remove all getview get view getselectedfigures get selected figures } editcut edit cut { } editcopy edit copy { } editduplicate edit duplicate { } editpaste edit paste { } keyreleased key released keyevent key event evt { firetooldone fire tool done } keytyped key typed keyevent key event evt { } keypressed key pressed keyevent key event evt { if evt getsource get source instanceof container { editor setview set view editor findview find view container evt getsource get source } compositeedit composite edit edit switch evt getkeycode get key { case keyevent key event VK_DELETE case keyevent key event VK_BACK_SPACE { editdelete edit delete break } case keyevent key event VK_A { if evt getmodifiers get modifiers keyevent key event CTRL_MASK | keyevent key event META_MASK != 0 { getview get view addtoselection add to selection getview get view getdrawing get drawing getfigures get figures } break } case keyevent key event VK_LEFT { collection<figure> collection< figure> figures = getview get view getselectedfigures get selected figures affinetransform affine transform tx = new affinetransform affine transform tx translate 1 0 for figure f figures { f willchange will change f basictransform basic transform tx f changed } getdrawing get drawing fireundoableedithappened fire undoable edit happened new transformedit transform edit figures tx break } case keyevent key event VK_RIGHT { collection<figure> collection< figure> figures = getview get view getselectedfigures get selected figures affinetransform affine transform tx = new affinetransform affine transform tx translate 1 0 for figure f figures { f willchange will change f basictransform basic transform tx f changed } getdrawing get drawing fireundoableedithappened fire undoable edit happened new transformedit transform edit figures tx break } case keyevent key event VK_UP { collection<figure> collection< figure> figures = getview get view getselectedfigures get selected figures affinetransform affine transform tx = new affinetransform affine transform tx translate 0 1 for figure f figures { f willchange will change f basictransform basic transform tx f changed } getdrawing get drawing fireundoableedithappened fire undoable edit happened new transformedit transform edit figures tx break } case keyevent key event VK_DOWN { collection<figure> collection< figure> figures = getview get view getselectedfigures get selected figures getdrawing get drawing fireundoableedithappened fire undoable edit happened edit = new compositeedit composite edit figur en verschieben affinetransform affine transform tx = new affinetransform affine transform tx translate 0 1 for figure f figures { f willchange will change f basictransform basic transform tx f changed } getdrawing get drawing fireundoableedithappened fire undoable edit happened new transformedit transform edit figures tx break } } } mouseclicked mouse clicked mouseevent mouse event evt { } mouseentered mouse entered mouseevent mouse event evt { if ! isworking is working { editor setview set view editor findview find view container evt getsource get source } } mouseexited mouse exited mouseevent mouse event evt { } mousemoved mouse moved mouseevent mouse event evt { } mousepressed mouse pressed mouseevent mouse event evt { drawingview drawing view view = editor findview find view container evt getsource get source view requestfocus request focus anchor = new point evt getx get x evt gety get y isworking is working = firetoolstarted fire tool started view } mousereleased mouse released mouseevent mouse event evt { isworking is working = } addtoollistener add tool listener toollistener tool listener l { listenerlist listener list add toollistener tool listener l } removetoollistener remove tool listener toollistener tool listener l { listenerlist listener list remove toollistener tool listener l } firetoolstarted fire tool started drawingview drawing view view { toolevent tool event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == toollistener tool listener { if event == event = new toolevent tool event this view new rectangle 0 0 1 1 toollistener tool listener listeners i+1 toolstarted tool started event } } } firetooldone fire tool done { toolevent tool event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == toollistener tool listener { if event == event = new toolevent tool event this getview get view new rectangle 0 0 1 1 toollistener tool listener listeners i+1 tooldone tool done event } } } fireareainvalidated fire area invalidated rectangle2d rectangle2 d r { point p1 = getview get view drawingtoview drawing to view new point2d point2 d r x r y point p2 = getview get view drawingtoview drawing to view new point2d point2 d r x+r width r y+r height fireareainvalidated fire area invalidated new rectangle p1 x p1 y p2 x p1 x p2 y p1 y } fireareainvalidated fire area invalidated rectangle invalidatedarea invalidated area { toolevent tool event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == toollistener tool listener { if event == event = new toolevent tool event this getview get view invalidatedarea invalidated area toollistener tool listener listeners i+1 areainvalidated area invalidated event } } } draw graphics2d graphics2 d g { } updatecursor update cursor drawingview drawing view view point p { handle handle = view findhandle find handle p if handle != { view setcursor set cursor handle getcursor get cursor } else { figure figure = view findfigure find figure p if figure != { view setcursor set cursor figure getcursor get cursor view viewtodrawing view to drawing p } else { view setcursor set cursor cursor getdefaultcursor get default cursor } } } } 