org jhotdraw draw action import awt * import javax swing * import javax swing border * import awt image * import javax swing plaf basic * imagebevelborder image bevel border implements border { private verbose v e r b o s e = private bufferedimage buffered image image private insets borderinsets border insets private insets imageinsets image insets private fillcontentarea fill content area imagebevelborder image bevel border image img insets borderinsets border insets { this img borderinsets border insets borderinsets border insets } imagebevelborder image bevel border image img insets imageinsets image insets insets borderinsets border insets { this img imageinsets image insets borderinsets border insets } imagebevelborder image bevel border image img insets imageinsets image insets insets borderinsets border insets fillcontentarea fill content area { if img instanceof bufferedimage buffered image { this image = bufferedimage buffered image img } else { frame f = new frame f pack mediatracker media tracker t = new mediatracker media tracker f t addimage add image img 0 try { t waitforall wait for all } catch interruptedexception interrupted e {} image = new bufferedimage buffered image img getwidth get width f img getheight get height f bufferedimage buffered image TYPE_INT_ARGB graphics2d graphics2 d imggraphics img graphics = image creategraphics create graphics imggraphics img graphics drawimage draw image img 0 0 f imggraphics img graphics dispose f dispose } this imageinsets image insets = imageinsets image insets this borderinsets border insets = borderinsets border insets this fillcontentarea fill content area = fillcontentarea fill content area } isborderopaque is border opaque { } insets getborderinsets get border insets component c { insets borderinsets border insets clone } paintborder paint border component c graphics gr x y width height { if image == graphics2d graphics2 d g = graphics2d graphics2 d gr top = imageinsets image insets top left = imageinsets image insets left bottom = imageinsets image insets bottom right = imageinsets image insets right imgwidth img width = image getwidth get width imgheight img height = image getheight get height if fillcontentarea fill content area { if width == imgwidth img width height == imgheight img height { g drawimage draw image image x y c } } if width == imgwidth img width { left = imgwidth img width right = 0 } if height == imgheight img height { top = imgheight img height bottom = 0 } if width < left + right { left = math min left width / 2 right = width left } if height < top + bottom { top = math min top height / 2 bottom = height top } if top > 0 left > 0 { g drawimage draw image image x y x + left y + top 0 0 left top c } if top > 0 right > 0 { g drawimage draw image image x + width right y x + width y + top imgwidth img width right 0 imgwidth img width top c } if bottom > 0 left > 0 { g drawimage draw image image x y + height bottom x + left y + height 0 imgheight img height bottom left imgheight img height c } if bottom > 0 right > 0 { g drawimage draw image image x + width right y + height bottom x + width y + height imgwidth img width right imgheight img height bottom imgwidth img width imgheight img height c } bufferedimage buffered image subimg sub img = texturepaint texture paint paint if top > 0 left + right < width { subimg sub img = image getsubimage get subimage left 0 imgwidth img width right left top paint = new texturepaint texture paint subimg sub img new rectangle x+left y imgwidth img width left right top g setpaint set paint paint g fillrect fill rect x+left y width left right top } if bottom > 0 left + right < width { subimg sub img = image getsubimage get subimage left imgheight img height bottom imgwidth img width right left bottom paint = new texturepaint texture paint subimg sub img new rectangle x+left y + height bottom imgwidth img width left right bottom g setpaint set paint paint g fillrect fill rect x+left y + height bottom width left right bottom } if left > 0 top + bottom < height { subimg sub img = image getsubimage get subimage 0 top left imgheight img height top bottom paint = new texturepaint texture paint subimg sub img new rectangle x y+top left imgheight img height top bottom g setpaint set paint paint g fillrect fill rect x y+top left height top bottom } if right > 0 top + bottom < height { subimg sub img = image getsubimage get subimage imgwidth img width right top right imgheight img height top bottom paint = new texturepaint texture paint subimg sub img new rectangle x+width right y + top right imgheight img height top bottom g setpaint set paint paint g fillrect fill rect x+width right y + top right height top bottom } if fillcontentarea fill content area { g setcolor set color color yellow if left + right < width top + bottom < height { subimg sub img = image getsubimage get subimage left top imgwidth img width right left imgheight img height top bottom paint = new texturepaint texture paint subimg sub img new rectangle x + left y + top imgwidth img width right left imgheight img height top bottom g setpaint set paint paint g fillrect fill rect x+left y + top width right left height top bottom } } } } 