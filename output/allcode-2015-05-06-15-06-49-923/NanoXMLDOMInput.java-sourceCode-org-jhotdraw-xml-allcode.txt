org jhotdraw xml import util * import io * import awt * import net n3 nanoxml * nanoxmldominput nano xml dom input implements dominput dom input { private hashmap<string hash map< object> idobjects = new hashmap<string hash map< object> private xmlelement xml element document private xmlelement xml element current private domfactory dom factory factory private stack<xmlelement> stack< xml element> stack = new stack<xmlelement> stack< xml element> nanoxmldominput nano xml dom input domfactory dom factory factory inputstream input stream in ioexception i o { this factory new inputstreamreader input stream reader in utf8 u t f8 } nanoxmldominput nano xml dom input domfactory dom factory factory reader in ioexception i o { this factory = factory try { ixmlparser i xml parser parser = xmlparserfactory xml parser factory createdefaultxmlparser create default xml parser ixmlreader i xml reader reader = new stdxmlreader std xml reader in parser setreader set reader reader document = new xmlelement xml element current = xmlelement xml element parser parse document addchild add child current current = document } catch e { ioexception i o = new ioexception i o e getmessage get message initcause init cause e throw } } gettagname get tag name { current getname get name } getattribute get attribute name defaultvalue default value { value = current getattribute get attribute name value == || value length == 0 ? defaultvalue default value value } util list<string> list< string> getinheritedattribute get inherited attribute name { linkedlist<string> linked list< string> values = new linkedlist<string> linked list< string> for xmlelement xml element node stack { value = node getattribute get attribute name values add value } value = current getattribute get attribute name values add value values } gettext get text { gettext get text } gettext get text defaultvalue default value { value = current getcontent get content value == ? defaultvalue default value value } getattribute get attribute name defaultvalue default value { value = current getattribute get attribute name value == || value length == 0 ? defaultvalue default value long decode value intvalue value } getattribute get attribute name defaultvalue default value { value = current getattribute get attribute name value == || value length == 0 ? defaultvalue default value parsedouble parse value } getattribute get attribute name defaultvalue default value { value = current getattribute get attribute name value == || value length == 0 ? defaultvalue default value valueof value of value booleanvalue value } getelementcount get element count { current getchildrencount get children count } getelementcount get element count tagname tag name { count = 0 arraylist list list = current getchildren get children for i=0 i < list size i++ { xmlelement xml element node = xmlelement xml element list get i if node getname get name equals tagname tag name { count++ } } count } openelement open element index { stack push current arraylist list list = current getchildren get children current = xmlelement xml element list get index } openelement open element tagname tag name ioexception i o { arraylist list list = current getchildren get children for i=0 i < list size i++ { xmlelement xml element node = xmlelement xml element list get i if node getname get name equals tagname tag name { stack push current current = node } } throw new ioexception i o no such element +tagname +tag name } openelement open element tagname tag name index ioexception i o { count = 0 arraylist list list = current getchildren get children for i=0 i < list size i++ { xmlelement xml element node = xmlelement xml element list get i if node getname get name equals tagname tag name { if count++ == index { stack push current current = node } } } throw new ioexception i o no such element +tagname+ +tag name+ at index +index } closeelement close element { current = xmlelement xml element stack pop } readobject read ioexception i o { readobject read 0 } readobject read index ioexception i o { openelement open element index o tagname tag name = gettagname get tag name if tagname tag name equals { o = } else if tagname tag name equals { o = gettext get text } else if tagname tag name equals { o = integer decode gettext get text } else if tagname tag name equals long { o = long decode gettext get text } else if tagname tag name equals float { o = new float float parsefloat parse float gettext get text } else if tagname tag name equals { o = new parsedouble parse gettext get text } else if tagname tag name equals { o = valueof value of gettext get text } else if tagname tag name equals color { o = new color getattribute get attribute rgba 0xff } else if tagname tag name equals intarray { a = new getelementcount get element count for i=0 i < a length i++ { a i = integer readobject read i intvalue value } o = a } else if tagname tag name equals floatarray float { float a = new float getelementcount get element count for i=0 i < a length i++ { a i = float readobject read i floatvalue float value } o = a } else if tagname tag name equals doublearray { a = new getelementcount get element count for i=0 i < a length i++ { a i = readobject read i doublevalue value } o = a } else if tagname tag name equals font { o = new font getattribute get attribute name dialog getattribute get attribute style 0 getattribute get attribute size 0 } else if tagname tag name equals enum { o = factory createenum create enum getattribute get attribute type gettext get text } else { ref = getattribute get attribute ref = getattribute get attribute ref if == { o = factory create gettagname get tag name } else if idobjects containskey contains key { o = idobjects get } else { o = factory create gettagname get tag name idobjects put o } if ref == { if o instanceof domstorable dom storable { domstorable dom storable o read this } } } closeelement close element o } } 