org jhotdraw draw import awt * import awt geom * import io * import util * import org jhotdraw draw attributekeys attribute keys * import org jhotdraw geom geom rectanglefigure rectangle figure attributedfigure attributed figure { private rectangle2d rectangle2 d rectangle rectanglefigure rectangle figure { this 0 0 0 0 } rectanglefigure rectangle figure x y width height { rectangle = new rectangle2d rectangle2 d x y width height } rectangle2d rectangle2 d getbounds get bounds { rectangle2d rectangle2 d bounds = rectangle2d rectangle2 d rectangle clone bounds } drawfill draw fill graphics2d graphics2 d g { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone grow = attributekeys attribute keys getperpendicularfillgrowth get perpendicular fill growth this geom grow r grow grow g fill r } drawstroke draw stroke graphics2d graphics2 d g { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone grow = attributekeys attribute keys getperpendiculardrawgrowth get perpendicular draw growth this geom grow r grow grow g draw r } rectangle2d rectangle2 d getfiguredrawbounds get figure draw bounds { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone grow = attributekeys attribute keys getperpendicularhitgrowth get perpendicular hit growth this + 1d geom grow r grow grow r } contains point2d point2 d p { rectangle2d rectangle2 d r = rectangle2d rectangle2 d rectangle clone grow = attributekeys attribute keys getperpendicularhitgrowth get perpendicular hit growth this + 1d geom grow r grow grow r contains p } basicsetbounds basic set bounds point2d point2 d anchor point2d point2 d { rectangle x = math min anchor x x rectangle y = math min anchor y y rectangle width = math max 0 1 math abs x anchor x rectangle height = math max 0 1 math abs y anchor y } basictransform basic transform affinetransform affine transform tx { point2d point2 d anchor = getstartpoint get start point point2d point2 d = getendpoint get end point basicsetbounds basic set bounds point2d point2 d tx transform anchor anchor point2d point2 d tx transform } rectanglefigure rectangle figure clone { rectanglefigure rectangle figure that = rectanglefigure rectangle figure super clone that rectangle = rectangle2d rectangle2 d this rectangle clone that } restoreto restore to geometry { rectangle2d rectangle2 d r = rectangle2d rectangle2 d geometry rectangle x = r x rectangle y = r y rectangle width = r width rectangle height = r height } getrestoredata get restore data { rectangle clone } } 