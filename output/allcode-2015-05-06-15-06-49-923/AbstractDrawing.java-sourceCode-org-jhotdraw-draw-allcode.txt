org jhotdraw draw import org jhotdraw beans * import org jhotdraw undo * import org jhotdraw xml * import awt * import awt geom * import awt font * import javax swing * import javax swing event * import javax swing undo * import org jhotdraw util * import util * import io * abstractdrawing drawing abstractbean bean implements drawing { private lock = new jpanel j panel gettreelock get tree lock eventlistenerlist event listener list listenerlist listener list = new eventlistenerlist event listener list private fontrendercontext font render context fontrendercontext font render context abstractdrawing drawing { } adddrawinglistener add drawing listener drawinglistener drawing listener listener { listenerlist listener list add drawinglistener drawing listener listener } removedrawinglistener remove drawing listener drawinglistener drawing listener listener { listenerlist listener list remove drawinglistener drawing listener listener } addundoableeditlistener add undoable edit listener undoableeditlistener undoable edit listener l { listenerlist listener list add undoableeditlistener undoable edit listener l } removeundoableeditlistener remove undoable edit listener undoableeditlistener undoable edit listener l { listenerlist listener list remove undoableeditlistener undoable edit listener l } addall add all collection<figure> collection< figure> figures { compositeedit composite edit edit = new compositeedit composite edit figuren hinzuf\u00fcgen fireundoableedithappened fire undoable edit happened edit for figure f figures { add f } fireundoableedithappened fire undoable edit happened edit } clear { removeall remove all getfigures get figures } getfigurecount get figure count { getfigures get figures size } removeall remove all collection<figure> collection< figure> toberemoved to be removed { compositeedit composite edit edit = new compositeedit composite edit figuren entfernen fireundoableedithappened fire undoable edit happened edit for figure f new arraylist<figure> list< figure> toberemoved to be removed { remove f } fireundoableedithappened fire undoable edit happened edit } basicaddall basic add all collection<figure> collection< figure> figures { for figure f figures { basicadd basic add f } } basicremoveall basic remove all collection<figure> collection< figure> tobeorphaned to be orphaned { for figure f new arraylist<figure> list< figure> tobeorphaned to be orphaned { basicremove basic remove f } } add figure figure { index = getfigurecount get figure count basicadd basic add index figure figure addnotify add notify this firefigureadded fire figure added figure fireundoableedithappened fire undoable edit happened new abstractundoableedit undoable edit { getpresentationname get presentation name { figur einf\u00fcgen } undo cannotundoexception cannot undo { super undo basicremove basic remove figure figure removenotify remove notify abstractdrawing drawing this firefigureremoved fire figure removed figure } redo cannotundoexception cannot undo { super redo basicadd basic add index figure figure addnotify add notify abstractdrawing drawing this firefigureadded fire figure added figure } } } basicadd basic add figure figure { basicadd basic add getfigurecount get figure count figure } remove figure figure { if contains figure { index = indexof index of figure basicremove basic remove figure figure removenotify remove notify this firefigureremoved fire figure removed figure fireundoableedithappened fire undoable edit happened new abstractundoableedit undoable edit { getpresentationname get presentation name { figur entfernen } redo cannotundoexception cannot undo { super redo basicremove basic remove figure figure removenotify remove notify abstractdrawing drawing this firefigureremoved fire figure removed figure } undo cannotundoexception cannot undo { super undo basicadd basic add index figure figure addnotify add notify abstractdrawing drawing this firefigureadded fire figure added figure } } } else { fireareainvalidated fire area invalidated figure getdrawbounds get draw bounds } } indexof index of figure figure fireareainvalidated fire area invalidated rectangle2d rectangle2 d dirtyregion dirty region { drawingevent drawing event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == drawinglistener drawing listener { if event == event = new drawingevent drawing event this dirtyregion dirty region drawinglistener drawing listener listeners i+1 areainvalidated area invalidated event } } } fireundoableedithappened fire undoable edit happened undoableedit undoable edit edit { undoableeditevent undoable edit event event = if listenerlist listener list getlistenercount get listener count > 0 { listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if event == event = new undoableeditevent undoable edit event this edit if listeners i == undoableeditlistener undoable edit listener { undoableeditlistener undoable edit listener listeners i+1 undoableedithappened undoable edit happened event } } } } firefigureadded fire figure added figure f { drawingevent drawing event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == drawinglistener drawing listener { if event == event = new drawingevent drawing event this f f getdrawbounds get draw bounds drawinglistener drawing listener listeners i+1 figureadded figure added event } } } firefigureremoved fire figure removed figure f { drawingevent drawing event event = listeners = listenerlist listener list getlistenerlist get listener list for i = listeners length 2 i>=0 i =2 { if listeners i == drawinglistener drawing listener { if event == event = new drawingevent drawing event this f f getdrawbounds get draw bounds drawinglistener drawing listener listeners i+1 figureremoved figure removed event } } } fontrendercontext font render context getfontrendercontext get font render context { fontrendercontext font render context } setfontrendercontext set font render context fontrendercontext font render context frc { fontrendercontext font render context = frc } read dominput dom input in ioexception i o { in openelement open element figures for i=0 i < in getelementcount get element count i++ { figure f add f = figure in readobject read i } in closeelement close element } write domoutput dom output out ioexception i o { out openelement open element figures for figure f getfigures get figures { out writeobject write f } out closeelement close element } getlock get lock { lock } } 