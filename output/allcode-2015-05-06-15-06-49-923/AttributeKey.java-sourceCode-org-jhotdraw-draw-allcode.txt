org jhotdraw draw import lang reflect * attributekey<t> attribute key< t> { private key private t defaultvalue default value private isnullvalueallowed is value allowed attributekey attribute key key { this key } attributekey attribute key key t defaultvalue default value { this key defaultvalue default value } attributekey attribute key key t defaultvalue default value isnullvalueallowed is value allowed { this key = key this defaultvalue default value = defaultvalue default value this isnullvalueallowed is value allowed = isnullvalueallowed is value allowed } getkey get key { key } t getdefaultvalue get default value { defaultvalue default value } t get figure f { t value = t f getattribute get attribute this value == ! isnullvalueallowed is value allowed ? defaultvalue default value value } set figure f t value { if value == ! isnullvalueallowed is value allowed { throw new nullpointerexception pointer value not allowed for attributekey attribute key +key } f setattribute set attribute this value } basicset basic set figure f t value { if value == ! isnullvalueallowed is value allowed { throw new nullpointerexception pointer value not allowed for attributekey attribute key +key } f basicsetattribute basic set attribute this value } equals o { if o instanceof attributekey attribute key { attributekey attribute key that = attributekey attribute key o that key equals this key } } hashcode hash { key hashcode hash } tostring to { key } isnullvalueallowed is value allowed { isnullvalueallowed is value allowed } args { typevariable type variable v = new attributekey<double> attribute key< double> hey getclass get gettypeparameters get type 0 } isassignable is assignable value { if value == { isnullvalueallowed is value allowed } try { t a = t value } catch classcastexception cast e { } } } 