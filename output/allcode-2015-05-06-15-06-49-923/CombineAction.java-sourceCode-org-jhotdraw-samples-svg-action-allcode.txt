org jhotdraw samples svg action import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw samples svg figures * import org jhotdraw undo * import org jhotdraw util * import util * import javax swing * import javax swing undo * combineaction combine action groupaction group action { = selectioncombine selection combine combineaction combine action drawingeditor drawing editor editor { super editor new svgpath s v g path labels = resourcebundleutil resource bundle util getlafbundle get l a f bundle org jhotdraw samples svg labels locale getdefault get default labels configureaction configure action this } @override @ override cangroup can group { cancombine can combine = getview get view getselectioncount get selection count > 1 if cancombine can combine { for figure f getview get view getselectedfigures get selected figures { if ! f instanceof svgpath s v g path { cancombine can combine = break } } } cancombine can combine } collection<figure> collection< figure> ungroupfigures ungroup figures drawingview drawing view view compositefigure composite figure group { linkedlist<figure> linked list< figure> figures = new linkedlist<figure> linked list< figure> group getchildren get children view clearselection clear selection group basicremoveallchildren basic remove all children linkedlist<figure> linked list< figure> paths = new linkedlist<figure> linked list< figure> for figure f figures { svgpath s v g path path = new svgpath s v g path path removeallchildren remove all children for map entry<attributekey entry< attribute key object> entry group getattributes get attributes entryset entry set { path basicsetattribute basic set attribute entry getkey get key entry getvalue get value } path add f view getdrawing get drawing basicadd basic add path paths add path } view getdrawing get drawing remove group view addtoselection add to selection paths figures } groupfigures group figures drawingview drawing view view compositefigure composite figure group collection<figure> collection< figure> figures { collection<figure> collection< figure> sorted = view getdrawing get drawing sort figures view getdrawing get drawing basicremoveall basic remove all figures view clearselection clear selection view getdrawing get drawing add group group willchange will change svgpath s v g path group removeallchildren remove all children for map entry<attributekey entry< attribute key object> entry figures iterator next getattributes get attributes entryset entry set { group basicsetattribute basic set attribute entry getkey get key entry getvalue get value } for figure f sorted { svgpath s v g path path = svgpath s v g path f for figure child path getchildren get children { group basicadd basic add child } } group changed view addtoselection add to selection group } } 