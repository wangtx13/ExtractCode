org jhotdraw gui import javax swing * import javax swing event * import awt * import beans * import org jhotdraw app action arrangeable mdidesktoppane m didesktop pane jdesktoppane j desktop pane implements arrangeable { private FRAME_OFFSET=20 private mdidesktopmanager m didesktop manager manager mdidesktoppane m didesktop pane { manager = new mdidesktopmanager m didesktop manager this setdesktopmanager set desktop manager manager setdragmode set drag mode jdesktoppane j desktop pane OUTLINE_DRAG_MODE setalignmentx set alignment x jcomponent j component LEFT_ALIGNMENT } setarrangement set arrangement arrangeable arrangement newvalue new value { arrangeable arrangement oldvalue old value = getarrangement get arrangement switch newvalue new value { case cascade c a s c a d e arrangeframescascading arrange frames cascading break case horizontal h o r i z o n t a l arrangeframeshorizontally arrange frames horizontally break case vertical v e r t i c a l arrangeframesvertically arrange frames vertically break } firepropertychange fire property change arrangement oldvalue old value newvalue new value } arrangeable arrangement getarrangement get arrangement { arrangeable arrangement cascade c a s c a d e } private arrangeframescascading arrange frames cascading { x = 0 y = 0 jinternalframe j internal frame allframes all frames = getallframes get all frames if allframes all frames length == 0 { } manager setnormalsize set normal size frameheight frame height = getbounds get bounds height 5 allframes all frames length * FRAME_OFFSET framewidth frame width = getbounds get bounds width 5 allframes all frames length * FRAME_OFFSET for i = allframes all frames length 1 i >= 0 i { try { allframes all frames i setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames i setbounds set bounds x y framewidth frame width frameheight frame height x = x + FRAME_OFFSET y = y + FRAME_OFFSET } checkdesktopsize check desktop size } private tileframeshorizontally tile frames horizontally { component allframes all frames = getallframes get all frames if allframes all frames length == 0 { } manager setnormalsize set normal size frameheight frame height = getbounds get bounds height/allframes height/all frames length y = 0 for i = 0 i < allframes all frames length i++ { try { jinternalframe j internal frame allframes all frames i setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames i setbounds set bounds 0 y getbounds get bounds width frameheight frame height y = y + frameheight frame height } checkdesktopsize check desktop size } tileframesvertically tile frames vertically { component allframes all frames = getallframes get all frames if allframes all frames length == 0 { } manager setnormalsize set normal size framewidth frame width = getbounds get bounds width/allframes width/all frames length x = 0 for i = 0 i < allframes all frames length i++ { try { jinternalframe j internal frame allframes all frames i setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames i setbounds set bounds x 0 framewidth frame width getbounds get bounds height x = x + framewidth frame width } checkdesktopsize check desktop size } arrangeframesvertically arrange frames vertically { component allframes all frames = getallframes get all frames if allframes all frames length == 0 { } manager setnormalsize set normal size vertframes vert frames = math floor math sqrt allframes all frames length horframes hor frames = math ceil math sqrt allframes all frames length framewidth frame width = getbounds get bounds width / horframes hor frames frameheight frame height = getbounds get bounds height / vertframes vert frames x = 0 y = 0 frameidx frame idx = 0 for horcnt hor cnt = 0 horcnt hor cnt < horframes hor frames 1 horcnt++ hor cnt++ { y = 0 for vertcnt vert cnt = 0 vertcnt vert cnt < vertframes vert frames vertcnt++ vert cnt++ { try { jinternalframe j internal frame allframes all frames frameidx frame idx setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames frameidx frame idx setbounds set bounds x y framewidth frame width frameheight frame height frameidx++ frame idx++ y = y + frameheight frame height } x = x + framewidth frame width } frameheight frame height = getbounds get bounds height / allframes all frames length frameidx frame idx y = 0 for frameidx frame idx < allframes all frames length frameidx++ frame idx++ { try { jinternalframe j internal frame allframes all frames frameidx frame idx setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames frameidx frame idx setbounds set bounds x y framewidth frame width frameheight frame height y = y + frameheight frame height } checkdesktopsize check desktop size } arrangeframeshorizontally arrange frames horizontally { component allframes all frames = getallframes get all frames if allframes all frames length == 0 { } manager setnormalsize set normal size vertframes vert frames = math ceil math sqrt allframes all frames length horframes hor frames = math floor math sqrt allframes all frames length framewidth frame width = getbounds get bounds width / horframes hor frames frameheight frame height = getbounds get bounds height / vertframes vert frames x = 0 y = 0 frameidx frame idx = 0 for vertcnt vert cnt = 0 vertcnt vert cnt < vertframes vert frames 1 vertcnt++ vert cnt++ { x = 0 for horcnt hor cnt = 0 horcnt hor cnt < horframes hor frames horcnt++ hor cnt++ { try { jinternalframe j internal frame allframes all frames frameidx frame idx setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames frameidx frame idx setbounds set bounds x y framewidth frame width frameheight frame height frameidx++ frame idx++ x = x + framewidth frame width } y = y + frameheight frame height } framewidth frame width = getbounds get bounds width / allframes all frames length frameidx frame idx x = 0 for frameidx frame idx < allframes all frames length frameidx++ frame idx++ { try { jinternalframe j internal frame allframes all frames frameidx frame idx setmaximum set maximum } catch propertyvetoexception property veto e { e printstacktrace print stack trace } allframes all frames frameidx frame idx setbounds set bounds x y framewidth frame width frameheight frame height x = x + framewidth frame width } checkdesktopsize check desktop size } setallsize set all size dimension d { setminimumsize set minimum size d setmaximumsize set maximum size d setpreferredsize set preferred size d setbounds set bounds 0 0 d width d height } setallsize set all size width height { setallsize set all size new dimension width height } private checkdesktopsize check desktop size { if getparent get parent != isvisible is visible { manager resizedesktop resize desktop } } } mdidesktopmanager m didesktop manager defaultdesktopmanager default desktop manager { private mdidesktoppane m didesktop pane desktop mdidesktopmanager m didesktop manager mdidesktoppane m didesktop pane newdesktop new desktop { this desktop = newdesktop new desktop } endresizingframe end resizing frame jcomponent j component f { super endresizingframe end resizing frame f resizedesktop resize desktop } enddraggingframe end dragging frame jcomponent j component f { super enddraggingframe end dragging frame f resizedesktop resize desktop } setnormalsize set normal size { jscrollpane j scroll pane scrollpane scroll pane = getscrollpane get scroll pane insets scrollinsets scroll insets = getscrollpaneinsets get scroll pane insets if scrollpane scroll pane != { dimension d = scrollpane scroll pane getvisiblerect get visible rect getsize get size if scrollpane scroll pane getborder get border != { d setsize set size d getwidth get width scrollinsets scroll insets left scrollinsets scroll insets right d getheight get height scrollinsets scroll insets top scrollinsets scroll insets bottom } d setsize set size d getwidth get width 20 d getheight get height 20 desktop setallsize set all size d scrollpane scroll pane invalidate scrollpane scroll pane validate } } private insets getscrollpaneinsets get scroll pane insets { jscrollpane j scroll pane scrollpane scroll pane = getscrollpane get scroll pane if scrollpane scroll pane == || getscrollpane get scroll pane getborder get border == { new insets 0 0 0 0 } else { getscrollpane get scroll pane getborder get border getborderinsets get border insets scrollpane scroll pane } } jscrollpane j scroll pane getscrollpane get scroll pane { if desktop getparent get parent instanceof jviewport j viewport { jviewport j viewport viewport view port = jviewport j viewport desktop getparent get parent if viewport view port getparent get parent instanceof jscrollpane j scroll pane jscrollpane j scroll pane viewport view port getparent get parent } } resizedesktop resize desktop { x = 0 y = 0 jscrollpane j scroll pane scrollpane scroll pane = getscrollpane get scroll pane insets scrollinsets scroll insets = getscrollpaneinsets get scroll pane insets if scrollpane scroll pane != { jinternalframe j internal frame allframes all frames = desktop getallframes get all frames for i = 0 i < allframes all frames length i++ { if allframes all frames i getx get x + allframes all frames i getwidth get width > x { x = allframes all frames i getx get x + allframes all frames i getwidth get width } if allframes all frames i gety get y + allframes all frames i getheight get height > y { y = allframes all frames i gety get y + allframes all frames i getheight get height } } dimension d=scrollpane d=scroll pane getvisiblerect get visible rect getsize get size if scrollpane scroll pane getborder get border != { d setsize set size d getwidth get width scrollinsets scroll insets left scrollinsets scroll insets right d getheight get height scrollinsets scroll insets top scrollinsets scroll insets bottom } if x <= d getwidth get width { x = d getwidth get width 20 } if y <= d getheight get height { y = d getheight get height 20 } desktop setallsize set all size x y scrollpane scroll pane invalidate scrollpane scroll pane validate } } } 