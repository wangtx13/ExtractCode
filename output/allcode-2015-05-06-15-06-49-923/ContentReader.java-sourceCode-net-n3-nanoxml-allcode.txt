net n3 nanoxml import io reader import io ioexception i o contentreader content reader reader { private ixmlreader i xml reader reader private buffer private bufferindex buffer index private ixmlentityresolver i xml entity resolver resolver contentreader content reader ixmlreader i xml reader reader ixmlentityresolver i xml entity resolver resolver buffer { this reader = reader this resolver = resolver this buffer = buffer this bufferindex buffer index = 0 } finalize throwable { this reader = this resolver = this buffer = super finalize } read char outputbuffer output buffer offset size ioexception i o { try { charsread chars read = 0 bufferlength buffer length = this buffer length if offset + size > outputbuffer output buffer length { size = outputbuffer output buffer length offset } while charsread chars read < size { str = char ch if this bufferindex buffer index >= bufferlength buffer length { str = xmlutil xml util read this reader ' ' ch = str charat char at 0 } else { ch = this buffer charat char at this bufferindex buffer index this bufferindex++ buffer index++ outputbuffer output buffer charsread chars read = ch charsread++ chars read++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' str length > 1 { if str charat char at 1 == '#' { ch = xmlutil xml util processcharliteral process char literal str } else { xmlutil xml util processentity process entity str this reader this resolver continue } } outputbuffer output buffer charsread chars read = ch charsread++ chars read++ } if charsread chars read == 0 { charsread chars read = 1 } charsread chars read } catch xmlparseexception xml parse e { throw new ioexception i o e getmessage get message } } close ioexception i o { try { bufferlength buffer length = this buffer length for { str = char ch if this bufferindex buffer index >= bufferlength buffer length { str = xmlutil xml util read this reader ' ' ch = str charat char at 0 } else { ch = this buffer charat char at this bufferindex buffer index this bufferindex++ buffer index++ continue } if ch == '<' { this reader unread ch break } if ch == ' ' str length > 1 { if str charat char at 1 != '#' { xmlutil xml util processentity process entity str this reader this resolver } } } } catch xmlparseexception xml parse e { throw new ioexception i o e getmessage get message } } } 