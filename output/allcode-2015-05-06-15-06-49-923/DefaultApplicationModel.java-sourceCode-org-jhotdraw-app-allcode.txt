org jhotdraw app import org jhotdraw beans * import util * import javax swing * defaultapplicationmodel default application model abstractbean bean implements applicationmodel application model { private hashmap<string hash map< action> actions private name private private copyright private projectclass project private projectclassname project name defaultapplicationmodel default application model { } setname set name newvalue new value { oldvalue old value = name name = newvalue new value firepropertychange fire property change name oldvalue old value newvalue new value } getname get name { name } setversion set newvalue new value { oldvalue old value = = newvalue new value firepropertychange fire property change oldvalue old value newvalue new value } getversion get { } setcopyright set copyright newvalue new value { oldvalue old value = copyright copyright = newvalue new value firepropertychange fire property change copyright oldvalue old value newvalue new value } getcopyright get copyright { copyright } setprojectclassname set project name newvalue new value { oldvalue old value = projectclassname project name projectclassname project name = newvalue new value firepropertychange fire property change projectclassname project name oldvalue old value newvalue new value } setprojectclass set project newvalue new value { oldvalue old value = projectclass project projectclass project = newvalue new value firepropertychange fire property change projectclass project oldvalue old value newvalue new value } getprojectclass get project { if projectclass project == { if projectclassname project name != { try { projectclass project = forname for name projectclassname project name } catch e { internalerror internal = new internalerror internal unable to get project initcause init cause e throw } } } projectclass project } project createproject create project { try { project getprojectclass get project newinstance new instance } catch e { internalerror internal = new internalerror internal unable to create project initcause init cause e throw } } list<jtoolbar> list< j tool bar> createtoolbars create tool bars application a project p { new linkedlist<jtoolbar> linked list< j tool bar> } list<jmenu> list< j menu> createmenus create menus application a project p { new linkedlist<jmenu> linked list< j menu> } initproject init project application a project p { } initapplication init application application a { } action getaction get action { actions == ? action actions get } putaction put action action action { if actions == { actions = new hashmap<string hash map< action> } if action == { actions remove } else { actions put action } } } 