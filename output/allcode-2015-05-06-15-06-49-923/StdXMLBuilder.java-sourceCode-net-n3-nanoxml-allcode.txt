net n3 nanoxml import io ioexception i o import io reader import util stack stdxmlbuilder std xml builder implements ixmlbuilder i xml builder { private stack stack private ixmlelement i xml element root private ixmlelement i xml element prototype stdxmlbuilder std xml builder { this new xmlelement xml element } stdxmlbuilder std xml builder ixmlelement i xml element prototype { this stack = this root = this prototype = prototype } finalize throwable { this prototype = this root = this stack clear this stack = super finalize } startbuilding start building systemid linenr line nr { this stack = new stack this root = } newprocessinginstruction new processing instruction target reader reader { } startelement start element name nsprefix ns prefix nsuri ns u r i systemid linenr line nr { fullname full name = name if nsprefix ns prefix != { fullname full name = nsprefix ns prefix + ' ' + name } ixmlelement i xml element elt = this prototype createelement create element fullname full name nsuri ns u r i systemid linenr line nr if this stack empty { this root = elt } else { ixmlelement i xml element top = ixmlelement i xml element this stack peek top addchild add child elt } this stack push elt } elementattributesprocessed element attributes processed name nsprefix ns prefix nsuri ns u r i { } endelement end element name nsprefix ns prefix nsuri ns u r i { ixmlelement i xml element elt = ixmlelement i xml element this stack pop if elt getchildrencount get children count == 1 { ixmlelement i xml element child = elt getchildatindex get child at index 0 if child getname get name == { elt setcontent set content child getcontent get content elt removechildatindex remove child at index 0 } } } addattribute add attribute key nsprefix ns prefix nsuri ns u r i value type { fullname full name = key if nsprefix ns prefix != { fullname full name = nsprefix ns prefix + ' ' + key } ixmlelement i xml element top = ixmlelement i xml element this stack peek if top hasattribute has attribute fullname full name { throw new xmlparseexception xml parse top getsystemid get systemid top getlinenr get line nr duplicate attribute + key } if nsprefix ns prefix != { top setattribute set attribute fullname full name nsuri ns u r i value } else { top setattribute set attribute fullname full name value } } addpcdata add p c data reader reader systemid linenr line nr { bufsize buf size = 2048 sizeread size read = 0 stringbuffer buffer str = new stringbuffer buffer bufsize buf size char buf = new char bufsize buf size for { if sizeread size read >= bufsize buf size { bufsize buf size *= 2 str ensurecapacity ensure capacity bufsize buf size } size try { size = reader read buf } catch ioexception i o e { break } if size < 0 { break } str append buf 0 size sizeread size read += size } ixmlelement i xml element elt = this prototype createelement create element systemid linenr line nr elt setcontent set content str tostring to if ! this stack empty { ixmlelement i xml element top = ixmlelement i xml element this stack peek top addchild add child elt } } getresult get result { this root } } 