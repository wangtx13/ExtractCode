org jhotdraw draw import awt * import awt geom * import awt event * import javax swing * import util * import org jhotdraw app action actions delegationselectiontool delegation selection tool selectiontool selection tool { private collection<action> collection< action> drawingactions drawing actions private collection<action> collection< action> selectionactions selection actions private javax swing timer popuptimer popup timer private jpopupmenu j popup menu popupmenu popup menu delegationselectiontool delegation selection tool { this new linkedlist<action> linked list< action> new linkedlist<action> linked list< action> } delegationselectiontool delegation selection tool collection<action> collection< action> drawingactions drawing actions collection<action> collection< action> selectionactions selection actions { this drawingactions drawing actions = drawingactions drawing actions this selectionactions selection actions = selectionactions selection actions } setdrawingactions set drawing actions collection<action> collection< action> drawingactions drawing actions { this drawingactions drawing actions = drawingactions drawing actions } setfigureactions set figure actions collection<action> collection< action> selectionactions selection actions { this selectionactions selection actions = selectionactions selection actions } mousepressed mouse pressed mouseevent mouse event evt { if popuptimer popup timer != { popuptimer popup timer stop popuptimer popup timer = } if evt ispopuptrigger is popup trigger { handlepopupmenu handle popup menu evt } else { super mousepressed mouse pressed evt popuptimer popup timer = new javax swing timer 1000 new actionlistener action listener { actionperformed action performed actionevent action event aevt { handlepopupmenu handle popup menu evt popuptimer popup timer = } } popuptimer popup timer setrepeats set repeats popuptimer popup timer start } } mousereleased mouse released mouseevent mouse event evt { if popuptimer popup timer != { popuptimer popup timer stop popuptimer popup timer = } super mousereleased mouse released evt if evt ispopuptrigger is popup trigger { handlepopupmenu handle popup menu evt } } mousedragged mouse dragged mouseevent mouse event evt { if popuptimer popup timer != { popuptimer popup timer stop popuptimer popup timer = } if popupmenu popup menu == || ! popupmenu popup menu isvisible is visible { super mousedragged mouse dragged evt } } mouseclicked mouse clicked mouseevent mouse event evt { super mouseclicked mouse clicked evt if evt getclickcount get click count == 2 { handledoubleclick handle click evt } } handlepopupmenu handle popup menu mouseevent mouse event evt { point p = new point evt getx get x evt gety get y figure figure = getview get view findfigure find figure p if figure != || drawingactions drawing actions size > 0 { showpopupmenu show popup menu figure p evt getcomponent get component } else { popupmenu popup menu = } } showpopupmenu show popup menu figure figure point p component c { jpopupmenu j popup menu menu = new jpopupmenu j popup menu popupmenu popup menu = menu jmenu j menu submenu = submenuname submenu name = linkedlist<action> linked list< action> popupactions popup actions = new linkedlist<action> linked list< action> if figure != { linkedlist<action> linked list< action> figureactions figure actions = new linkedlist<action> linked list< action> figure getactions get actions viewtodrawing view to drawing p if popupactions popup actions size != 0 figureactions figure actions size != 0 { popupactions popup actions add } popupactions popup actions addall add all figureactions figure actions if popupactions popup actions size != 0 selectionactions selection actions size != 0 { popupactions popup actions add } popupactions popup actions addall add all selectionactions selection actions } if popupactions popup actions size != 0 drawingactions drawing actions size != 0 { popupactions popup actions add } popupactions popup actions addall add all drawingactions drawing actions hashmap<object hash map< buttongroup> button group> buttongroups button groups = new hashmap<object hash map< buttongroup> button group> for action a popupactions popup actions { if a != a getvalue get value actions SUBMENU_KEY != { if submenuname submenu name == || ! submenuname submenu name equals a getvalue get value actions SUBMENU_KEY { submenuname submenu name = a getvalue get value actions SUBMENU_KEY submenu = new jmenu j menu submenuname submenu name menu add submenu } } else { submenuname submenu name = submenu = } if a == { if submenu != submenu addseparator add separator else menu addseparator add separator } else { abstractbutton button button if a getvalue get value actions BUTTON_GROUP_KEY != { buttongroup button group bg = buttongroups button groups get a getvalue get value actions BUTTON_GROUP_KEY if bg == { bg = new buttongroup button group buttongroups button groups put a getvalue get value actions BUTTON_GROUP_KEY bg } button = new jradiobuttonmenuitem j radio button menu item a bg add button button setselected set selected a getvalue get value actions SELECTED_KEY == true t r u e } else if a getvalue get value actions SELECTED_KEY != { button = new jcheckboxmenuitem j check box menu item a button setselected set selected a getvalue get value actions SELECTED_KEY == true t r u e } else { button = new jmenuitem j menu item a } if submenu != submenu add button else menu add button } } menu show c p x p y } handledoubleclick handle click mouseevent mouse event evt { drawingview drawing view v = getview get view point pos = new point evt getx get x evt gety get y handle handle = v findhandle find handle pos if handle != { handle trackdoubleclick track click pos evt getmodifiersex get modifiers ex } else { point2d point2 d p = viewtodrawing view to drawing pos figure outerfigure outer figure = getview get view findfigure find figure pos figure figure = outerfigure outer figure if figure != { tool figuretool figure tool = figure gettool get tool p if figuretool figure tool == { figure = getdrawing get drawing findfigureinside find figure inside p if figure != { figuretool figure tool = figure gettool get tool p } } if figuretool figure tool != { settracker set tracker figuretool figure tool figuretool figure tool mousepressed mouse pressed evt } else { if outerfigure outer figure handlemouseclick handle mouse click p evt getview get view { v clearselection clear selection v addtoselection add to selection outerfigure outer figure } else { v clearselection clear selection v addtoselection add to selection outerfigure outer figure v sethandledetaillevel set handle detail level v gethandledetaillevel get handle detail level + 1 } } } } } } 