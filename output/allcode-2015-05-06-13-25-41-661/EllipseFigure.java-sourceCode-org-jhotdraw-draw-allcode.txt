org jhotdraw draw import org jhotdraw geom geom import org jhotdraw util * import awt * import awt geom * import org jhotdraw draw attribute keys * ellipse figure attributed figure { private ellipse2 ellipse ellipse figure { this 0 0 0 0 } ellipse figure width height { ellipse = new ellipse2 width height set attribute enabled TEXT_COLOR } connector find connector point2 connection figure prototype { new chop ellipse connector this } connector find compatible connector connector start connector { new chop ellipse connector this } rectangle2 get bounds { rectangle2 ellipse get bounds2 } rectangle2 get figure draw bounds { rectangle2 = rectangle2 ellipse get bounds2 grow = attribute keys get perpendicular hit growth this geom grow grow grow } draw fill graphics2 { ellipse2 = ellipse2 ellipse clone grow = attribute keys get perpendicular fill growth this = grow = grow width += grow * 2 height += grow * 2 if width > 0 height > 0 { fill } } draw stroke graphics2 { ellipse2 = ellipse2 ellipse clone grow = attribute keys get perpendicular draw growth this = grow = grow width += grow * 2 height += grow * 2 if width > 0 height > 0 { draw } } contains point2 { ellipse2 = ellipse2 ellipse clone grow = attribute keys get perpendicular hit growth this = grow = grow width += grow * 2 height += grow * 2 contains } basic set bounds point2 anchor point2 { ellipse = math min anchor ellipse = math min anchor ellipse width = math max 0 1 math anchor ellipse height = math max 0 1 math anchor } basic transform affine transform tx { point2 anchor = get start point point2 = get point basic set bounds point2 tx transform anchor anchor point2 tx transform } ellipse figure clone { ellipse figure that = ellipse figure super clone that ellipse = ellipse2 this ellipse clone that } restore to geometry { ellipse2 = ellipse2 geometry ellipse = ellipse = ellipse width = width ellipse height = height } get restore data { ellipse clone } } 