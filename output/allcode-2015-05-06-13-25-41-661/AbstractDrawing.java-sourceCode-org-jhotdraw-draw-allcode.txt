org jhotdraw draw import org jhotdraw beans * import org jhotdraw undo * import org jhotdraw xml * import awt * import awt geom * import awt font * import javax swing * import javax swing event * import javax swing undo * import org jhotdraw util * import util * import * drawing bean implements drawing { private lock = new panel get tree lock event listener list listener list = new event listener list private font render context font render context drawing { } add drawing listener drawing listener listener { listener list add drawing listener listener } remove drawing listener drawing listener listener { listener list remove drawing listener listener } add undoable edit listener undoable edit listener { listener list add undoable edit listener } remove undoable edit listener undoable edit listener { listener list remove undoable edit listener } add all collection< figure> figures { composite edit edit = new composite edit figuren hinzuf\u00fcgen fire undoable edit happened edit for figure figures { add } fire undoable edit happened edit } clear { remove all get figures } get figure count { get figures size } remove all collection< figure> to be removed { composite edit edit = new composite edit figuren entfernen fire undoable edit happened edit for figure new list< figure> to be removed { remove } fire undoable edit happened edit } basic add all collection< figure> figures { for figure figures { basic add } } basic remove all collection< figure> to be orphaned { for figure new list< figure> to be orphaned { basic remove } } add figure figure { index = get figure count basic add index figure figure add notify this fire figure added figure fire undoable edit happened new undoable edit { get presentation { figur einf\u00fcgen } undo cannot undo { super undo basic remove figure figure remove notify drawing this fire figure removed figure } redo cannot undo { super redo basic add index figure figure add notify drawing this fire figure added figure } } } basic add figure figure { basic add get figure count figure } remove figure figure { if contains figure { index = index of figure basic remove figure figure remove notify this fire figure removed figure fire undoable edit happened new undoable edit { get presentation { figur entfernen } redo cannot undo { super redo basic remove figure figure remove notify drawing this fire figure removed figure } undo cannot undo { super undo basic add index figure figure add notify drawing this fire figure added figure } } } else { fire area invalidated figure get draw bounds } } index of figure figure fire area invalidated rectangle2 dirty region { drawing event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == drawing listener { if event == event = new drawing event this dirty region drawing listener listeners i+1 area invalidated event } } } fire undoable edit happened undoable edit edit { undoable edit event event = if listener list get listener count > 0 { listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if event == event = new undoable edit event this edit if listeners == undoable edit listener { undoable edit listener listeners i+1 undoable edit happened event } } } } fire figure added figure { drawing event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == drawing listener { if event == event = new drawing event this get draw bounds drawing listener listeners i+1 figure added event } } } fire figure removed figure { drawing event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == drawing listener { if event == event = new drawing event this get draw bounds drawing listener listeners i+1 figure removed event } } } font render context get font render context { font render context } set font render context font render context frc { font render context = frc } read dom input { open element figures for i=0 < get element count i++ { figure add = figure read } close element } write dom output out { out open element figures for figure get figures { out write } out close element } get lock { lock } } 