org jhotdraw draw import util collection import javax swing event * import awt * import awt event * import javax swing undo * import util * handle implements handle figure listener { private figure owner drawing view view event listener list listener list = new event listener list private rectangle bounds handle figure owner { this owner = owner owner add figure listener this } get handlesize { 7 } add handle listener handle listener { listener list add handle listener } remove handle listener handle listener { listener list remove handle listener } figure get owner { owner } set view drawing view view { this view = view } fire area invalidated rectangle invalidated area { handle event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == handle listener { if event == event = new handle event this invalidated area handle listener listeners i+1 area invalidated event } } } fire undoable edit happened undoable edit edit { view get drawing fire undoable edit happened edit } fire handle request remove rectangle invalidated area { handle event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == handle listener { if event == event = new handle event this invalidated area handle listener listeners i+1 handle request remove event } } } fire handle request secondary handles { handle event event = listeners = listener list get listener list for = listeners length 2 i>=0 =2 { if listeners == handle listener { if event == event = new handle event this handle listener listeners i+1 handle request secondary handles event } } } draw graphics2 { draw circle color white color black } draw circle graphics2 color fill color stroke { rectangle = get bounds set color fill fill oval width height set stroke new basic stroke set color stroke draw oval width height } draw rectangle graphics2 color fill color stroke { rectangle = get bounds set color fill fill set stroke new basic stroke set color stroke draw } draw diamond graphics2 color fill color stroke { rectangle = get bounds grow 1 1 polygon = new polygon add point + width / 2 add point + width + height / 2 add point + width / 2 + height add point + height / 2 add point + width / 2 set color fill fill set stroke new basic stroke set color stroke draw } contains point { get bounds contains } invalidate { fire area invalidated get draw bounds } dispose { owner remove figure listener this owner = } figure area invalidated figure event evt { update bounds } figure added figure event { } figure removed figure event { } figure request remove figure event { } figure changed figure event evt { update bounds } cursor get cursor { cursor get predefined cursor cursor MOVE_CURSOR } combinable with handle handle { get assignable from handle get } key typed key event evt { } key released key event evt { } key pressed key event evt { } rectangle get bounds { if bounds == { bounds = basic get bounds } rectangle bounds clone } rectangle get draw bounds { rectangle = get bounds grow 2 2 } rectangle basic get bounds update bounds { rectangle new bounds = basic get bounds if bounds == || ! new bounds equals bounds { if bounds != fire area invalidated get draw bounds bounds = new bounds fire area invalidated get draw bounds } } track click point modifiers { } figure attribute changed figure event { } view transform changed { bounds = } collection< handle> create secondary handles { collections empty list } } 