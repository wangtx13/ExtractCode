org jhotdraw draw import lang reflect * attribute key< t> { private key private default value private value allowed attribute key key { this key } attribute key key default value { this key default value } attribute key key default value value allowed { this key = key this default value = default value this value allowed = value allowed } get key { key } get default value { default value } get figure { value = get attribute this value == ! value allowed ? default value value } set figure value { if value == ! value allowed { new pointer value not allowed for attribute key +key } set attribute this value } basic set figure value { if value == ! value allowed { new pointer value not allowed for attribute key +key } basic set attribute this value } equals { if instanceof attribute key { attribute key that = attribute key that key equals this key } } hash { key hash } to { key } value allowed { value allowed } args { type variable = new attribute key< double> hey get get type 0 } assignable value { if value == { value allowed } try { = value } catch cast { } } } 