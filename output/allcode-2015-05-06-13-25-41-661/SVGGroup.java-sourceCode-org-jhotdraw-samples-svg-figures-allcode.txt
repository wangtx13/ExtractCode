org jhotdraw samples svg figures import awt geom * import * import util * import org jhotdraw draw * import org jhotdraw samples svg * import org jhotdraw xml * group group figure implements figure { group { util set defaults this } @ linked list< handle> create handles detail level { linked list< handle> handles if detail level == 0 { handles = linked list< handle> super create handles detail level handles add new rotate handle this } else { handles = new linked list< handle> } handles } @ read dom input { read attributes for i=0 = get element count < i++ { open element = get tag if equals pattern { close element } else if equals color profile { close element } else if equals defs { close element } else if equals use { close element } else if equals script { close element } else if equals filter { close element } else if equals title { close element } else if equals desc { close element } else if equals switch { close element } else if equals radial gradient { close element } else if equals linear gradient { close element } else { close element = read if instanceof drawing { group = new group will change for figure child drawing get figures { basic add child } changed if ! empty { add } } else if instanceof figure { if ! figure empty { add figure } } else { new unexpected child +f } } } affine transform tx = util get transform transform for figure child get children { child basic transform tx } invalidate bounds } read attributes dom input { util read attributes this } @ write dom output out { for figure child get children { out write child } write attributes out } write attributes dom output out { util write attributes this out } empty { get child count == 0 } to { builder buf = new builder buf append get get substring get get last index of ' ' +1 buf append '@' buf append hash if get child count > 0 { buf append ' ' for iterator< figure> = get children iterator has next { figure child = next buf append child if has next { buf append ' ' } } buf append ' ' } buf to } } 