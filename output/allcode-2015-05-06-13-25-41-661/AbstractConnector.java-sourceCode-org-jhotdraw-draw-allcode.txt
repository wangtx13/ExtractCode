org jhotdraw draw import import org jhotdraw util * import awt * import awt geom * import org jhotdraw geom * import org jhotdraw xml dom input import org jhotdraw xml dom output connector implements connector { private figure owner private connect to decorator private visible private state persistent connector { owner = } connector figure owner { this owner = owner } set connect to decorator new value { connect to decorator = new value } connect to decorator { connect to decorator } set visible new value { visible = new value } visible { visible } figure get connector target figure { connect to decorator get decorator != ? get decorator } contains point2 { get owner contains } draw graphics2 { if visible { rectangle2 bounds = get bounds ellipse2 circle = new ellipse2 bounds + bounds width / 2 3 bounds + bounds height / 2 3 6 6 set color color blue fill circle } } point2 find start connection figure connection { find point connection } point2 find connection figure connection { find point connection } point2 find point connection figure connection { geom center get bounds } rectangle2 get bounds { get owner get bounds } figure get owner { owner } set owner figure new value { owner = new value } clone { try { connector that = connector super clone that } catch clone not supported { internal = new internal to } } update start location point2 { } update location point2 { } point2 get anchor { geom center get bounds } update anchor point2 { } read dom input { if state persistent { connect to decorator = get attribute connect to decorator visible = get attribute visible } open element owner this owner = figure read 0 close element } write dom output out { if state persistent { if connect to decorator { out add attribute connect to decorator } if visible { out add attribute visible } } out open element owner out write get owner out close element } } 