org jhotdraw samples svg import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import netscape javascript * import org jhotdraw xml * live connect applet applet { private = 0 44 private = draw init { try { manager set look and feel manager get look and feel } catch throwable { } container = get content pane set layout new box layout box layout Y_AXIS lines = get applet info split \n for i=0 < lines length i++ { add new label lines } new swing worker { construct { result try { if get data != get data length > 0 { nano xml dom input domi = new nano xml dom input new figure factory new reader get data result = domi read 0 } else if get datafile != { input stream = try { url = new get document base get datafile = url open connection get input stream nano xml dom input domi = new nano xml dom input new figure factory result = domi read 0 } finally { if != close } } else { result = } } catch throwable { result = } result } finished { container = get content pane set layout new border layout remove all result = get value init components if result != { if result instanceof drawing { set drawing drawing result } else if result instanceof throwable { get drawing add new text figure result to throwable result stack trace } } live connect try { for netscape javascript live connect = } catch throwable { live connect = } load button set enabled live connect get dataread != save button set enabled live connect get datawrite != if live connect { = get dataread if index of ' ' > 0 { = substring 0 index of ' ' 1 } win = get window live connect applet this data = win call new 0 if data instanceof { set data data } } validate } } start } private set drawing drawing { drawing panel set drawing } private drawing get drawing { drawing panel get drawing } set data text { if text != text length > 0 { reader = new reader text try { nano xml dom input domi = new nano xml dom input new figure factory domi open element draw set drawing drawing domi read 0 } catch throwable { get drawing clear text figure tf = new text figure tf set text get message tf set bounds new point2 10 10 new point2 100 100 get drawing add tf stack trace } finally { if != close } } } get data { char writer out = new char writer try { nano xml dom output domo = new nano xml dom output new figure factory domo open element draw domo write get drawing domo close element domo save out } catch { text figure tf = new text figure tf set text get message tf set bounds new point2 10 10 new point2 100 100 get drawing add tf stack trace } finally { if out != out close } out to } get info { new { { data the data to be displayed by this applet } { datafile to containing the data to be displayed by this applet } { dataread function the of script function which can be used to read the data } { datawrite function the of script function which can be used to write the data } } } get applet info { e+ \n + + \n\n copyright 2004 \u00a9 werner randelshofer + \n alle rechte vorbehalten + \n\n diese software basiert auf + \n jhotdraw \u00a9 1996 1997 informatik und erich gamma } private init components { tool button group = new javax swing button group drawing panel = new org jhotdraw samples draw drawing panel tool bar1 = new javax swing tool bar load button = new javax swing button save button = new javax swing button get content pane add drawing panel awt border layout tool bar1 set floatable load button set text laden load button add action listener new awt event action listener { action performed awt event action event evt { load evt } } tool bar1 add load button save button set text speichern save button add action listener new awt event action listener { action performed awt event action event evt { save evt } } tool bar1 add save button get content pane add tool bar1 awt border layout } private save awt event action event evt { try { = get datawrite if index of ' ' > 0 { = substring 0 index of ' ' 1 } win = get window this result = win call new { get data } } catch throwable { text figure tf = new text figure fehler +t affine transform tx = new affine transform tx translate 10 20 tf transform tx get drawing add tf } } private load awt event action event evt { try { = get dataread if index of ' ' > 0 { = substring 0 index of ' ' 1 } win = get window this result = win call new 0 if result instanceof { set data result } } catch throwable { text figure tf = new text figure fehler +t affine transform tx = new affine transform tx translate 10 20 tf transform tx get drawing add tf } } private org jhotdraw samples draw drawing panel drawing panel private javax swing tool bar tool bar1 private javax swing button load button private javax swing button save button private javax swing button group tool button group } 