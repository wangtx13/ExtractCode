org jhotdraw draw import awt * import awt geom * import awt event * import javax swing * import util * import org jhotdraw app action actions delegation selection tool selection tool { private collection< action> drawing actions private collection< action> selection actions private javax swing timer popup timer private popup menu popup menu delegation selection tool { this new linked list< action> new linked list< action> } delegation selection tool collection< action> drawing actions collection< action> selection actions { this drawing actions = drawing actions this selection actions = selection actions } set drawing actions collection< action> drawing actions { this drawing actions = drawing actions } set figure actions collection< action> selection actions { this selection actions = selection actions } mouse pressed mouse event evt { if popup timer != { popup timer stop popup timer = } if evt popup trigger { handle popup menu evt } else { super mouse pressed evt popup timer = new javax swing timer 1000 new action listener { action performed action event aevt { handle popup menu evt popup timer = } } popup timer set repeats popup timer start } } mouse released mouse event evt { if popup timer != { popup timer stop popup timer = } super mouse released evt if evt popup trigger { handle popup menu evt } } mouse dragged mouse event evt { if popup timer != { popup timer stop popup timer = } if popup menu == || ! popup menu visible { super mouse dragged evt } } mouse clicked mouse event evt { super mouse clicked evt if evt get click count == 2 { handle click evt } } handle popup menu mouse event evt { point = new point evt get evt get figure figure = get view find figure if figure != || drawing actions size > 0 { show popup menu figure evt get component } else { popup menu = } } show popup menu figure figure point component { popup menu menu = new popup menu popup menu = menu menu submenu = submenu = linked list< action> popup actions = new linked list< action> if figure != { linked list< action> figure actions = new linked list< action> figure get actions view to drawing if popup actions size != 0 figure actions size != 0 { popup actions add } popup actions add all figure actions if popup actions size != 0 selection actions size != 0 { popup actions add } popup actions add all selection actions } if popup actions size != 0 drawing actions size != 0 { popup actions add } popup actions add all drawing actions hash map< button group> button groups = new hash map< button group> for action popup actions { if != get value actions SUBMENU_KEY != { if submenu == || ! submenu equals get value actions SUBMENU_KEY { submenu = get value actions SUBMENU_KEY submenu = new menu submenu menu add submenu } } else { submenu = submenu = } if == { if submenu != submenu add separator else menu add separator } else { button button if get value actions BUTTON_GROUP_KEY != { button group bg = button groups get get value actions BUTTON_GROUP_KEY if bg == { bg = new button group button groups put get value actions BUTTON_GROUP_KEY bg } button = new radio button menu item bg add button button set selected get value actions SELECTED_KEY == } else if get value actions SELECTED_KEY != { button = new check box menu item button set selected get value actions SELECTED_KEY == } else { button = new menu item } if submenu != submenu add button else menu add button } } menu show } handle click mouse event evt { drawing view = get view point pos = new point evt get evt get handle handle = find handle pos if handle != { handle track click pos evt get modifiers } else { point2 = view to drawing pos figure outer figure = get view find figure pos figure figure = outer figure if figure != { tool figure tool = figure get tool if figure tool == { figure = get drawing find figure inside if figure != { figure tool = figure get tool } } if figure tool != { set tracker figure tool figure tool mouse pressed evt } else { if outer figure handle mouse click evt get view { clear selection add to selection outer figure } else { clear selection add to selection outer figure set handle detail level get handle detail level + 1 } } } } } } 