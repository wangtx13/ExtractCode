org jhotdraw gui import awt * import awt event * import awt peer * import beans * import lang reflect * import javax swing * import javax swing event * import javax swing plaf * import org jhotdraw gui event * import org jhotdraw util * sheet dialog { event listener list listener list = new event listener list private component listener owner movement handler private point shift back location private point old location private component old focus owner private installed private animated = sheet frame owner { super owner init } sheet dialog owner { super owner init } private init { if get owner != show sheet { set undecorated get root pane set window decoration style root pane get root pane set border manager get border sheet border } owner movement handler = new component adapter { component moved component event evt { window owner = get owner point new location = owner get location if ! new location equals old location { set location new location + owner get width - get width / 2 new location + owner get insets top shift back location = old location = new location } } } } show sheet { manager get sheet show sheet } install sheet { if ! installed { window owner = get owner if owner != { point owner = owner get location point sheet if show sheet { if owner instanceof frame { sheet = new point owner + owner get width - get width / 2 owner + owner get insets top + frame owner get root pane get content pane get } else if owner instanceof dialog { sheet = new point owner + owner get width - get width / 2 owner + owner get insets top + dialog owner get root pane get content pane get } else { sheet = new point owner + owner get width - get width / 2 owner + owner get insets top } if sheet < 0 { owner set location owner - sheet owner sheet = 0 shift back location = owner old location = owner get location } else { shift back location = old location = owner } } else { sheet = new point owner + owner get width - get width / 2 owner + owner get height - get height / 2 } set location sheet old focus owner = owner get focus owner owner set focusable window state owner set enabled if manager get sheet show sheet { owner add component listener owner movement handler } else { if owner instanceof frame { set title frame owner get title } } } installed = } } uninstall sheet { if installed { window owner = get owner if owner != { owner set focusable window state owner set enabled owner remove component listener owner movement handler if shift back location != { owner set location shift back location } if old focus owner != { owner to front old focus owner request focus } } installed = } } add notify { super add notify if manager get sheet show sheet { ch randelshofer quaqua quaqua utilities set window alpha new { window integer } new {this 240} } } set animated new value { old value = animated animated = new value fire property change animated old value new value } animated { animated } dispose { super dispose uninstall sheet } hide0 { super hide } show0 { super show } hide { if animated show sheet { get content pane set visible rectangle start bounds = get bounds parent width = get parent get width rectangle bounds = new rectangle parent width < start bounds width ? start bounds + start bounds width - parent width / 2 start bounds start bounds math min start bounds width parent width 0 timer timer = new timer 20 timer add action listener new action listener { long start time long time action performed action event evt { long now = current time millis if start time == 0 { start time = now time = start time + 200 } if now > time { timer stop hide0 set bounds start bounds get content pane set visible uninstall sheet } else { float ratio = now - start time / float time - start time set bounds start bounds * 1f - ratio + bounds * ratio start bounds * 1f - ratio + bounds * ratio start bounds width * 1f - ratio + bounds width * ratio start bounds height * 1f - ratio + bounds height * ratio } } } timer set repeats timer set initial delay 5 timer start } else { hide0 uninstall sheet } } show { if animated show sheet { install sheet get content pane set visible long start time = current time millis long time = start time + 300 rectangle bounds = get bounds parent width = get parent get width rectangle start bounds = new rectangle parent width < bounds width ? bounds + bounds width - parent width / 2 bounds bounds math min bounds width parent width 0 set bounds start bounds show0 timer timer = new timer 20 timer add action listener new action listener { long start time long time action performed action event evt { long now = current time millis if start time == 0 { start time = now time = start time + 200 } if now > time { timer stop set bounds bounds get content pane set visible request focus window get parent to front } else { float ratio = now - start time / float time - start time set bounds start bounds * 1f - ratio + bounds * ratio start bounds * 1f - ratio + bounds * ratio start bounds width * 1f - ratio + bounds width * ratio start bounds height * 1f - ratio + bounds height * ratio } } } timer set repeats timer set initial delay 5 timer start } else { install sheet show0 } } add sheet listener sheet listener { listener list add sheet listener } remove sheet listener sheet listener { listener list remove sheet listener } fire option selected option pane pane { value = pane get value option if value == { option = option pane CLOSED_OPTION } else { if pane get options == { if value instanceof integer { option = integer value value } else { option = option pane CLOSED_OPTION } } else { option = option pane CLOSED_OPTION options = pane get options for = 0 = options length < i++ { if options equals value { option = break } } if option == option pane CLOSED_OPTION { value = } } } fire option selected pane option value pane get input value } fire option selected option pane pane option value input value { sheet event sheet event = listeners = listener list get listener list for = listeners length-2 i>=0 i-=2 { if listeners == sheet listener { if sheet event == sheet event = new sheet event this pane option value input value sheet listener listeners i+1 option selected sheet event } } } fire option selected chooser pane option { sheet event sheet event = listeners = listener list get listener list for = listeners length-2 i>=0 i-=2 { if listeners == sheet listener { if sheet event == sheet event = new sheet event this pane option sheet listener listeners i+1 option selected sheet event } } } show sheet option pane pane component parent component sheet listener listener { sheet sheet = create sheet pane parent component style from message type pane get message type sheet add sheet listener listener sheet show } show confirm sheet component parent component message sheet listener listener { show confirm sheet parent component message option pane YES_NO_CANCEL_OPTION listener } show confirm sheet component parent component message option type sheet listener listener { show confirm sheet parent component message option type option pane QUESTION_MESSAGE listener } show confirm sheet component parent component message option type message type sheet listener listener { show confirm sheet parent component message option type message type listener } show confirm sheet component parent component message option type message type icon icon sheet listener listener { show option sheet parent component message option type message type icon listener } show input sheet component parent component message sheet listener listener { show input sheet parent component message option pane QUESTION_MESSAGE listener } show input sheet component parent component message initial selection value sheet listener listener { show input sheet parent component message option pane QUESTION_MESSAGE initial selection value listener } show input sheet component parent component message message type sheet listener listener { show input sheet parent component message message type listener } show input sheet component parent component message message type icon icon selection values initial selection value sheet listener listener { option pane pane = new option pane message message type option pane OK_CANCEL_OPTION icon pane set wants input pane set selection values selection values pane set initial selection value initial selection value pane set component orientation parent component == ? option pane get root frame parent component get component orientation style = style from message type message type sheet sheet = create sheet pane parent component style pane select initial value sheet add sheet listener listener sheet show sheet to front } show message sheet component parent component message { show message sheet parent component message option pane INFORMATION_MESSAGE } show message sheet component parent component message sheet listener listener { show message sheet parent component message option pane INFORMATION_MESSAGE listener } show message sheet component parent component message message type { show message sheet parent component message message type } show message sheet component parent component message message type sheet listener listener { show message sheet parent component message message type listener } show message sheet component parent component message message type icon icon sheet listener listener { show option sheet parent component message option pane DEFAULT_OPTION message type icon listener } show option sheet component parent component message option type message type icon icon options initial value sheet listener listener { option pane pane = new option pane message message type option type icon options initial value pane set initial value initial value pane set component orientation parent component == ? option pane get root frame parent component get component orientation style = style from message type message type sheet sheet = create sheet pane parent component style pane select initial value sheet add sheet listener listener sheet show sheet to front } private style from message type message type { switch message type { case option pane ERROR_MESSAGE root pane ERROR_DIALOG case option pane QUESTION_MESSAGE root pane QUESTION_DIALOG case option pane WARNING_MESSAGE root pane WARNING_DIALOG case option pane INFORMATION_MESSAGE root pane INFORMATION_DIALOG case option pane PLAIN_MESSAGE default root pane PLAIN_DIALOG } } private sheet create sheet option pane pane component parent component style { window window = get window for component parent component sheet sheet if window instanceof frame { sheet = new sheet frame window } else { sheet = new sheet dialog window } container content pane = sheet get content pane content pane set layout new border layout content pane add pane border layout sheet set resizable sheet add window listener new window adapter { private got focus = count window closing window event we { pane set value } window closed window event we { if pane get value == option pane UNINITIALIZED_VALUE { sheet fire option selected pane } } window gained focus window event we { if !got focus { option pane ui = pane get if ui != { ui select initial value pane } got focus = } } } sheet add component listener new component adapter { component shown component event { pane set value option pane UNINITIALIZED_VALUE } } pane add property change listener new property change listener { property change property change event event { if sheet visible event get source == pane event get property equals option pane VALUE_PROPERTY event get new value != event get new value != option pane UNINITIALIZED_VALUE { sheet set visible sheet fire option selected pane } } } sheet sheet } window get window for component component parent component { if parent component == option pane get root frame if parent component instanceof frame || parent component instanceof dialog window parent component get window for component parent component get parent } show save sheet chooser chooser component parent sheet listener listener { chooser set dialog type chooser SAVE_DIALOG show sheet chooser parent listener } show open sheet chooser chooser component parent sheet listener listener { chooser set dialog type chooser OPEN_DIALOG show sheet chooser parent listener } show sheet chooser chooser component parent approve button text sheet listener listener { if approve button text != { chooser set approve button text approve button text chooser set dialog type chooser CUSTOM_DIALOG } frame frame = parent instanceof frame ? frame parent frame swing utilities get ancestor of frame parent title = chooser get get dialog title chooser chooser get accessible context set accessible description title sheet sheet = new sheet frame sheet add sheet listener listener container content pane = sheet get content pane content pane set layout new border layout content pane add chooser border layout action listener action listener = new action listener { action performed action event evt { option if evt get action command equals approve selection { option = chooser APPROVE_OPTION } else { option = chooser CANCEL_OPTION } sheet hide sheet fire option selected chooser option chooser remove action listener this } } chooser add action listener action listener sheet add window listener new window adapter { window closing window event { sheet fire option selected chooser chooser CANCEL_OPTION chooser remove action listener action listener } } chooser rescan current directory sheet sheet show sheet to front } } 