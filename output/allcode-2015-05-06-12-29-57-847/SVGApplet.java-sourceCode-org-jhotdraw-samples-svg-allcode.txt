org jhotdraw samples svg import org jhotdraw draw * import org jhotdraw draw action * import org jhotdraw util * import awt * import awt geom * import awt event * import * import net * import util * import javax swing * import javax swing event * import org jhotdraw xml * applet applet { private = 0 1 private = draw private panel drawing panel get { try { super get } catch pointer { } } init { try { manager set look and feel manager get look and feel } catch throwable { } container = get content pane set layout new box layout box layout Y_AXIS labels = get applet info split \n for i=0 < labels length i++ { add new label labels length == 0 ? labels } new swing worker { construct { result try { out get datafile +get datafile if get data != { nano xml dom input domi = new nano xml dom input new figure factory new reader get data result = domi read 0 } else if get datafile != { input stream = try { url = new get document base get datafile = url open connection get input stream nano xml dom input domi = new nano xml dom input new figure factory result = domi read 0 } finally { if != close } } else { result = } } catch throwable { result = } result } finished { if get value instanceof throwable { throwable get value stack trace } container = get content pane set layout new border layout remove all add drawing panel = new panel result = get value init components if result != { if result instanceof drawing { set drawing drawing result } else if result instanceof throwable { get drawing add new text figure result to throwable result stack trace } } validate } } start } private set drawing drawing { drawing panel set drawing } private drawing get drawing { drawing panel get drawing } set data text { if text != text length > 0 { reader = new reader text try { nano xml dom input domi = new nano xml dom input new figure factory domi open element draw set drawing drawing domi read 0 } catch throwable { get drawing clear text figure tf = new text figure tf set text get message tf set bounds new point2 10 10 new point2 100 100 get drawing add tf stack trace } finally { if != close } } } get data { char writer out = new char writer try { nano xml dom output domo = new nano xml dom output new figure factory domo open element draw domo write get drawing domo close element domo save out } catch { text figure tf = new text figure tf set text get message tf set bounds new point2 10 10 new point2 100 100 get drawing add tf stack trace } finally { if out != out close } out to } get info { new { { data the data to be displayed by this applet } { datafile to containing the data to be displayed by this applet } } } get applet info { e+ \n + + \n\n copyright \u00a9 2004-2006 \u00a9 werner randelshofer + \n alle rights reserved + \n\n this software based + \n jhotdraw \u00a9 1996-1997 informatik und erich gamma + \n + \n script can access the drawing data using the set data and get data } private init components { tool button group = new javax swing button group } mainx args { swing utilities later new runnable { run { frame = new frame draw applet set default close operation frame EXIT_ON_CLOSE applet = new applet get content pane add init set size 500 300 set visible start } } } private javax swing button group tool button group } 