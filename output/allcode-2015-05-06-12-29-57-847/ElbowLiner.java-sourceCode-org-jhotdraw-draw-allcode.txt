org jhotdraw draw import util * import awt * import awt geom * import org jhotdraw geom * import org jhotdraw xml dom input import org jhotdraw xml dom output import org jhotdraw xml dom storable elbow liner implements liner dom storable { elbow liner { } collection< handle> create handles bezier path path { } lineout connection figure figure { bezier path path = line connection figure figure get bezier path connector start = figure get start connector connector = figure get connector if start == || == || path == { } point2 = start find start figure point2 = find figure path clear path add new bezier path node if == || == { path add new bezier path node } else { rectangle2 sb = start get bounds sb += 5d sb += 5d sb width -= 10d sb height -= 10d rectangle2 eb = get bounds eb += 5d eb += 5d eb width -= 10d eb height -= 10d soutcode = sb outcode if soutcode == 0 { soutcode = geom outcode sb eb } eoutcode = eb outcode if eoutcode == 0 { eoutcode = geom outcode eb sb } if soutcode geom OUT_TOP | geom OUT_BOTTOM != 0 eoutcode geom OUT_TOP | geom OUT_BOTTOM != 0 { path add new bezier path node + /2 path add new bezier path node + /2 } else if soutcode geom OUT_LEFT | geom OUT_RIGHT != 0 eoutcode geom OUT_LEFT | geom OUT_RIGHT != 0 { path add new bezier path node + /2 path add new bezier path node + /2 } path add new bezier path node } path invalidate path } read dom input { } write dom output out { } liner clone { try { liner super clone } catch clone not supported { internal = new internal get message init cause } } } 