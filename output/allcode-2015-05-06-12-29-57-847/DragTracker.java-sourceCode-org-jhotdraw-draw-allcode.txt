org jhotdraw draw import awt * import awt geom * import awt event * import util * drag tracker tool { figure anchor figure point2 old point point2 anchor point private dragging drag tracker figure figure { anchor figure = figure } mouse moved mouse event evt { update cursor editor find view container evt get source new point evt get evt get } mouse pressed mouse event evt { super mouse pressed evt drawing view view = get view if evt shift down { view set handle detail level 0 view toggle selection anchor figure if ! view figure selected anchor figure { anchor figure = } } else if ! view figure selected anchor figure { view set handle detail level 0 view clear selection view add to selection anchor figure } point2 origin = new point2 MAX_VALUE MAX_VALUE for figure view get selected figures { rectangle2 = get bounds origin = math min origin origin = math min origin } point2 constrained origin = view get constrainer constrain point new point2 origin origin old point = view get constrainer constrain point view view to drawing new point evt get evt get old point += origin - constrained origin old point += origin - constrained origin anchor point = old point } mouse dragged mouse event evt { drawing view view = get view if dragging = { dragging = update cursor editor find view container evt get source new point evt get evt get } point2 new point = view get constrainer constrain point view view to drawing new point evt get evt get affine transform tx = new affine transform tx translate new point - old point new point - old point for figure view get selected figures { will change basic transform tx changed } old point = new point } mouse released mouse event evt { super mouse released evt dragging = = evt get = evt get update cursor editor find view container evt get source new point evt get evt get point2 = get view get constrainer constrain point get view view to drawing new point collection< figure> dragged figures = new linked list get view get selected figures figure drop target = get drawing find figure dragged figures if drop target != { snap back = drop target handle drop dragged figures get view if snap back { affine transform tx = new affine transform tx translate anchor point - old point anchor point - old point for figure dragged figures { will change basic transform tx changed } } else { affine transform tx = new affine transform tx translate -anchor point + old point -anchor point + old point if ! tx identity { get drawing fire undoable edit happened new transform edit dragged figures tx } } } else { affine transform tx = new affine transform tx translate -anchor point + old point -anchor point + old point if ! tx identity { get drawing fire undoable edit happened new transform edit dragged figures tx } } fire tool done } } 