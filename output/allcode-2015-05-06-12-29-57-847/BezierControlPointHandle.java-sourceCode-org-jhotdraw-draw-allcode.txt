org jhotdraw draw import org jhotdraw util * import org jhotdraw undo * import awt * import awt event * import awt geom * import util * import org jhotdraw geom * bezier control point handle handle { index control point index private composite edit edit bezier control point handle bezier figure owner index coord { super owner this index = index this control point index = coord } bezier figure get bezier figure { bezier figure get owner } point get location { get bezier figure get point count > index ? view drawing to view get bezier figure get point index control point index new point 10 10 } draw graphics2 { bezier figure = get bezier figure if get point count > index { bezier path node = get node index if keep colinear mask == bezier path C1C2_MASK index > 0 index < get node count || closed { draw circle color white color blue } else { draw circle color blue color white } set color color blue draw new line2 view drawing to view new point2 0 0 view drawing to view new point2 control point index control point index } } rectangle basic get bounds { rectangle = new rectangle get location grow get handlesize / 2 get handlesize / 2 } track start point anchor modifiers { view get drawing fire undoable edit happened edit = new composite edit punkt verschieben point2 location = view get constrainer constrain point view view to drawing get location point2 = view get constrainer constrain point view view to drawing anchor } track step point anchor point modifiers { bezier figure figure = get bezier figure point2 = view get constrainer constrain point view view to drawing bezier path node = figure get node index fire area invalidated figure will change if ! keep colinear { figure basic set point index control point index } else { = math + math atan2 - 0 - 0 c2 = control point index == 1 ? 2 1 = math sqrt c2 - 0 * c2 - 0 + c2 - 0 * c2 - 0 sina = math sin cosa = math cos point2 p2 = new point2 * cosa + 0 * sina + 0 figure basic set point index control point index figure basic set point index c2 p2 } figure changed fire area invalidated figure get node index } private fire area invalidated bezier path node { rectangle2 dr = new rectangle2 0 0 0 0 for i=1 < 3 i++ { dr add } rectangle vr = view drawing to view dr vr grow get handlesize get handlesize fire area invalidated vr } track point anchor point modifiers { bezier figure figure = get bezier figure if modifiers input event META_DOWN_MASK | input event CTRL_DOWN_MASK != 0 { figure will change bezier path node = figure get node index keep colinear = ! keep colinear if keep colinear { point2 = figure get point index control point index = math + math atan2 - 0 - 0 c2 = control point index == 1 ? 2 1 = math sqrt c2 - 0 * c2 - 0 + c2 - 0 * c2 - 0 sina = math sin cosa = math cos point2 p2 = new point2 * cosa + 0 * sina + 0 c2 = p2 c2 = p2 } figure set node index figure changed } view get drawing fire undoable edit happened edit } combinable with handle { if super combinable with { bezier control point handle that = bezier control point handle that index == this index that control point index == this control point index that get bezier figure get node count == this get bezier figure get node count } } } 