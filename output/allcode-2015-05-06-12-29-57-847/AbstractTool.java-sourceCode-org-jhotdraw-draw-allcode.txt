org jhotdraw draw import org jhotdraw undo composite edit import awt * import awt geom * import awt event * import javax swing event * import util * tool implements tool { private active working drawing editor editor point anchor = new point event listener list listener list = new event listener list tool { } add undoable edit listener undoable edit listener { listener list add undoable edit listener } remove undoable edit listener undoable edit listener { listener list remove undoable edit listener } activate drawing editor editor { this editor = editor active = } deactivate drawing editor editor { this editor = editor active = } active { active } drawing view get view { editor get view } drawing editor get editor { editor } drawing get drawing { get view get drawing } point2 view to drawing point { constrain point get view view to drawing } point2 constrain point point { constrain point get view view to drawing } point2 constrain point point2 { get view get constrainer constrain point } edit delete { get view get drawing remove all get view get selected figures } edit cut { } edit copy { } edit duplicate { } edit paste { } key released key event evt { fire tool done } key typed key event evt { } key pressed key event evt { if evt get source instanceof container { editor set view editor find view container evt get source } composite edit edit switch evt get key { case key event VK_DELETE case key event VK_BACK_SPACE { edit delete break } case key event VK_A { if evt get modifiers key event CTRL_MASK | key event META_MASK != 0 { get view add to selection get view get drawing get figures } break } case key event VK_LEFT { collection< figure> figures = get view get selected figures affine transform tx = new affine transform tx translate -1 0 for figure figures { will change basic transform tx changed } get drawing fire undoable edit happened new transform edit figures tx break } case key event VK_RIGHT { collection< figure> figures = get view get selected figures affine transform tx = new affine transform tx translate 1 0 for figure figures { will change basic transform tx changed } get drawing fire undoable edit happened new transform edit figures tx break } case key event VK_UP { collection< figure> figures = get view get selected figures affine transform tx = new affine transform tx translate 0 -1 for figure figures { will change basic transform tx changed } get drawing fire undoable edit happened new transform edit figures tx break } case key event VK_DOWN { collection< figure> figures = get view get selected figures get drawing fire undoable edit happened edit = new composite edit figur verschieben affine transform tx = new affine transform tx translate 0 1 for figure figures { will change basic transform tx changed } get drawing fire undoable edit happened new transform edit figures tx break } } } mouse clicked mouse event evt { } mouse entered mouse event evt { if ! working { editor set view editor find view container evt get source } } mouse exited mouse event evt { } mouse moved mouse event evt { } mouse pressed mouse event evt { drawing view view = editor find view container evt get source view request focus anchor = new point evt get evt get working = fire tool started view } mouse released mouse event evt { working = } add tool listener tool listener { listener list add tool listener } remove tool listener tool listener { listener list remove tool listener } fire tool started drawing view view { tool event event = listeners = listener list get listener list for = listeners length-2 i>=0 i-=2 { if listeners == tool listener { if event == event = new tool event this view new rectangle 0 0 -1 -1 tool listener listeners i+1 tool started event } } } fire tool done { tool event event = listeners = listener list get listener list for = listeners length-2 i>=0 i-=2 { if listeners == tool listener { if event == event = new tool event this get view new rectangle 0 0 -1 -1 tool listener listeners i+1 tool done event } } } fire area invalidated rectangle2 { point p1 = get view drawing to view new point2 point p2 = get view drawing to view new point2 x+r width y+r height fire area invalidated new rectangle p1 p1 p2 x-p1 p2 y-p1 } fire area invalidated rectangle invalidated area { tool event event = listeners = listener list get listener list for = listeners length-2 i>=0 i-=2 { if listeners == tool listener { if event == event = new tool event this get view invalidated area tool listener listeners i+1 area invalidated event } } } draw graphics2 { } update cursor drawing view view point { handle handle = view find handle if handle != { view set cursor handle get cursor } else { figure figure = view find figure if figure != { view set cursor figure get cursor view view to drawing } else { view set cursor cursor get default cursor } } } } 