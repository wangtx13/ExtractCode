org jhotdraw app action import org jhotdraw gui * import org jhotdraw gui event * import org jhotdraw util * import awt * import awt event * import util * import javax swing * import * import org jhotdraw app application import org jhotdraw app project exit action application action { = exit private component old focus owner private project unsaved project exit action application app { super app resource bundle util labels = resource bundle util get bundle org jhotdraw app labels labels configure action this } action performed action event evt { application app = get application if app enabled { app set enabled unsaved projects count = 0 project document to be reviewed = for project app projects { if has unsaved changes { if enabled { document to be reviewed = } unsaved projects count++ } } if unsaved projects count > 0 document to be reviewed == { app set enabled } switch unsaved projects count { case 0 { exit break } case 1 { unsaved project = document to be reviewed old focus owner = swing utilities get window ancestor unsaved project get component get focus owner unsaved project set enabled option pane pane = new option pane <html> + manager get option pane css + <b> you want to save changes to this document + before exiting?</b><p> + if you don't save your changes will be lost option pane WARNING_MESSAGE options = { save cancel don't save } pane set options options pane set initial value options 0 pane put client property quaqua option pane destructive option new integer 2 sheet show sheet pane unsaved project get component new sheet listener { option selected sheet event evt { value = evt get value if value == || value equals cancel { unsaved project set enabled app set enabled } else if value equals don't save { exit unsaved project set enabled } else if value equals save { save changes } } } break } default { option pane pane = new option pane <html> + manager get option pane css + <b> you have +unsaved projects count+ documents with unsaved changes + you want to + review these changes before quitting?</b><p> + if you don't review your documents + all your changes will be lost option pane QUESTION_MESSAGE options = { review changes cancel discard changes } pane set options options pane set initial value options 0 pane put client property quaqua option pane destructive option new integer 2 dialog dialog = pane create dialog app get component dialog set visible value = pane get value if value == || value equals cancel { app set enabled } else if value equals discard changes { exit app set enabled } else if value equals review changes { unsaved project = document to be reviewed review changes } } } } } save changes { if unsaved project get == { chooser chooser = unsaved project get save chooser sheet show save sheet chooser unsaved project get component new sheet listener { option selected sheet event evt { if evt get option == chooser APPROVE_OPTION { = evt get chooser get selected save to } else { unsaved project set enabled if old focus owner != { old focus owner request focus } get application set enabled } } } } else { save to unsaved project get } } review changes { if unsaved project enabled { old focus owner = swing utilities get window ancestor unsaved project get component get focus owner unsaved project set enabled option pane pane = new option pane <html> + manager get option pane css + <b> you want to save changes to this document + before exiting?</b><p> + if you don't save your changes will be lost option pane WARNING_MESSAGE options = { save cancel don't save } pane set options options pane set initial value options 0 pane put client property quaqua option pane destructive option new integer 2 sheet show sheet pane unsaved project get component new sheet listener { option selected sheet event evt { value = evt get value if value == || value equals cancel { unsaved project set enabled get application set enabled } else if value equals don't save { get application dispose unsaved project review next } else if value equals save { save changes and review next } } } } else { get application set enabled out review silently aborted } } save changes and review next { if unsaved project get == { chooser chooser = unsaved project get save chooser sheet show save sheet chooser unsaved project get component new sheet listener { option selected sheet event evt { if evt get option == chooser APPROVE_OPTION { = evt get chooser get selected save to and review next } else { unsaved project set enabled if old focus owner != { old focus owner request focus } get application set enabled } } } } else { save to and review next unsaved project get } } review next { unsaved projects count = 0 project document to be reviewed = for project get application projects { if has unsaved changes { if enabled { document to be reviewed = } unsaved projects count++ } } if unsaved projects count == 0 { exit } else if document to be reviewed != { unsaved project = document to be reviewed review changes } else { get application set enabled } } save to { unsaved project execute new worker { construct { try { unsaved project write } catch { } } finished value { saved unsaved project value } } } save to and review next { unsaved project execute new worker { construct { try { unsaved project write } catch { } } finished value { saved and review next unsaved project value } } } saved project unsaved project value { if value == { unsaved project set exit } else { sheet show message sheet unsaved project get component <html> + manager get option pane css + <b> couldn't save to the \ +file+ \ <p> + reason +value option pane ERROR_MESSAGE } unsaved project set enabled if old focus owner != { old focus owner request focus } get application set enabled } saved and review next project unsaved project value { if value == { unsaved project set get application dispose unsaved project review next } else { sheet show message sheet unsaved project get component <html> + manager get option pane css + <b> couldn't save to the \ +file+ \ <p> + reason +value option pane ERROR_MESSAGE } unsaved project set enabled if old focus owner != { old focus owner request focus } get application set enabled } exit { get application stop exit 0 } } 