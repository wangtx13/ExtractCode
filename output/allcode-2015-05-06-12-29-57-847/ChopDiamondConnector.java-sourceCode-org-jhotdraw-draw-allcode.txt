org jhotdraw draw import awt * import awt geom * import org jhotdraw draw attribute keys * import org jhotdraw geom * chop diamond connector chop box connector { chop diamond connector { } chop diamond connector figure owner { super owner } point2 chop figure target point2 from { target = get connector target target rectangle2 = target get bounds if diamond figure IS_QUADRATIC get target { side = math max width height -= side - width / 2 -= side - height / 2 width = height = side } growx growy switch STROKE_PLACEMENT get target { case sid { growx = growy = 0f break } case sid { line length = math sqrt width * width + height * height scale = get stroke total width target * 2d / line length growx = scale * height growy = scale * width break } case default line length = math sqrt width * width + height * height scale = get stroke total width target / line length growx = scale * height growy = scale * width break } geom grow growx growy point2 c1 = new point2 + width/2 + height/2 point2 p2 = new point2 + width/2 + height point2 p4 = new point2 + width/2 if contains from { if from > from < +r height/2 { p2 } else { p4 } } ang = geom point to angle from point2 p1 = new point2 + width + height/2 point2 p3 = new point2 + height/2 point2 rp = if ang > 0 ang < 1 57 { rp = geom intersect p1 p1 p2 p2 c1 c1 from from } else if ang > 1 575 ang < 3 14 { rp = geom intersect p2 p2 p3 p3 c1 c1 from from } else if ang > -3 14 ang < -1 575 { rp = geom intersect p3 p3 p4 p4 c1 c1 from from } else if ang > -1 57 ang < 0 { rp = geom intersect p4 p4 p1 p1 c1 c1 from from } if rp == { rp = geom angle to point ang } rp } } 